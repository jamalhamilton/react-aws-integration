{"ast":null,"code":"import _classCallCheck from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Container,Row,Col,Button,Form}from\"react-bootstrap\";import{Divider}from'rsuite';import config from\"../config/front_config\";var RegisterForm=/*#__PURE__*/function(_React$Component){_inherits(RegisterForm,_React$Component);var _super=_createSuper(RegisterForm);function RegisterForm(){var _this;_classCallCheck(this,RegisterForm);_this=_super.call(this);_this.state={userInfo:{candidate_name_first:'',candidate_name_last:'',candidate_email:'',date_of_interview:'',social_link:'',interviewer_name_first:'',interviewer_name_last:'',interviewer_email:''}};_this.sendEmail=_this.sendEmail.bind(_assertThisInitialized(_this));_this.registerUserData=_this.registerUserData.bind(_assertThisInitialized(_this));_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(RegisterForm,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(config.api.getUsers);}},{key:\"sendEmail\",value:function sendEmail(){}},{key:\"registerUserData\",value:function registerUserData(e){e.preventDefault();var userInfo=this.state.userInfo;console.log('------ userInfo: ',userInfo);console.log('------ userInfo: ',userInfo);fetch(config.api.registerUser,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify(userInfo)}).then(function(res){return res.json();}).then(function(data){if(data.status){fetch(config.api.sendMail,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify({token:data.token})});}console.log('data',data.data);});// fetch(config.api.sendMail, {\n//     headers: { 'Content-Type': 'application/json' },\n//     method: \"POST\",\n//     body: JSON.stringify({\n//         token: '7DtjnxcKzKw8HtVkoWnH'\n//     }),\n// });\n}},{key:\"handleChange\",value:function handleChange(e){var fname=e.target.name;var value=e.target.value;var userInfo=this.state.userInfo;userInfo[fname]=value;this.state.userInfo=userInfo;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Container,{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:50}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Step 1. Register New User\"))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Form,{style:{textAlign:\"left\"}},/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"Candidate Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"\",name:\"candidate_name_first\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"First Name\")),/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"\\xA0\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"\",name:\"candidate_name_last\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Last Name\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"Candidate Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"\",name:\"candidate_email\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"example@example.com\")),/*#__PURE__*/React.createElement(Col,null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"Date Of Interview\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"date\",placeholder:\"\",dateformat:\"YYYY-MM-DD\",name:\"date_of_interview\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Date\")),/*#__PURE__*/React.createElement(Col,null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"Zoom, Skype, Bluejeans, Hirevue link\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"\",name:\"social_link\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"http://www.zoom.us/1234567890\")),/*#__PURE__*/React.createElement(Col,null)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"Interviewer's Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"\",name:\"interviewer_name_first\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"First Name\")),/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"\\xA0\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"\",name:\"interviewer_name_last\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"Last Name\"))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,onChange:this.handleChange},/*#__PURE__*/React.createElement(Form.Label,null,\"Interviewer's Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"\",name:\"interviewer_email\"}),/*#__PURE__*/React.createElement(Form.Text,{className:\"text-muted\"},\"example@example.com\")),/*#__PURE__*/React.createElement(Col,null)),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30,marginBottom:30,textAlign:'center'}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\",onClick:this.registerUserData},\"Submit\"))))));}}]);return RegisterForm;}(React.Component);export{RegisterForm as default};","map":{"version":3,"sources":["/var/www/interverify/frontend/src/components/RegisterForm.js"],"names":["React","Container","Row","Col","Button","Form","Divider","config","RegisterForm","state","userInfo","candidate_name_first","candidate_name_last","candidate_email","date_of_interview","social_link","interviewer_name_first","interviewer_name_last","interviewer_email","sendEmail","bind","registerUserData","handleChange","console","log","api","getUsers","e","preventDefault","fetch","registerUser","headers","method","body","JSON","stringify","then","res","json","data","status","sendMail","token","fname","target","name","value","textAlign","marginTop","marginBottom","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { Divider } from 'rsuite';\r\n\r\nimport config from \"../config/front_config\";\r\n\r\nexport default class RegisterForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            userInfo: {\r\n                candidate_name_first: '',\r\n                candidate_name_last: '',\r\n                candidate_email: '',\r\n\r\n                date_of_interview: '',\r\n                social_link: '',\r\n\r\n                interviewer_name_first: '',\r\n                interviewer_name_last: '',\r\n                interviewer_email: '',\r\n            },\r\n        };\r\n\r\n        this.sendEmail = this.sendEmail.bind(this);\r\n        this.registerUserData = this.registerUserData.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(config.api.getUsers);\r\n    }\r\n\r\n    sendEmail() {\r\n\r\n    }\r\n\r\n    registerUserData(e) {\r\n        e.preventDefault();\r\n        var { userInfo } = this.state;\r\n\r\n        console.log('------ userInfo: ', userInfo);\r\n        console.log('------ userInfo: ', userInfo);\r\n        fetch(config.api.registerUser,{\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify(userInfo)\r\n        }).then(res => res.json()).then(data => {\r\n            if(data.status){\r\n                fetch(config.api.sendMail, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token: data.token\r\n                    }),\r\n                });\r\n            }\r\n            console.log('data', data.data)\r\n        });\r\n        \r\n        // fetch(config.api.sendMail, {\r\n        //     headers: { 'Content-Type': 'application/json' },\r\n        //     method: \"POST\",\r\n        //     body: JSON.stringify({\r\n        //         token: '7DtjnxcKzKw8HtVkoWnH'\r\n        //     }),\r\n        // });\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        var fname = e.target.name;\r\n        var value = e.target.value;\r\n        var { userInfo } = this.state;\r\n        userInfo[fname] = value;\r\n\r\n        this.state.userInfo = userInfo;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                <div>\r\n                    <Row style={{ marginTop: 50 }}>\r\n                        <Col>\r\n                            <h1>\r\n                                Step 1. Register New User\r\n                                </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider />\r\n                    <Form style={{ textAlign: \"left\" }}>\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <Form.Label>Candidate Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"candidate_name_first\" />\r\n                                <Form.Text className=\"text-muted\">First Name</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"candidate_name_last\" />\r\n                                <Form.Text className=\"text-muted\">Last Name</Form.Text>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Candidate Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"\"\r\n                                    name=\"candidate_email\" />\r\n                                <Form.Text className=\"text-muted\">example@example.com</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Date Of Interview</Form.Label>\r\n                                <Form.Control type=\"date\" placeholder=\"\"\r\n                                    dateformat=\"YYYY-MM-DD\"\r\n                                    name=\"date_of_interview\"\r\n                                />\r\n                                <Form.Text className=\"text-muted\">Date</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Zoom, Skype, Bluejeans, Hirevue link</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"social_link\" />\r\n                                <Form.Text className=\"text-muted\">http://www.zoom.us/1234567890</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Interviewer's Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"interviewer_name_first\" />\r\n                                <Form.Text className=\"text-muted\">First Name</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"interviewer_name_last\" />\r\n                                <Form.Text className=\"text-muted\">Last Name</Form.Text>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Interviewer's Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"\"\r\n                                    name=\"interviewer_email\" />\r\n                                <Form.Text className=\"text-muted\">example@example.com</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30, marginBottom: 30, textAlign: 'center' }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\"\r\n                                    onClick={this.registerUserData}\r\n                                >Submit</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}