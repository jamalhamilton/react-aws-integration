{"ast":null,"code":"var _jsxFileName = \"/var/www/interverify/frontend/src/components/IDAuth.js\";\nimport React from \"react\";\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\nimport Webcam from \"react-webcam\";\nimport AWS from \"aws-sdk\";\nimport QRCode from \"qrcode.react\";\nimport { Redirect, withRouter } from \"react-router\";\nimport config from \"../config/front_config\";\nimport { Divider } from \"rsuite\";\nconst videoConstraints = {\n  width: 1280,\n  height: 720,\n  facingMode: \"user\"\n};\n\nclass IDAuth extends React.Component {\n  // webcamRef = React.useRef(null);\n  constructor(props) {\n    super();\n    let query = new URLSearchParams(props.location.search);\n    let userToken = query.get('token');\n\n    if (!userToken) {\n      window.location.href = '/';\n      return;\n    }\n\n    let authStep = parseInt(userToken.substr(-1)) - 8;\n    userToken = userToken.substr(0, userToken.length - 1);\n    this.webcamRef = React.createRef();\n    this.state = {\n      userToken: userToken,\n      authStep: authStep,\n      verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\n      photo_source: '',\n      photo_target: '',\n      blob: '',\n      resultMsg: '',\n      msgColor: 'black',\n      resultBtnStatus: 0,\n      uploadingProgress: 0\n    };\n    this.photoCapture = this.photoCapture.bind(this);\n    this.comparePhoto = this.comparePhoto.bind(this);\n    this.navToVerify = this.navToVerify.bind(this);\n  }\n\n  componentDidMount() {\n    var that = this;\n    var {\n      userToken\n    } = this.state;\n    fetch(config.api.getUser, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        token: userToken\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.status) {\n        that.state.photo_source = data.data.id + '_face.jpg';\n        that.state.photo_target = data.data.id + '_id.jpg';\n      }\n    });\n  }\n\n  photoCapture() {\n    var that = this;\n    var {\n      authStep,\n      userToken\n    } = this.state;\n    var imageSrc = this.webcamRef.current.getScreenshot();\n\n    if (!imageSrc) {\n      this.setState({\n        msgColor: 'red',\n        resultMsg: 'Camera is not connected!!'\n      });\n      return;\n    } /////////////////////////////////        \n    // that.setState({\n    //     authStep: authStep + 1,\n    // });\n    // return;\n    /////////////////////////////////\n\n\n    var {\n      photo_source,\n      photo_target\n    } = this.state;\n    AWS.config.update({\n      accessKeyId: config.aws.accessKey,\n      secretAccessKey: config.aws.secretKey,\n      region: config.aws.region\n    });\n    var bucket = new AWS.S3({\n      params: {\n        Bucket: config.aws.bucket\n      }\n    });\n    var fileName = photo_source;\n    if (authStep === 1) fileName = photo_target;\n    imageSrc = this.dataURItoBlob(imageSrc);\n    var imgFile = new File([imageSrc], fileName); // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\n\n    var params = {\n      Key: imgFile.name,\n      ContentType: \"image/jpeg\",\n      Body: imgFile\n    };\n    that.setState({\n      msgColor: 'black',\n      resultMsg: '',\n      uploadingProgress: 0\n    });\n    bucket.putObject(params, function (err, data) {\n      if (!err) {\n        // alert('Uploading done!!!');\n        var verifyType = {\n          verify_photo: fileName\n        };\n        if (authStep === 1) verifyType = {\n          verify_idcard: fileName\n        };\n        verifyType.token = userToken;\n        fetch(config.api.updateUserInfo, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          method: \"POST\",\n          body: JSON.stringify(verifyType)\n        }).then(res => res.json()).then(data => {\n          if (data.status) {\n            that.setState({\n              msgColor: 'black',\n              resultMsg: 'Uploading done.'\n            });\n            console.log('-------- uploaded: ', data);\n            setTimeout(function () {\n              that.setState({\n                authStep: 0,\n                resultMsg: '',\n                resultBtnStatus: 0,\n                uploadingProgress: 0\n              });\n            }, 1000);\n          }\n\n          console.log('data', data.data);\n        });\n      } else {\n        alert(err.message);\n        return false;\n      }\n    }).on('httpUploadProgress', function (progress) {\n      console.log('---- uploading progress: ', progress);\n      console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\n      var percent = parseInt(progress.loaded / progress.total * 100);\n      that.setState({\n        uploadingProgress: percent\n      });\n    });\n  }\n\n  navToVerify() {\n    var that = this;\n    var {\n      userToken\n    } = this.state;\n    fetch(config.api.getUser, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        token: userToken\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.status) {\n        var errMsg = '';\n        if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\n        if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\n\n        if (errMsg) {\n          that.setState({\n            msgColor: 'red',\n            resultMsg: errMsg\n          });\n          return;\n        }\n\n        that.setState({\n          photo_source: data.data.verify_photo,\n          photo_target: data.data.verify_idcard\n        });\n        that.comparePhoto(); // setTimeout(function () {\n        //     that.setState({\n        //         authStep: 2,       //authStep + 1,\n        //         resultMsg: '',\n        //         resultBtnStatus: 0,\n        //         uploadingProgress: 0\n        //     });\n        // }, 1000);\n      } else {\n        that.setState({\n          msgColor: 'red',\n          resultMsg: 'Server connection failed.'\n        });\n      }\n    });\n  }\n\n  dataURItoBlob(dataURI) {\n    // convert base64/URLEncoded data component to raw binary data held in a string\n    var binary = atob(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]; // console.log('-- mimeString: ', mimeString);\n\n    var array = [];\n\n    for (var i = 0; i < binary.length; i++) {\n      array.push(binary.charCodeAt(i));\n    }\n\n    return new Blob([new Uint8Array(array)], {\n      type: mimeString\n    });\n  }\n\n  comparePhoto() {\n    var that = this;\n    var {\n      resultBtnStatus,\n      userToken\n    } = that.state;\n\n    if (resultBtnStatus) {\n      that.setState({\n        authStep: 0,\n        resultBtnStatus: 0\n      });\n      return;\n    }\n\n    const bucket = config.aws.bucket; // the bucketname without s3://\n    // const awsConfig = new AWS.Config({\n    //     accessKeyId: config.aws.accessKey,\n    //     secretAccessKey: config.aws.secretKey,\n    //     region: config.aws.region\n    // })\n\n    var {\n      photo_source,\n      photo_target\n    } = this.state;\n    AWS.config.update({\n      accessKeyId: config.aws.accessKey,\n      secretAccessKey: config.aws.secretKey,\n      region: config.aws.region\n    });\n    const client = new AWS.Rekognition();\n    const params = {\n      SourceImage: {\n        S3Object: {\n          Bucket: bucket,\n          Name: photo_source\n        }\n      },\n      TargetImage: {\n        S3Object: {\n          Bucket: bucket,\n          Name: photo_target\n        }\n      },\n      SimilarityThreshold: 70\n    };\n    console.log('-- compare 0');\n\n    try {\n      client.compareFaces(params, function (err, response) {\n        if (err) {\n          console.log(err, err.stack); // an error occurred                    \n\n          that.setState({\n            resultBtnStatus: 1,\n            msgColor: 'red',\n            resultMsg: 'You didn\\'t upload exact personal photo.'\n          });\n          return;\n        }\n\n        if (!response.FaceMatches.length) {\n          that.setState({\n            resultBtnStatus: 1,\n            msgColor: 'red',\n            resultMsg: 'User and ID is not matched!'\n          });\n          return;\n        }\n\n        console.log('-- compare 1');\n        console.log('--- response.faceMatches: ', response.FaceMatches);\n        response.FaceMatches.forEach(data => {\n          console.log('-- compare 2 : ', data);\n          let position = data.Face.BoundingBox;\n          let similarity = data.Similarity;\n          console.log(`The face at: ${position.Left}, ${position.Top} matches with ${similarity} % confidence`);\n          fetch(config.api.updateUserInfo, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({\n              token: userToken,\n              verify_result: similarity\n            })\n          }).then(res => res.json()).then(data => {\n            if (data.status) {\n              console.log('-------- uploaded: ', data);\n              that.setState({\n                resultBtnStatus: 1,\n                msgColor: 'black',\n                resultMsg: 'User\\'s similarity is : ' + similarity + '.'\n              });\n            }\n\n            console.log('data', data.data);\n          });\n        }); // for response.faceDetails\n      });\n    } catch (err) {\n      that.setState({\n        resultBtnStatus: 1,\n        msgColor: 'red',\n        resultMsg: 'You didn\\'t upload exact personal photo.'\n      });\n      console.log(err);\n    }\n  }\n\n  render() {\n    let {\n      authStep\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }\n    }, authStep === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 33\n      }\n    }, \"Step 2. Verify Your Information\"))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 33\n      }\n    }, \"Your Face Photo\"), /*#__PURE__*/React.createElement(Webcam, {\n      videoConstraints: videoConstraints,\n      screenshotFormat: \"image/jpeg\",\n      ref: this.webcamRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.photoCapture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 37\n      }\n    }, \"Upload\"))), authStep === 0 && /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 37\n      }\n    }, \"Your ID card\"), /*#__PURE__*/React.createElement(QRCode, {\n      value: this.state.verifyURL,\n      size: 256,\n      level: 'Q',\n      includeMargin: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 37\n      }\n    }, this.state.verifyURL), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 37\n      }\n    }, \"Please scan this link and upload id card on your phone.\"))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.navToVerify,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 33\n      }\n    }, \"Verify Information\"))), this.state.uploadingProgress > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      now: this.state.uploadingProgress,\n      label: this.state.uploadingProgress + '%',\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 37\n      }\n    })))), authStep === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }, \"Upload Your ID Card\"))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Webcam, {\n      videoConstraints: videoConstraints,\n      screenshotFormat: \"image/jpeg\",\n      ref: this.webcamRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.photoCapture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 33\n      }\n    }, \"Upload ID Card\"))), this.state.uploadingProgress > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      now: this.state.uploadingProgress,\n      label: this.state.uploadingProgress + '%',\n      animated: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 37\n      }\n    })))), authStep === 2 && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 33\n      }\n    }, \"Step 2. Verify Your Identity\"))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.comparePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 33\n      }\n    }, this.state.resultBtnStatus ? 'Upload again' : 'Verify')))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: 30,\n        marginBottom: 30,\n        color: this.state.msgColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }\n    }, this.state.resultMsg)), this.state.blob !== '' && /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.blob,\n      alt: \"blob\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(IDAuth);","map":{"version":3,"sources":["/var/www/interverify/frontend/src/components/IDAuth.js"],"names":["React","Container","Row","Col","Button","ProgressBar","Webcam","AWS","QRCode","Redirect","withRouter","config","Divider","videoConstraints","width","height","facingMode","IDAuth","Component","constructor","props","query","URLSearchParams","location","search","userToken","get","window","href","authStep","parseInt","substr","length","webcamRef","createRef","state","verifyURL","siteUrl","api","verifyID","photo_source","photo_target","blob","resultMsg","msgColor","resultBtnStatus","uploadingProgress","photoCapture","bind","comparePhoto","navToVerify","componentDidMount","that","fetch","getUser","headers","method","body","JSON","stringify","token","then","res","json","data","status","id","imageSrc","current","getScreenshot","setState","update","accessKeyId","aws","accessKey","secretAccessKey","secretKey","region","bucket","S3","params","Bucket","fileName","dataURItoBlob","imgFile","File","Key","name","ContentType","Body","putObject","err","verifyType","verify_photo","verify_idcard","updateUserInfo","console","log","setTimeout","alert","message","on","progress","loaded","total","percent","errMsg","dataURI","binary","atob","split","mimeString","array","i","push","charCodeAt","Blob","Uint8Array","type","client","Rekognition","SourceImage","S3Object","Name","TargetImage","SimilarityThreshold","compareFaces","response","stack","FaceMatches","forEach","position","Face","BoundingBox","similarity","Similarity","Left","Top","verify_result","render","textAlign","marginTop","marginBottom","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport config from \"../config/front_config\";\r\nimport { Divider } from \"rsuite\";\r\n\r\nconst videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: \"user\",\r\n};\r\n\r\nclass IDAuth extends React.Component {\r\n    // webcamRef = React.useRef(null);\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        let query = new URLSearchParams(props.location.search);\r\n        let userToken = query.get('token');\r\n\r\n        if (!userToken) {\r\n            window.location.href = '/';\r\n            return;\r\n        }\r\n\r\n        let authStep = parseInt(userToken.substr(-1)) - 8;\r\n        userToken = userToken.substr(0, userToken.length - 1);\r\n\r\n        this.webcamRef = React.createRef();\r\n\r\n        this.state = {\r\n            userToken: userToken,\r\n            authStep: authStep,\r\n\r\n            verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\r\n\r\n            photo_source: '',\r\n            photo_target: '',\r\n\r\n            blob: '',\r\n\r\n            resultMsg: '',\r\n            msgColor: 'black',\r\n            resultBtnStatus: 0,\r\n\r\n            uploadingProgress: 0,\r\n        };\r\n\r\n        this.photoCapture = this.photoCapture.bind(this);\r\n        this.comparePhoto = this.comparePhoto.bind(this);\r\n        this.navToVerify = this.navToVerify.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: userToken }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                that.state.photo_source = data.data.id + '_face.jpg';\r\n                that.state.photo_target = data.data.id + '_id.jpg';\r\n            }\r\n        });\r\n    }\r\n\r\n    photoCapture() {\r\n        var that = this;\r\n        var { authStep, userToken } = this.state;\r\n\r\n        var imageSrc = this.webcamRef.current.getScreenshot();\r\n        if (!imageSrc) {\r\n            this.setState({\r\n                msgColor: 'red',\r\n                resultMsg: 'Camera is not connected!!',\r\n            })\r\n            return;\r\n        }\r\n\r\n        /////////////////////////////////        \r\n        // that.setState({\r\n        //     authStep: authStep + 1,\r\n        // });\r\n        // return;\r\n        /////////////////////////////////\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        var bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } })\r\n        var fileName = photo_source;\r\n        if (authStep === 1) fileName = photo_target;\r\n\r\n        imageSrc = this.dataURItoBlob(imageSrc);\r\n        var imgFile = new File([imageSrc], fileName);\r\n        // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\r\n        var params = { Key: imgFile.name, ContentType: \"image/jpeg\", Body: imgFile };\r\n        that.setState({\r\n            msgColor: 'black',\r\n            resultMsg: '',\r\n            uploadingProgress: 0,\r\n        })\r\n        bucket.putObject(params, function (err, data) {\r\n            if (!err) {\r\n                // alert('Uploading done!!!');\r\n                var verifyType = { verify_photo: fileName };\r\n                if (authStep === 1) verifyType = { verify_idcard: fileName };\r\n                verifyType.token = userToken\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(verifyType),\r\n                }).then(res => res.json()).then(data => {\r\n                    if (data.status) {\r\n                        that.setState({\r\n                            msgColor: 'black',\r\n                            resultMsg: 'Uploading done.',\r\n                        });\r\n                        console.log('-------- uploaded: ', data);\r\n                        setTimeout(function () {\r\n                            that.setState({\r\n                                authStep: 0,\r\n                                resultMsg: '',\r\n                                resultBtnStatus: 0,\r\n                                uploadingProgress: 0\r\n                            });\r\n                        }, 1000);\r\n                    }\r\n                    console.log('data', data.data)\r\n                });\r\n            } else {\r\n                alert(err.message);\r\n                return false;\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            console.log('---- uploading progress: ', progress);\r\n            console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\r\n\r\n            var percent = parseInt(progress.loaded / progress.total * 100);\r\n            that.setState({\r\n                uploadingProgress: percent\r\n            })\r\n        });\r\n    }\r\n\r\n    navToVerify() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: userToken\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                var errMsg = ''\r\n                if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\r\n                if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\r\n                if (errMsg) {\r\n                    that.setState({\r\n                        msgColor: 'red',\r\n                        resultMsg: errMsg,\r\n                    });\r\n                    return;\r\n                }\r\n                that.setState({\r\n                    photo_source: data.data.verify_photo,\r\n                    photo_target: data.data.verify_idcard,\r\n                })\r\n                that.comparePhoto();\r\n                // setTimeout(function () {\r\n                //     that.setState({\r\n                //         authStep: 2,       //authStep + 1,\r\n                //         resultMsg: '',\r\n                //         resultBtnStatus: 0,\r\n                //         uploadingProgress: 0\r\n                //     });\r\n                // }, 1000);\r\n            } else {\r\n                that.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Server connection failed.',\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // console.log('-- mimeString: ', mimeString);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    comparePhoto() {\r\n        var that = this;\r\n        var { resultBtnStatus, userToken } = that.state;\r\n        if (resultBtnStatus) {\r\n            that.setState({\r\n                authStep: 0,\r\n                resultBtnStatus: 0,\r\n            })\r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket; // the bucketname without s3://\r\n\r\n        // const awsConfig = new AWS.Config({\r\n        //     accessKeyId: config.aws.accessKey,\r\n        //     secretAccessKey: config.aws.secretKey,\r\n        //     region: config.aws.region\r\n        // })\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n\r\n        const client = new AWS.Rekognition();\r\n        const params = {\r\n            SourceImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_source,\r\n                },\r\n            },\r\n            TargetImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_target,\r\n                },\r\n            },\r\n            SimilarityThreshold: 70,\r\n        };\r\n\r\n        console.log('-- compare 0')\r\n        try {\r\n            client.compareFaces(params, function (err, response) {\r\n                if (err) {\r\n                    console.log(err, err.stack); // an error occurred                    \r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'You didn\\'t upload exact personal photo.'\r\n                    })\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'User and ID is not matched!'\r\n                    })\r\n                    return;\r\n                }\r\n                console.log('-- compare 1')\r\n                console.log('--- response.faceMatches: ', response.FaceMatches);\r\n\r\n                response.FaceMatches.forEach((data) => {\r\n                    console.log('-- compare 2 : ', data)\r\n                    let position = data.Face.BoundingBox;\r\n                    let similarity = data.Similarity;\r\n                    console.log(\r\n                        `The face at: ${position.Left}, ${position.Top} matches with ${similarity} % confidence`\r\n                    );\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: userToken,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        if (data.status) {\r\n                            console.log('-------- uploaded: ', data);\r\n                            that.setState({\r\n                                resultBtnStatus: 1,\r\n                                msgColor: 'black',\r\n                                resultMsg: 'User\\'s similarity is : ' + similarity + '.'\r\n                            });\r\n                        }\r\n                        console.log('data', data.data)\r\n                    });\r\n                }); // for response.faceDetails\r\n            });\r\n        } catch (err) {\r\n            that.setState({\r\n                resultBtnStatus: 1,\r\n                msgColor: 'red',\r\n                resultMsg: 'You didn\\'t upload exact personal photo.'\r\n            })\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { authStep } = this.state;\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {(authStep === 0) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Step 2. Verify Your Information\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <h4>Your Face Photo</h4>\r\n                                <Webcam\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                </Button>\r\n                                </p>\r\n                            </Col>\r\n                            {authStep === 0 && (\r\n                                <Col>\r\n                                    <h4>Your ID card</h4>\r\n                                    <QRCode\r\n                                        value={this.state.verifyURL}\r\n                                        size={256}\r\n                                        level={'Q'}\r\n                                        includeMargin={true}\r\n                                    />\r\n                                    <p>{this.state.verifyURL}</p>\r\n                                    <p>Please scan this link and upload id card on your phone.</p>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.navToVerify}\r\n                                >\r\n                                    Verify Information\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(authStep === 1) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Upload Your ID Card\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Webcam\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.photoCapture}\r\n                                >\r\n                                    Upload ID Card\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {authStep === 2 && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>Step 2. Verify Your Identity</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.comparePhoto}\r\n                                >\r\n                                    {this.state.resultBtnStatus ? 'Upload again' : 'Verify'}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )}\r\n                <Row style={{ marginTop: 30, marginBottom: 30, color: this.state.msgColor }}>\r\n                    <Col>{this.state.resultMsg}</Col>\r\n                </Row>\r\n                {this.state.blob !== '' &&\r\n                    <img src={this.state.blob} alt=\"blob\" />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IDAuth);\r\n"]},"metadata":{},"sourceType":"module"}