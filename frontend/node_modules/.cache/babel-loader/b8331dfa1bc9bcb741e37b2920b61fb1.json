{"ast":null,"code":"import _classCallCheck from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _assertThisInitialized from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/var/www/interverify/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Container,Row,Col,Button,ProgressBar}from\"react-bootstrap\";import Webcam from\"react-webcam\";import AWS from\"aws-sdk\";import QRCode from\"qrcode.react\";import{Redirect,withRouter}from\"react-router\";import config from\"../config/front_config\";import{Divider}from\"rsuite\";var videoConstraints={width:1280,height:720,facingMode:'user'};var mobileConstraints={width:1280,height:720,facingMode:{exact:\"environment\"}};var IDAuth=/*#__PURE__*/function(_React$Component){_inherits(IDAuth,_React$Component);var _super=_createSuper(IDAuth);// webcamRef = React.useRef(null);\nfunction IDAuth(props){var _this;_classCallCheck(this,IDAuth);_this=_super.call(this);var query=new URLSearchParams(props.location.search);var userToken=query.get('token');if(!userToken){window.location.href='/';return _possibleConstructorReturn(_this);}var authStep=parseInt(userToken.substr(-1))-8;userToken=userToken.substr(0,userToken.length-1);_this.webcamRef=React.createRef();_this.state={userToken:userToken,authStep:authStep,verifyURL:config.siteUrl+config.api.verifyID+'?token='+userToken+'9',isPhotoTaken:false,imageSrc:'',photo_source:'',photo_target:'',uploadedPhoto:'',uploadedId:'',blob:'',resultMsg:'',msgColor:'black',resultBtnStatus:0,uploadingProgress:0,apiTmr:0};_this.photoCapture=_this.photoCapture.bind(_assertThisInitialized(_this));_this.photoTake=_this.photoTake.bind(_assertThisInitialized(_this));_this.comparePhoto=_this.comparePhoto.bind(_assertThisInitialized(_this));_this.navToVerify=_this.navToVerify.bind(_assertThisInitialized(_this));return _this;}_createClass(IDAuth,[{key:\"componentDidMount\",value:function componentDidMount(){var that=this;var userToken=this.state.userToken;fetch(config.api.getUser,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify({token:userToken})}).then(function(res){return res.json();}).then(function(data){if(data.status){that.state.photo_source=data.data.id+'_face.jpg';that.state.photo_target=data.data.id+'_id.jpg';}that.setState({uploadedPhoto:data.data.verify_photo,uploadedId:data.data.verify_idcard});});clearInterval(this.state.apiTmr);if(!userToken)return;this.state.apiTmr=setInterval(function(){if(that.state.uploadedId){clearInterval(that.state.apiTmr);return;}fetch(config.api.getUser,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify({token:userToken})}).then(function(res){return res.json();}).then(function(data){that.setState({uploadedPhoto:data.data.verify_photo,uploadedId:data.data.verify_idcard});if(data.data.verify_idcard)clearInterval(that.state.apiTmr);});},3000);}},{key:\"photoTake\",value:function photoTake(){var that=this;var isPhotoTaken=this.state.isPhotoTaken;var imageSrc='';if(!isPhotoTaken){imageSrc=this.webcamRef.current.getScreenshot();if(!imageSrc){this.setState({msgColor:'red',resultMsg:'Camera is not connected!!',imageSrc:''});return;}}this.setState({isPhotoTaken:!isPhotoTaken,imageSrc:imageSrc});console.log('--------- imageSrc');}},{key:\"photoCapture\",value:function photoCapture(){var that=this;var _this$state=this.state,authStep=_this$state.authStep,userToken=_this$state.userToken,imageSrc=_this$state.imageSrc;/////////////////////////////////        \n// that.setState({\n//     authStep: authStep + 1,\n// });\n// return;\n/////////////////////////////////\nvar _this$state2=this.state,photo_source=_this$state2.photo_source,photo_target=_this$state2.photo_target;AWS.config.update({accessKeyId:config.aws.accessKey,secretAccessKey:config.aws.secretKey,region:config.aws.region});var bucket=new AWS.S3({params:{Bucket:config.aws.bucket}});var fileName=photo_source;if(authStep===1)fileName=photo_target;imageSrc=this.dataURItoBlob(imageSrc);var imgFile=new File([imageSrc],fileName);// var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\nvar params={Key:imgFile.name,ContentType:\"image/jpeg\",Body:imgFile};that.setState({msgColor:'black',resultMsg:'',uploadingProgress:.1});bucket.putObject(params,function(err,data){if(!err){// alert('Uploading done!!!');\nvar verifyType={verify_photo:fileName};if(authStep===1)verifyType={verify_idcard:fileName};verifyType.token=userToken;fetch(config.api.updateUserInfo,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify(verifyType)}).then(function(res){return res.json();}).then(function(data){if(data.status){that.setState({msgColor:'black',resultMsg:'Uploading done.'});console.log('-------- uploaded: ',data);setTimeout(function(){that.setState({authStep:0,resultMsg:'',imageSrc:'',isPhotoTaken:false,resultBtnStatus:0,uploadingProgress:0});},1000);}console.log('data',data.data);});}else{alert(err.message);return false;}}).on('httpUploadProgress',function(progress){console.log('---- uploading progress: ',progress);console.log('---- uploading progress: ',progress.loaded/progress.total*100);var percent=parseInt(progress.loaded/progress.total*100);that.setState({uploadingProgress:percent});});}},{key:\"navToVerify\",value:function navToVerify(){var that=this;var userToken=this.state.userToken;fetch(config.api.getUser,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify({token:userToken})}).then(function(res){return res.json();}).then(function(data){if(data.status){var errMsg='';if(!data.data.verify_idcard)errMsg=\"You didn't upload id card photo.\";if(!data.data.verify_photo)errMsg=\"You didn't upload face photo.\";if(errMsg){that.setState({msgColor:'red',resultMsg:errMsg});return;}that.setState({photo_source:data.data.verify_photo,photo_target:data.data.verify_idcard});that.comparePhoto();// setTimeout(function () {\n//     that.setState({\n//         authStep: 2,       //authStep + 1,\n//         resultMsg: '',\n//         resultBtnStatus: 0,\n//         uploadingProgress: 0\n//     });\n// }, 1000);\n}else{that.setState({msgColor:'red',resultMsg:'Server connection failed.'});}});}},{key:\"dataURItoBlob\",value:function dataURItoBlob(dataURI){// convert base64/URLEncoded data component to raw binary data held in a string\nvar binary=atob(dataURI.split(',')[1]);var mimeString=dataURI.split(',')[0].split(':')[1].split(';')[0];// console.log('-- mimeString: ', mimeString);\nvar array=[];for(var i=0;i<binary.length;i++){array.push(binary.charCodeAt(i));}return new Blob([new Uint8Array(array)],{type:mimeString});}},{key:\"comparePhoto\",value:function comparePhoto(){var that=this;var _that$state=that.state,resultBtnStatus=_that$state.resultBtnStatus,userToken=_that$state.userToken;if(resultBtnStatus){that.setState({authStep:0,resultBtnStatus:0});return;}var bucket=config.aws.bucket;// the bucketname without s3://\n// const awsConfig = new AWS.Config({\n//     accessKeyId: config.aws.accessKey,\n//     secretAccessKey: config.aws.secretKey,\n//     region: config.aws.region\n// })\nvar _this$state3=this.state,photo_source=_this$state3.photo_source,photo_target=_this$state3.photo_target;AWS.config.update({accessKeyId:config.aws.accessKey,secretAccessKey:config.aws.secretKey,region:config.aws.region});var client=new AWS.Rekognition();var params={SourceImage:{S3Object:{Bucket:bucket,Name:photo_source}},TargetImage:{S3Object:{Bucket:bucket,Name:photo_target}},SimilarityThreshold:70};console.log('-- compare 0');try{client.compareFaces(params,function(err,response){if(err){console.log(err,err.stack);// an error occurred                    \nthat.setState({resultBtnStatus:1,msgColor:'red',resultMsg:'You didn\\'t upload exact personal photo.'});return;}if(!response.FaceMatches.length){that.setState({resultBtnStatus:1,msgColor:'red',resultMsg:'User and ID is not matched!'});return;}console.log('-- compare 1');console.log('--- response.faceMatches: ',response.FaceMatches);response.FaceMatches.forEach(function(data){console.log('-- compare 2 : ',data);var position=data.Face.BoundingBox;var similarity=data.Similarity;console.log(\"The face at: \".concat(position.Left,\", \").concat(position.Top,\" matches with \").concat(similarity,\" % confidence\"));fetch(config.api.updateUserInfo,{headers:{'Content-Type':'application/json'},method:\"POST\",body:JSON.stringify({token:userToken,verify_result:similarity})}).then(function(res){return res.json();}).then(function(data){if(data.status){console.log('-------- uploaded: ',data);that.setState({resultBtnStatus:1,msgColor:'black',resultMsg:'User\\'s similarity is : '+similarity+'.'});}console.log('data',data.data);});});// for response.faceDetails\n});}catch(err){that.setState({resultBtnStatus:1,msgColor:'red',resultMsg:'You didn\\'t upload exact personal photo.'});console.log(err);}}},{key:\"render\",value:function render(){var authStep=this.state.authStep;return/*#__PURE__*/React.createElement(Container,{style:{textAlign:\"center\"}},authStep===0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:50}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Step 2. Verify Your Information\"))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h4\",null,\"Your Face Photo\"),/*#__PURE__*/React.createElement(\"img\",{src:this.state.imageSrc,style:{marginBottom:6,display:this.state.isPhotoTaken?'inline-block':'none'}}),/*#__PURE__*/React.createElement(Webcam,{style:{display:!this.state.isPhotoTaken?'inline-block':'none'},videoConstraints:videoConstraints,screenshotFormat:\"image/jpeg\",ref:this.webcamRef}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:this.photoTake},this.state.isPhotoTaken?'Retake Photo':'Take A Photo'),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:30,display:this.state.isPhotoTaken?'inline-block':'none'},variant:\"primary\",onClick:this.photoCapture},\"Upload\"))),authStep===0&&/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h4\",null,\"Your ID card\"),/*#__PURE__*/React.createElement(QRCode,{value:this.state.verifyURL,size:256,level:'Q',includeMargin:true}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"a\",{href:this.state.verifyURL},this.state.verifyURL)),this.state.uploadedId?/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"You did upload ID card photo.\"):/*#__PURE__*/React.createElement(\"p\",null,\"Please scan this link and upload id card on your phone.\"))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:this.navToVerify},\"Verify Information\"))),this.state.uploadingProgress>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ProgressBar,{now:this.state.uploadingProgress,label:this.state.uploadingProgress+'%',animated:true})),/*#__PURE__*/React.createElement(Col,null)))),authStep===1&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:50}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Upload Your ID Card\"))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"img\",{src:this.state.imageSrc,style:{marginBottom:6,display:this.state.isPhotoTaken?'inline-block':'none'}}),/*#__PURE__*/React.createElement(Webcam,{style:{display:!this.state.isPhotoTaken?'inline-block':'none'},videoConstraints:videoConstraints,screenshotFormat:\"image/jpeg\",ref:this.webcamRef}))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:this.photoTake},this.state.isPhotoTaken?'Retake Photo':'Take A Photo'),/*#__PURE__*/React.createElement(Button,{style:{marginLeft:30,display:this.state.isPhotoTaken?'inline-block':'none'},variant:\"primary\",onClick:this.photoCapture},\"Upload\")))),this.state.uploadingProgress>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ProgressBar,{now:this.state.uploadingProgress,label:this.state.uploadingProgress+'%',animated:true})),/*#__PURE__*/React.createElement(Col,null)))),authStep===2&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{style:{marginTop:50}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Step 2. Verify Your Identity\"))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30}},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:this.comparePhoto},this.state.resultBtnStatus?'Upload again':'Verify')))),/*#__PURE__*/React.createElement(Row,{style:{marginTop:30,marginBottom:30,color:this.state.msgColor}},/*#__PURE__*/React.createElement(Col,null,this.state.resultMsg)),this.state.blob!==''&&/*#__PURE__*/React.createElement(\"img\",{src:this.state.blob,alt:\"blob\"}));}}]);return IDAuth;}(React.Component);export default withRouter(IDAuth);","map":{"version":3,"sources":["/var/www/interverify/frontend/src/components/IDAuth.js"],"names":["React","Container","Row","Col","Button","ProgressBar","Webcam","AWS","QRCode","Redirect","withRouter","config","Divider","videoConstraints","width","height","facingMode","mobileConstraints","exact","IDAuth","props","query","URLSearchParams","location","search","userToken","get","window","href","authStep","parseInt","substr","length","webcamRef","createRef","state","verifyURL","siteUrl","api","verifyID","isPhotoTaken","imageSrc","photo_source","photo_target","uploadedPhoto","uploadedId","blob","resultMsg","msgColor","resultBtnStatus","uploadingProgress","apiTmr","photoCapture","bind","photoTake","comparePhoto","navToVerify","that","fetch","getUser","headers","method","body","JSON","stringify","token","then","res","json","data","status","id","setState","verify_photo","verify_idcard","clearInterval","setInterval","current","getScreenshot","console","log","update","accessKeyId","aws","accessKey","secretAccessKey","secretKey","region","bucket","S3","params","Bucket","fileName","dataURItoBlob","imgFile","File","Key","name","ContentType","Body","putObject","err","verifyType","updateUserInfo","setTimeout","alert","message","on","progress","loaded","total","percent","errMsg","dataURI","binary","atob","split","mimeString","array","i","push","charCodeAt","Blob","Uint8Array","type","client","Rekognition","SourceImage","S3Object","Name","TargetImage","SimilarityThreshold","compareFaces","response","stack","FaceMatches","forEach","position","Face","BoundingBox","similarity","Similarity","Left","Top","verify_result","textAlign","marginTop","marginBottom","display","marginLeft","color","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport config from \"../config/front_config\";\r\nimport { Divider } from \"rsuite\";\r\n\r\nconst videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nclass IDAuth extends React.Component {\r\n    // webcamRef = React.useRef(null);\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        let query = new URLSearchParams(props.location.search);\r\n        let userToken = query.get('token');\r\n\r\n        if (!userToken) {\r\n            window.location.href = '/';\r\n            return;\r\n        }\r\n\r\n        let authStep = parseInt(userToken.substr(-1)) - 8;\r\n        userToken = userToken.substr(0, userToken.length - 1);\r\n\r\n        this.webcamRef = React.createRef();\r\n\r\n        this.state = {\r\n            userToken: userToken,\r\n            authStep: authStep,\r\n\r\n            verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\r\n\r\n            isPhotoTaken: false,\r\n            imageSrc: '',\r\n\r\n            photo_source: '',\r\n            photo_target: '',\r\n\r\n            uploadedPhoto: '',\r\n            uploadedId: '',\r\n\r\n            blob: '',\r\n\r\n            resultMsg: '',\r\n            msgColor: 'black',\r\n            resultBtnStatus: 0,\r\n\r\n            uploadingProgress: 0,\r\n\r\n            apiTmr: 0\r\n        };\r\n\r\n        this.photoCapture = this.photoCapture.bind(this);\r\n        this.photoTake = this.photoTake.bind(this);\r\n        this.comparePhoto = this.comparePhoto.bind(this);\r\n        this.navToVerify = this.navToVerify.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: userToken }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                that.state.photo_source = data.data.id + '_face.jpg';\r\n                that.state.photo_target = data.data.id + '_id.jpg';\r\n            }\r\n            that.setState({\r\n                uploadedPhoto: data.data.verify_photo,\r\n                uploadedId: data.data.verify_idcard,\r\n            });\r\n        });\r\n\r\n        clearInterval(this.state.apiTmr);\r\n        if (!userToken) return;\r\n        this.state.apiTmr = setInterval(() => {\r\n            if (that.state.uploadedId) {\r\n                clearInterval(that.state.apiTmr);\r\n                return;\r\n            }\r\n            fetch(config.api.getUser, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                method: \"POST\",\r\n                body: JSON.stringify({ token: userToken }),\r\n            }).then(res => res.json()).then(data => {\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n                if (data.data.verify_idcard) clearInterval(that.state.apiTmr);\r\n            });\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    photoTake() {\r\n        var that = this;\r\n        var { isPhotoTaken } = this.state;\r\n\r\n        var imageSrc = '';\r\n        if (!isPhotoTaken) {\r\n            imageSrc = this.webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                this.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Camera is not connected!!',\r\n                    imageSrc: ''\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isPhotoTaken: !isPhotoTaken,\r\n            imageSrc: imageSrc\r\n        });\r\n\r\n        console.log('--------- imageSrc');\r\n    }\r\n\r\n    photoCapture() {\r\n        var that = this;\r\n        var { authStep, userToken, imageSrc } = this.state;\r\n\r\n        /////////////////////////////////        \r\n        // that.setState({\r\n        //     authStep: authStep + 1,\r\n        // });\r\n        // return;\r\n        /////////////////////////////////\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        var bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } })\r\n        var fileName = photo_source;\r\n        if (authStep === 1) fileName = photo_target;\r\n\r\n        imageSrc = this.dataURItoBlob(imageSrc);\r\n        var imgFile = new File([imageSrc], fileName);\r\n        // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\r\n        var params = { Key: imgFile.name, ContentType: \"image/jpeg\", Body: imgFile };\r\n        that.setState({\r\n            msgColor: 'black',\r\n            resultMsg: '',\r\n            uploadingProgress: .1,\r\n        })\r\n        bucket.putObject(params, function (err, data) {\r\n            if (!err) {\r\n                // alert('Uploading done!!!');\r\n                var verifyType = { verify_photo: fileName };\r\n                if (authStep === 1) verifyType = { verify_idcard: fileName };\r\n                verifyType.token = userToken\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(verifyType),\r\n                }).then(res => res.json()).then(data => {\r\n                    if (data.status) {\r\n                        that.setState({\r\n                            msgColor: 'black',\r\n                            resultMsg: 'Uploading done.',\r\n                        });\r\n                        console.log('-------- uploaded: ', data);\r\n                        setTimeout(function () {\r\n                            that.setState({\r\n                                authStep: 0,\r\n                                resultMsg: '',\r\n                                imageSrc: '',\r\n                                isPhotoTaken: false,\r\n                                resultBtnStatus: 0,\r\n                                uploadingProgress: 0\r\n                            });\r\n                        }, 1000);\r\n                    }\r\n                    console.log('data', data.data)\r\n                });\r\n            } else {\r\n                alert(err.message);\r\n                return false;\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            console.log('---- uploading progress: ', progress);\r\n            console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\r\n\r\n            var percent = parseInt(progress.loaded / progress.total * 100);\r\n            that.setState({\r\n                uploadingProgress: percent\r\n            })\r\n        });\r\n    }\r\n\r\n    navToVerify() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: userToken\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                var errMsg = ''\r\n                if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\r\n                if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\r\n                if (errMsg) {\r\n                    that.setState({\r\n                        msgColor: 'red',\r\n                        resultMsg: errMsg,\r\n                    });\r\n                    return;\r\n                }\r\n                that.setState({\r\n                    photo_source: data.data.verify_photo,\r\n                    photo_target: data.data.verify_idcard,\r\n                })\r\n                that.comparePhoto();\r\n                // setTimeout(function () {\r\n                //     that.setState({\r\n                //         authStep: 2,       //authStep + 1,\r\n                //         resultMsg: '',\r\n                //         resultBtnStatus: 0,\r\n                //         uploadingProgress: 0\r\n                //     });\r\n                // }, 1000);\r\n            } else {\r\n                that.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Server connection failed.',\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // console.log('-- mimeString: ', mimeString);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    comparePhoto() {\r\n        var that = this;\r\n        var { resultBtnStatus, userToken } = that.state;\r\n        if (resultBtnStatus) {\r\n            that.setState({\r\n                authStep: 0,\r\n                resultBtnStatus: 0,\r\n            })\r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket; // the bucketname without s3://\r\n\r\n        // const awsConfig = new AWS.Config({\r\n        //     accessKeyId: config.aws.accessKey,\r\n        //     secretAccessKey: config.aws.secretKey,\r\n        //     region: config.aws.region\r\n        // })\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n\r\n        const client = new AWS.Rekognition();\r\n        const params = {\r\n            SourceImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_source,\r\n                },\r\n            },\r\n            TargetImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_target,\r\n                },\r\n            },\r\n            SimilarityThreshold: 70,\r\n        };\r\n\r\n        console.log('-- compare 0')\r\n        try {\r\n            client.compareFaces(params, function (err, response) {\r\n                if (err) {\r\n                    console.log(err, err.stack); // an error occurred                    \r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'You didn\\'t upload exact personal photo.'\r\n                    })\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'User and ID is not matched!'\r\n                    })\r\n                    return;\r\n                }\r\n                console.log('-- compare 1')\r\n                console.log('--- response.faceMatches: ', response.FaceMatches);\r\n\r\n                response.FaceMatches.forEach((data) => {\r\n                    console.log('-- compare 2 : ', data)\r\n                    let position = data.Face.BoundingBox;\r\n                    let similarity = data.Similarity;\r\n                    console.log(\r\n                        `The face at: ${position.Left}, ${position.Top} matches with ${similarity} % confidence`\r\n                    );\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: userToken,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        if (data.status) {\r\n                            console.log('-------- uploaded: ', data);\r\n                            that.setState({\r\n                                resultBtnStatus: 1,\r\n                                msgColor: 'black',\r\n                                resultMsg: 'User\\'s similarity is : ' + similarity + '.'\r\n                            });\r\n                        }\r\n                        console.log('data', data.data)\r\n                    });\r\n                }); // for response.faceDetails\r\n            });\r\n        } catch (err) {\r\n            that.setState({\r\n                resultBtnStatus: 1,\r\n                msgColor: 'red',\r\n                resultMsg: 'You didn\\'t upload exact personal photo.'\r\n            })\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { authStep } = this.state;\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {(authStep === 0) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Step 2. Verify Your Information\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <h4>Your Face Photo</h4>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                            {authStep === 0 && (\r\n                                <Col>\r\n                                    <h4>Your ID card</h4>\r\n                                    <QRCode\r\n                                        value={this.state.verifyURL}\r\n                                        size={256}\r\n                                        level={'Q'}\r\n                                        includeMargin={true}\r\n                                    />\r\n                                    <p><a href={this.state.verifyURL}>{this.state.verifyURL}</a></p>\r\n                                    {this.state.uploadedId ? (\r\n                                        <p style={{ color: 'red' }}>You did upload ID card photo.</p>\r\n                                    ) : (\r\n                                            <p>Please scan this link and upload id card on your phone.</p>\r\n                                        )}\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.navToVerify}\r\n                                >\r\n                                    Verify Information\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(authStep === 1) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Upload Your ID Card\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {authStep === 2 && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>Step 2. Verify Your Identity</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.comparePhoto}\r\n                                >\r\n                                    {this.state.resultBtnStatus ? 'Upload again' : 'Verify'}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )}\r\n                <Row style={{ marginTop: 30, marginBottom: 30, color: this.state.msgColor }}>\r\n                    <Col>{this.state.resultMsg}</Col>\r\n                </Row>\r\n                {this.state.blob !== '' &&\r\n                    <img src={this.state.blob} alt=\"blob\" />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IDAuth);\r\n"]},"metadata":{},"sourceType":"module"}