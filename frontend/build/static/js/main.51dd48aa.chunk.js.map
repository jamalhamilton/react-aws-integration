{"version":3,"sources":["components/SubmitSuccess.js","components/SubmitIDSuccess.js","components/LandingPage.js","config/front_config.js","components/RegisterForm.js","components/AdminPage.js","components/LoginPage.js","components/UserUpdatePage.js","components/VerificationBase.js","components/UserPhoto.js","components/UserId.js","components/VerificationSuccess.js","components/IDAuth.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["SubmitSuccess","props","state","window","location","href","Container","style","textAlign","Row","marginTop","Col","Button","variant","onClick","this","goBack","React","Component","withRouter","SubmitIDSuccess","LandingPage","class","type","data-toggle","data-target","id","src","data-ride","data-slide","siteUrl","accessKey","secretKey","region","bucket","verifyID","getUser","registerUser","sendMail","sendResultMail","updateUserInfo","adminLogin","adminGetAllUsers","adminDeleteUser","adminUpdate","getPhotoId","RegisterForm","userInfo","candidate_name_first","candidate_name_last","candidate_email","date_of_interview","social_link","interviewer_name_first","interviewer_name_last","interviewer_email","isUploading","displayMessage","message","formError","registerUserData","bind","handleChange","errorMessages","setState","Object","keys","length","e","preventDefault","validateForm","fetch","config","headers","method","body","JSON","stringify","then","res","json","data","status","token","showErrorMessage","catch","err","fname","target","name","value","setTimeout","undefined","onChange","placeholder","color","marginLeft","showMessage","useState","users","setUsers","isLoading","setIsLoading","error","setError","showDeleteConfirmation","setShowDeleteConfirmation","itemToDeleteIndex","setItemToDelete","history","useHistory","useEffect","getUsers","a","localStorage","getItem","push","confirmDelete","newUserList","splice","backgroundImage","overflow","margin","height","width","border","float","removeItem","className","position","top","left","backgroundColor","zIndex","Spinner","animation","Table","tableLayout","striped","bordered","hover","map","user","index","key","lineBreak","ButtonGroup","size","itemIndex","Alert","Modal","Dialog","Header","Title","Body","Footer","deleteConfermation","email","setEmail","password","setPassword","setDisplayMessage","loginUser","userName","setItem","event","test","String","toLowerCase","validateEmail","validatePassword","UpdateUser","useParams","setUser","setUserWithoutEdit","currentVal","update","defaultValue","verify_result","verify_photo","verify_idcard","id_verification_result","VerificationBase","verificationErrors","setVerificationErrors","search","useLocation","URLSearchParams","get","initVouchedBase","script","document","createElement","async","onload","Vouched","appId","crossDevice","crossDeviceQRCode","onSubmit","stage","attempts","job","console","log","onCamera","hasCamera","hasPermission","onInit","onDone","onVerificationCompleted","stepTitles","FrontId","Face","Done","content","cameraButton","crossDeviceTitle","crossDeviceInstructions","crossDeviceSuccess","review","upperSuccess","success","lowerSuccess","upperIdInstructions","lowerIdInstructions","upperFaceInstructions","lowerFaceInstructions","upperFailure","verifyFail","lowerFailure","theme","font","fontColor","iconLabelColor","bgColor","baseColor","navigationDisabledBackground","navigationDisabledText","navigationActiveText","iconColor","iconBackground","mount","appendChild","verificationResult","errors","getPhotoIDandUpdateToAWS","verificationToken","uploadPhotoID","imageToUpload","dataURI","binary","atob","split","mimeString","array","i","charCodeAt","Blob","Uint8Array","dataURItoBlob","AWS","accessKeyId","secretAccessKey","S3","params","Bucket","fileName","imgFileToUpload","File","Key","ContentType","putObject","getUserWithToken","fontSize","videoConstraints","facingMode","mobileConstraints","exact","UserPhoto","imageSrc","setImageSrc","isPhotoTaken","setIsPhotoTaken","webcamRef","createRef","osStatus","getMobileOperatingSystem","userAgent","navigator","vendor","opera","MSStream","userData","photoSrc","idSrc","SourceImage","S3Object","Name","TargetImage","SimilarityThreshold","Rekognition","compareFaces","response","FaceMatches","forEach","similarity","Similarity","audio","screenshotFormat","ref","current","getScreenshot","takePhoto","uploadPhoto","UserId","uploadingProgress","setUploadingProgress","alert","justifyContent","Divider","marginBottom","alignSelf","display","on","progress","percent","parseInt","loaded","total","ProgressBar","now","label","animated","VerificationSuccess","open","IDAuth","userToken","authStep","substr","verifyURL","photo_source","photo_target","uploadedPhoto","uploadedId","blob","resultMsg","msgColor","resultBtnStatus","showLoadingIcon","apiTmr","photoCapture","photoTake","comparePhoto","navToVerify","that","clearInterval","setInterval","imgFile","verifyType","errMsg","client","stack","BoundingBox","level","includeMargin","alt","AuthRoute","children","rest","render","to","pathname","from","App","path","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51dd48aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    goBack(){\r\n        window.location.href = '/submit';\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>That info has been received and email has been sent to candidate. You can invite another candidate.</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 15 }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\"\r\n                                    onClick={this.goBack}\r\n                                >Go Back</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitSuccess);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitIDSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>You uploaded your ID photo successfully!</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitIDSuccess);","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <nav class=\"navbar navbar-expand-lg\">\r\n                                    <a class=\"navbar-brand\" href=\"/\">interverify</a>\r\n                                    <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n                                        data-target=\"#navb\">\r\n                                        <span class=\"navbar-toggler-icon\"></span>\r\n                                    </button>\r\n\r\n                                    <div class=\"collapse navbar-collapse\" id=\"navb\">\r\n                                        <ul class=\"navbar-nav ml-auto\">\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"/\">Home</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"about\">About us</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"#Features_\">Features</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"#Testimonials_\">Testimonials</a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a class=\"nav-link btn_1\" href=\"register\">Get Started Free</a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <section class=\"heroSection\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row heroRow\">\r\n                            <div class=\"col-xl-7 col-lg-6 col-md-6 col-12 heroSliderFull\">\r\n                                <h1>Realtime identity verification for Virtual Hiring!\r\n                </h1>\r\n                                <p>The smart solution for secure, seamless identity verification for remote interviewing\r\n\r\n\r\n                </p>\r\n                                <a href=\"register\" class=\"btn_1\">Get Started Free</a>\r\n                            </div>\r\n                            <div class=\"col-xl-5 col-lg-6 col-md-6 col-12 heroSliderFull\">\r\n                                <img src=\"images/img_2.png\" class=\"heroImg\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"secondSection\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"col-lg-8 col-md-12 col-12\">\r\n                                <p>Interverify offers easy to implement and reliable identity verification services for recruitment\r\n                                process. We have designed an advance software and algorithms into a simple and straightforward\r\n                                interface that is compatible with any video conferencing application. Our flexible system lets\r\n                                you adjust the parameters to suit your needs and verify candidates through various checks.\r\n                    Interverify solutions are easy to set up and even easier to maintain!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"featuresSection\" id=\"Features_\">\r\n                    <div class=\"featurBgWrap\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-12 titleCol\">\r\n                                    <h1>Features</h1>\r\n                                    <p>Get ready to verify and identify candidates in seconds with the swift and reliable\r\n                        Interverify integration! <br />Take advantage of our feature-rich and efficiently automated\r\n                        solutions today.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 imgCenter\">\r\n                                    <img src=\"images/feature_1.svg\" />\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 f_textCol\">\r\n                                    <div>\r\n                                        <h2>Deep facial Analysis</h2>\r\n                                        <p>We use 2 levels of facial recognition technology to provide high level of certainty that\r\n                                        the Individual matches the provided ID.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 f_textCol leftTextCol\">\r\n                                    <div>\r\n                                        <h2>ID Authentication\r\n                        </h2>\r\n                                        <p>leverage AI and ML to identify characteristics of ID, making sure ID passes all\r\n                                        authentication checks.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 order-1 imgCenter\">\r\n                                    <img src=\"images/feature_2.svg\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 imgCenter\">\r\n                                    <img src=\"images/feature_3.svg\" />\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 f_textCol\">\r\n                                    <div>\r\n                                        <h2>IP Address verification.\r\n                        </h2>\r\n                                        <p>Verify that Candidate taking the verification is at the correct location provided, using\r\n                                        IP Address verification.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 f_textCol leftTextCol\">\r\n                                    <div>\r\n                                        <h2>Platform Agnostic\r\n\r\n                        </h2>\r\n                                        <p>This can be used with any video conferencing platform including Zoom, Skype, Google\r\n                                        Hangout, HireVue and much more.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 order-1 imgCenter\">\r\n                                    <img src=\"images/feature_2.svg\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 imgCenter\">\r\n                                    <img src=\"images/feature_3.svg\" />\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 f_textCol\">\r\n                                    <div>\r\n                                        <h2>Quick and Easy to use.\r\n\r\n                        </h2>\r\n                                        <p>Entire verification process takes less than 1 minute to deliver analysis, and provides\r\n                                        guided steps to conclude verification process.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"testimonialsSection ptb_100\" id=\"Testimonials_\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-12 titleCol\">\r\n                                <h1>Testimonials</h1>\r\n                                <p>What People are saying about us</p>\r\n                            </div>\r\n                            <div class=\"col-12 testCol__\">\r\n                                <div class=\"t_imgRound _01\"><img src=\"images/test_round_1.png\" /></div>\r\n                                <div class=\"t_imgRound _02\"><img src=\"images/test_round_2.png\" /></div>\r\n                                <div class=\"t_imgRound _03\"><img src=\"images/test_round_3.png\" /></div>\r\n                                <div class=\"t_imgRound _04\"></div>\r\n                                <div class=\"t_imgRound _05\"></div>\r\n                                <div id=\"testoSlider\" class=\"carousel slide testoSlider_\" data-ride=\"carousel\">\r\n\r\n                                    <div class=\"carousel-inner\">\r\n                                        <div class=\"carousel-item active\">\r\n                                            <div class=\"testoRow\">\r\n                                                <div class=\"testoMaintext\">\r\n                                                    <p>“Interverify helped us in saving tons of hours of identification process into\r\n                                        seconds by providing the automate solutions.”</p>\r\n                                                </div>\r\n                                                <div class=\"clientInfo\">\r\n                                                    <div class=\"avtImg\">\r\n                                                        <img src=\"images/test_img_1.png\" />\r\n                                                    </div>\r\n                                                    <div class=\"avtText\">\r\n                                                        <div class=\"_name\">Alex Smith</div>\r\n                                                        <div class=\"_designation\">CEO of Duplee</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"carousel-item\">\r\n                                            <div class=\"testoRow\">\r\n                                                <div class=\"testoMaintext\">\r\n                                                    <p>“Interverify helped us in saving tons of hours of identification process into\r\n                                        seconds by providing the automate solutions.”</p>\r\n                                                </div>\r\n                                                <div class=\"clientInfo\">\r\n                                                    <div class=\"avtImg\">\r\n                                                        <img src=\"images/test_img_1.png\" />\r\n                                                    </div>\r\n                                                    <div class=\"avtText\">\r\n                                                        <div class=\"_name\">Alex Smith</div>\r\n                                                        <div class=\"_designation\">CEO of Duplee</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"carousel-item\">\r\n                                            <div class=\"testoRow\">\r\n                                                <div class=\"testoMaintext\">\r\n                                                    <p>“Interverify helped us in saving tons of hours of identification process into\r\n                                        seconds by providing the automate solutions.”</p>\r\n                                                </div>\r\n                                                <div class=\"clientInfo\">\r\n                                                    <div class=\"avtImg\">\r\n                                                        <img src=\"images/test_img_1.png\" />\r\n                                                    </div>\r\n                                                    <div class=\"avtText\">\r\n                                                        <div class=\"_name\">Alex Smith</div>\r\n                                                        <div class=\"_designation\">CEO of Duplee</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"arrowCol\">\r\n                                        <a class=\"carousel-control-prev\" href=\"#testoSlider\" data-slide=\"prev\">\r\n                                            <span class=\"prev-icon\"></span>\r\n                                        </a>\r\n                                        <a class=\"carousel-control-next\" href=\"#testoSlider\" data-slide=\"next\">\r\n                                            <span class=\"next-icon\"></span>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"getStartSection\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"getStartCol\">\r\n                                    <div class=\"\">\r\n                                        <h1>Get Started with us</h1>\r\n                                        <p>Still Confused Interverify is right choice for you ? No problem.</p>\r\n                                        <a href=\"register\" class=\"btn_1\">Get Started Free</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <footer>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-12\">\r\n                                <div class=\"f_comInfo\">\r\n                                    <div class=\"f_logo\">interverify</div>\r\n                                    <p>Interverify makes online candidate verification efficient, cost-effective, and compliant with\r\n                                    the online code of ethics. We offer secure and flexible solutions in the interest of\r\n                        preventing identity theft, security breaches,</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-12\">\r\n                                <h6>Quick Links</h6>\r\n                                <ul class=\"f_links\">\r\n                                    <li><a href=\"/\">Home</a></li>\r\n                                    <li><a href=\"/#Features_\">Features</a></li>\r\n                                    <li><a href=\"/#Testimonials_\">Testimonials</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-12\">\r\n                                <h6>Contact</h6>\r\n                                <ul class=\"f_links\">\r\n                                    <li><a href=\"mailto:contact@interverify.co\">contact@interverify.co</a></li>\r\n                                </ul>\r\n\r\n                                <h6 class=\"mt-4\">Phone</h6>\r\n                                <ul class=\"f_links\">\r\n                                    <li><a href=\"tel:2324-2323-2323\">2324-2323-2323</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row copyRightRow__\">\r\n                            <div class=\"col-md-6 col-12\">\r\n                                <ul class=\"socialLinksList\">\r\n                                    <li><a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a></li>\r\n                                    <li><a href=\"#\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                                    <li><a href=\"#\"><i class=\"fab fa-instagram\"></i></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-12\">\r\n                                <p class=\"copyRight__\">© 2020 All Rights Reserved</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LandingPage);","const siteUrl = \"https://interverify.co\";\r\n//const siteUrl = \"http://localhost:3000/\";\r\nconst redirectUrl = siteUrl + '/idme_code'\r\nconst clientId = \"34d614b8c18543abd81f338aaeb7b0de\"\r\n\r\nexport default {\r\n    siteUrl: siteUrl,\r\n    idme: {\r\n        cliendId: clientId,\r\n        clientSecret: \"949e15f3b1dace8c2a3c685032d4e28d\",\r\n        redirectUrl: redirectUrl,\r\n        authEndPoint: \"https://api.id.me/oauth/authorize?client_id=\" + clientId + \"&redirect_uri=\" + redirectUrl + \"&response_type=token&scope=loa3\",\r\n        \r\n    },\r\n    aws: {\r\n        accessKey: \"AKIAVJKPVCLEKM2YG33J\",\r\n        secretKey: \"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\",\r\n        region: \"us-east-2\",\r\n        bucket: \"idauth\"\r\n    },\r\n    api:{\r\n        // get requests\r\n        verifyID: '/verifyID', \r\n        \r\n        // post requests\r\n        getUser: '/api/getUser',\r\n        registerUser: '/api/registerUser',\r\n        sendMail: '/api/sendMail',\r\n        sendResultMail: '/api/sendResultMail',\r\n        updateUserInfo: '/api/updateUserInfo',\r\n        adminLogin: '/api/admin/login',\r\n        adminGetAllUsers: '/api/admin/getAllUsers',\r\n        adminDeleteUser: '/api/admin/deleteUser',\r\n        adminUpdate: '/api/admin/updateUser',\r\n        getPhotoId: '/api/vouchedVerification'\r\n    },\r\n    vouched_PUBLIC_KEY: 'V~F_e~g0ySKtaos#PX.I9Vo4P*1Kxh'\r\n}","import React from \"react\";\r\nimport config from \"../config/front_config\";\r\n\r\nexport default class RegisterForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInfo: {\r\n                candidate_name_first: '',\r\n                candidate_name_last: '',\r\n                candidate_email: '',\r\n                date_of_interview: '',\r\n                social_link: '',\r\n                interviewer_name_first: '',\r\n                interviewer_name_last: '',\r\n                interviewer_email: '',\r\n            },\r\n            isUploading: false,\r\n            displayMessage: {\r\n                type: '',\r\n                message: ''\r\n            },\r\n            formError: {}\r\n        };\r\n        this.registerUserData = this.registerUserData.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    validateForm(userInfo) {\r\n        const errorMessages = {};\r\n        if (userInfo) {\r\n            if (!userInfo['candidate_name_first']) { errorMessages['candidate_name_first'] = 'Candidate First Name is required'; }\r\n            if (!userInfo['candidate_name_last']) { errorMessages['candidate_name_last'] = 'Candidate Last Name is required'; }\r\n            if (!userInfo['candidate_email']) { errorMessages['candidate_email'] = 'Candidate Email is required'; }\r\n            if (!userInfo['date_of_interview']) { errorMessages['date_of_interview'] = 'Date of Interview is required'; }\r\n            if (!userInfo['social_link']) { errorMessages['social_link'] = 'Interview Link is required'; }\r\n            if (!userInfo['interviewer_name_first']) { errorMessages['interviewer_name_first'] = 'Interview First Name is required'; }\r\n            if (!userInfo['interviewer_name_last']) { errorMessages['interviewer_name_last'] = 'Interview Last Name is required'; }\r\n            if (!userInfo['interviewer_email']) { errorMessages['interviewer_email'] = 'Interview Email is required'; }\r\n        } else {\r\n            errorMessages['candidate_name_first'] = 'Candidate First Name is required';\r\n            errorMessages['candidate_name_last'] = 'Candidate Last Name is required';\r\n            errorMessages['candidate_email'] = 'Candidate Email is required';\r\n            errorMessages['date_of_interview'] = 'Date of Interview is required';\r\n            errorMessages['social_link'] = 'Interview Link is required';\r\n            errorMessages['interviewer_name_first'] = 'Interview First Name is required';\r\n            errorMessages['interviewer_name_last'] = 'Interview Last Name is required';\r\n            errorMessages['interviewer_email'] = 'Interview Email is required';\r\n        }\r\n        this.setState({ formError: errorMessages })\r\n        return !(Object.keys(errorMessages).length);\r\n    }\r\n\r\n    registerUserData(e) {\r\n        e.preventDefault();\r\n        var { userInfo, isUploading } = this.state;\r\n        if (this.validateForm(userInfo)) {\r\n            if (isUploading) return;\r\n            this.setState({ isUploading: true });\r\n            fetch(config.api.registerUser, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                method: \"POST\",\r\n                body: JSON.stringify(userInfo)\r\n            }).then(res => res.json()).then(data => {\r\n                if (data.status) {\r\n                    fetch(config.api.sendMail, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: data.token\r\n                        }),\r\n                    }).then(() => {\r\n                        this.setState({ isUploading: false });\r\n                        this.showErrorMessage('success', 'Registered User Successfully');\r\n                        window.location.href = \"/success\";\r\n                    });\r\n                } else {\r\n                    this.setState({ isUploading: false });\r\n                    this.showErrorMessage('error', 'Something went wrong!');\r\n                }\r\n            }).catch(err => {\r\n                this.setState({ isUploading: false });\r\n                this.showErrorMessage('error', 'Something went wrong!');\r\n            });\r\n        } else {\r\n            this.showErrorMessage('error', 'Some of your inputs are not valid!');\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        const fname = e.target.name;\r\n        const value = e.target.value;\r\n        const { userInfo } = this.state;\r\n        userInfo[fname] = value;\r\n        this.state.userInfo = userInfo;\r\n    }\r\n\r\n    showErrorMessage(type, message) {\r\n        this.setState({\r\n            displayMessage: {\r\n                type,\r\n                message\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                displayMessage: undefined\r\n            });\r\n        }, 3000);\r\n    }\r\n\r\n\r\n    showMessage() {\r\n        if (this.state.displayMessage && this.state.displayMessage.type && this.state.displayMessage.message) {\r\n            if (this.state.displayMessage.type === 'success') {\r\n                return (\r\n                    <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />{this.state.displayMessage.message}</div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div class=\"errorMsg\"><i class=\"fas fa-times-circle errorMsgIcon\"></i>{this.state.displayMessage.message}</div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div class=\"innerPage ptb_100\">\r\n                <section>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"text-center\">\r\n                                    <a href=\"/\" class=\"logoIn mb-5\">interverify</a>\r\n                                </div>\r\n                                <div class=\"whiteWrap\">\r\n                                    <h3 class=\"text-center\">Interview Details</h3>\r\n                                    <div class=\"row form___Row pt-5\">\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Candidate First Name <span class=\"req__\">*</span></label>\r\n                                                <input name=\"candidate_name_first\" onChange={this.handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['candidate_name_first'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['candidate_name_first'] ? this.state.formError['candidate_name_first'] : 'Candidate First Name is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Candidate Last Name <span class=\"req__\">*</span></label>\r\n                                                <input name=\"candidate_name_last\" onChange={this.handleChange} type=\"text\" placeholder=\"Enter Candidate Last Name\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['candidate_name_last'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['candidate_name_last'] ? this.state.formError['candidate_name_last'] : 'Candidate Last Name is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Candidate Email <span class=\"req__\">*</span></label>\r\n                                                <input name=\"candidate_email\" onChange={this.handleChange} type=\"email\" placeholder=\"example@example.com\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['candidate_email'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['candidate_email'] ? this.state.formError['candidate_email'] : 'Candidate Email is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Date <span class=\"req__\">*</span></label>\r\n                                                <input name=\"date_of_interview\" onChange={this.handleChange} type=\"date\" placeholder=\"Interview Date\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['date_of_interview'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['date_of_interview'] ? this.state.formError['date_of_interview'] : 'Date of Interview is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Link <span class=\"req__\">*</span></label>\r\n                                                <input name=\"social_link\" type=\"text\" onChange={this.handleChange} placeholder=\"Zoom, Skype, Bluejeans, Hirevue link\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['social_link'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['social_link'] ? this.state.formError['social_link'] : 'Interview Link is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview First Name<span class=\"req__\">*</span></label>\r\n                                                <input name=\"interviewer_name_first\" type=\"text\" onChange={this.handleChange} placeholder=\"Enter Interview First Name\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['interviewer_name_first'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['interviewer_name_first'] ? this.state.formError['interviewer_name_first'] : 'Interviewer First Name is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Last Name <span class=\"req__\">*</span></label>\r\n                                                <input name=\"interviewer_name_last\" type=\"text\" onChange={this.handleChange} placeholder=\"Enter Interview Last Name\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['interviewer_name_last'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['interviewer_name_last'] ? this.state.formError['interviewer_name_last'] : 'Interviewer Last Name is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Email<span class=\"req__\">*</span></label>\r\n                                                <input name=\"interviewer_email\" type=\"email\" onChange={this.handleChange} placeholder=\"example@example.com\" class=\"input__\" />\r\n                                                {this.state.formError && this.state.formError['interviewer_email'] ? <small style={{ color: '#d32222', marginLeft: 3 }}>{this.state.formError['interviewer_email'] ? this.state.formError['interviewer_email'] : 'Interviewer Email is not valid.'}</small> : null}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12 col-12\">\r\n                                            <div class=\"form-group text-center pt-2\">\r\n                                                <a onClick={this.registerUserData} class=\"btn_1\">{this.state.isUploading ? 'Uploading...' : 'Submit'}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 text-center mt-3\">\r\n                                            <p class=\"not__\">By clicking start verification you <br />accept <a>all terms and conditions</a></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                {this.showMessage()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Modal, Table, Spinner, Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst AdminPage = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [error, setError] = useState();\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState();\r\n    const [itemToDeleteIndex, setItemToDelete] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const getUsers = async () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            try {\r\n                setIsLoading(true);\r\n                const users = await fetch(config.api.adminGetAllUsers, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"GET\"\r\n                }).then(res => res.json());\r\n                setIsLoading(false);\r\n                if (users && users['data'] && users['data'].length) {\r\n                    setUsers(users['data']);\r\n                } else {\r\n                    setError('Sorry!, No records found!');\r\n                }\r\n            }\r\n            catch (err) {\r\n                setError('Sorry!, Got issue on loading the records');\r\n                setIsLoading(false);\r\n            }\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const deleteConfermation = () => {\r\n        if (showDeleteConfirmation) {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Modal.Dialog>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Delete user!</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Are you sure to remove this user?</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => setShowDeleteConfirmation(false)} variant=\"secondary\">No</Button>\r\n                            <Button onClick={() => confirmDelete()} variant=\"danger\">yes, Delete</Button>\r\n                        </Modal.Footer>\r\n                    </Modal.Dialog>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const deleteItem = (itemIndex) => {\r\n        setShowDeleteConfirmation(true);\r\n        setItemToDelete(itemIndex);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        setShowDeleteConfirmation(false);\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.adminDeleteUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id: users[itemToDeleteIndex].id,\r\n                    token: users[itemToDeleteIndex].token\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data['success']) {\r\n                    const newUserList = users;\r\n                    newUserList.splice(itemToDeleteIndex, 1);\r\n                    setUsers(newUserList);\r\n                    setItemToDelete(undefined);\r\n                    if (!(users && users.length)) {\r\n                        setError('Sorry!, No records found!');\r\n                    }\r\n                } else {\r\n                    setError(data['message'] ? data['message'] : 'Issue on deleting user');\r\n                }\r\n            })\r\n                .catch(err => {\r\n                    setIsLoading(false);\r\n                    setError(\"Issue on deleting! \", err);\r\n                })\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage\" style={{ backgroundImage: \"linear-gradient(#25C14F, #fff)\", overflow: 'auto' }}>\r\n            <Button style={{ margin: 30, height: 50, width: 150, border: 0, float: 'right', backgroundImage: \"linear-gradient(#fff, #25C14F)\" }} onClick={() => logout()}><i className=\"fa fa-sign-out-alt\"></i> Logout</Button>\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%', color: 'white' }} animation=\"border\" />\r\n            </div> : null}\r\n            {!isLoading && <div class=\"container whiteWrap\" style={{ marginTop: 100, overflow: 'scroll' }}>\r\n                <Table style={{ tableLayout: 'auto', color: '#555555' }} striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Candidate First Name</th>\r\n                            <th>Candidate Last Name</th>\r\n                            <th>Candidate Email</th>\r\n                            <th>Photo Verification</th>\r\n                            <th>ID Verification</th>\r\n                            <th>Result Verification</th>\r\n                            <th>Interview Date</th>\r\n                            <th>Social Link</th>\r\n                            <th>Interviewer First Name</th>\r\n                            <th>Interviewer Last Name</th>\r\n                            <th>Interviewer Email</th>\r\n                            <th>Similarity</th>\r\n                            <th>Vouched verification</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {(!error) ?\r\n                        <tbody>\r\n                            {users.map((user, index) => {\r\n                                return (\r\n                                    <tr key={index} style={{ lineBreak: 'anywhere' }}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{user['candidate_name_first'] ? user['candidate_name_first'] : '--'}</td>\r\n                                        <td>{user['candidate_name_last'] ? user['candidate_name_last'] : '--'}</td>\r\n                                        <td>{user['candidate_email'] ? user['candidate_email'] : '--'}</td>\r\n                                        <td>{user['verify_photo'] ? user['verify_photo'] : '--'}</td>\r\n                                        <td>{user['verify_idcard'] ? user['verify_idcard'] : '--'}</td>\r\n                                        <td>{user['verify_result'] ? user['verify_result'] : '--'}</td>\r\n                                        <td>{user['date_of_interview'] ? user['date_of_interview'] : '--'}</td>\r\n                                        <td>{user['social_link'] ? user['social_link'] : '--'}</td>\r\n                                        <td>{user['interviewer_name_first'] ? user['interviewer_name_first'] : '--'}</td>\r\n                                        <td>{user['interviewer_name_last'] ? user['interviewer_name_last'] : '--'}</td>\r\n                                        <td>{user['interviewer_email'] ? user['interviewer_email'] : '--'}</td>\r\n                                        <td>{user['similarity'] ? user['similarity'] : '--'}</td>\r\n                                        <td>{user['id_verification_result'] ? user['id_verification_result'] : '--'}</td>\r\n                                        <td>\r\n                                            <ButtonGroup size=\"sm\">\r\n                                                <Button onClick={() => history.push(`/admin/update/${user['token']}`)}><i className=\"fa fa-edit\"></i></Button>\r\n                                                <Button onClick={() => deleteItem(index)} variant=\"danger\"><i className=\"fa fa-trash\"></i></Button>\r\n                                            </ButtonGroup>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody> : null}\r\n                </Table>\r\n                {error ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{error}!</Alert> : null}\r\n                {deleteConfermation()}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(AdminPage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [displayMessage, setDisplayMessage] = useState();\r\n\r\n    const history = useHistory();\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validatePassword = (password) => {\r\n        if (password) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validateEmail(email)) {\r\n            if (validatePassword(password)) {\r\n                loginUser();\r\n            } else {\r\n                showErrorMessage('error', \"Issue on password text\");\r\n            }\r\n        } else {\r\n            showErrorMessage('error', \"Invalid email\");\r\n        }\r\n    }\r\n\r\n    const loginUser = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.adminLogin, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                userName: email,\r\n                password: password\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data['success'] && data['token']) {\r\n                localStorage.setItem(\"authToken\", data['token']);\r\n                history.push('/admin');\r\n            } else {\r\n                showErrorMessage('error', ((data && data['message'] && data['message']['message']) ? data['message']['message'] : 'Issue on login!'));\r\n            }\r\n        })\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                showErrorMessage('error', 'Issue on login!');\r\n            })\r\n\r\n    }\r\n\r\n    const showErrorMessage = (type, message) => {\r\n        setDisplayMessage({\r\n            type,\r\n            message\r\n        });\r\n        setTimeout(() => {\r\n            setDisplayMessage();\r\n        }, 3000);\r\n    }\r\n\r\n\r\n\r\n    const showMessage = () => {\r\n        if (displayMessage && displayMessage.type && displayMessage.message) {\r\n            if (displayMessage.type === 'success') {\r\n                return (\r\n                    <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />{displayMessage.message}</div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div class=\"errorMsg\"><i class=\"fas fa-times-circle errorMsgIcon\"></i>{displayMessage.message}</div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_100\">\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <section>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"whiteWrap\" style={{ width: '45%' }}>\r\n                                <div class=\"text-center\">\r\n                                    <a href=\"/\" class=\"logoIn mb-3\">interverify</a>\r\n                                </div>\r\n                                <div class=\"col-12 text-center mt-1\">\r\n                                        <p class=\"not__\">Administrator Login</p>\r\n                                    </div>\r\n                                <div class=\"row form___Row pt-5\">\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Email address <span class=\"req__\">*</span></label>\r\n                                            <input onChange={(event) => setEmail(event.target.value)} type=\"email\" placeholder=\"Enter Email address\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Password <span class=\"req__\">*</span></label>\r\n                                            <input onChange={(event) => setPassword(event.target.value)} type=\"password\" placeholder=\"Enter Password\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12 col-12\">\r\n                                        <div class=\"form-group text-center pt-2\">\r\n                                            <a onClick={handleSubmit} class=\"btn_1\">Login</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {showMessage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst UpdateUser = () => {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState();\r\n    const [userWithoutEdit, setUserWithoutEdit] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n    const [displayMessage, setDisplayMessage] = useState();\r\n\r\n    useEffect(() => {\r\n        showErrorMessage(\"success\", \"Updated.\");\r\n        getUser();\r\n    }, []);\r\n\r\n    const validateEmail = (email) => {\r\n        if (!email) { return false; }\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const fname = e.target.name;\r\n        const value = e.target.value;\r\n        const currentVal = user;\r\n        currentVal[fname] = value;\r\n        setUser(currentVal);\r\n    }\r\n\r\n    const getUser = () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.getUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    token: id\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data && data['data'] && data['data']['token']) {\r\n                    setUser(data['data']);\r\n                    setUserWithoutEdit(data['data']);\r\n                } else {\r\n                    showErrorMessage('error', 'User not found!');\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                showErrorMessage('error', 'Unable to fetch user info!');\r\n            })\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const update = () => {\r\n        if (validateEmail(user['candidate_email'])) {\r\n            const token = localStorage.getItem(\"authToken\");\r\n            if (token) {\r\n                setIsLoading(true);\r\n                fetch(config.api.adminUpdate, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        ...user\r\n                    })\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data['status']) {\r\n                        showErrorMessage(\"success\", \"Updated.\");\r\n                        history.push('/admin');\r\n                    } else {\r\n                        showErrorMessage('error', 'Issue on updating user');\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        setIsLoading(false);\r\n                        showErrorMessage('error', 'Issue on updating user');\r\n                    })\r\n            } else {\r\n                history.push('/login');\r\n            }\r\n        } else {\r\n            showErrorMessage('error', 'Candidate Email should be valid');\r\n        }\r\n    }\r\n\r\n    const showErrorMessage = (type, message) => {\r\n        setDisplayMessage({\r\n            type,\r\n            message\r\n        });\r\n        setTimeout(() => {\r\n            setDisplayMessage();\r\n        }, 3000);\r\n    }\r\n\r\n    const showMessage = () => {\r\n        if (displayMessage && displayMessage.type && displayMessage.message) {\r\n            if (displayMessage.type === 'success') {\r\n                return (\r\n                    <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />{displayMessage.message}</div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div class=\"errorMsg\"><i class=\"fas fa-times-circle errorMsgIcon\"></i>{displayMessage.message}</div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_100\">\r\n            <section>\r\n                    {isLoading ? <div\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            textAlign: 'center',\r\n                            backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                            zIndex: 999\r\n                        }}>\r\n                        <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                    </div> : null}\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"/\" class=\"logoIn mb-5\">interverify</a>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n                                <h3 class=\"text-center\">Interview Details</h3>\r\n                                <div class=\"row form___Row pt-5\">\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Candidate First Name </label>\r\n                                            <input defaultValue={user?.candidate_name_first} name=\"candidate_name_first\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Candidate Last Name </label>\r\n                                            <input defaultValue={user?.candidate_name_last} name=\"candidate_name_last\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Candidate Email </label>\r\n                                            <input defaultValue={user?.candidate_email} name=\"candidate_email\" onChange={handleChange} type=\"email\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Date Of Interview </label>\r\n                                            <input defaultValue={user?.date_of_interview} name=\"date_of_interview\" onChange={handleChange} type=\"date\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Interview Link </label>\r\n                                            <input defaultValue={user?.social_link} name=\"social_link\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Interview First Name </label>\r\n                                            <input defaultValue={user?.interviewer_name_first} name=\"interviewer_name_first\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Interview Last Name </label>\r\n                                            <input defaultValue={user?.interviewer_name_last} name=\"interviewer_name_last\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Interview Email </label>\r\n                                            <input defaultValue={user?.interviewer_email} name=\"interviewer_email\" onChange={handleChange} type=\"email\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Similarity Score</label>\r\n                                            <input defaultValue={user?.verify_result} name=\"verify_result\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Uploaded Photo </label>\r\n                                            <input defaultValue={user?.verify_photo} name=\"verify_photo\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Uploaded IDcard </label>\r\n                                            <input defaultValue={user?.verify_idcard} name=\"verify_idcard\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"label__\">Vouched verification </label>\r\n                                            <input defaultValue={user?.id_verification_result} name=\"id_verification_result\" onChange={handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-12 col-12\">\r\n                                            <div class=\"form-group text-center pt-2\">\r\n                                                <a onClick={() => update()} class=\"btn_1\">Update</a>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div class=\"col-12 text-center mt-3\">\r\n                                            <p class=\"not__\">By clicking start verification you <br />accept <a>all terms and conditions</a></p>\r\n                                        </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {showMessage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUser;","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport config from \"../config/front_config\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nconst VerificationBase = () => {\r\n\r\n    const [verificationErrors, setVerificationErrors] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [displayMessage, setDisplayMessage] = useState();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    const vouchedBaseLoaded = () => {\r\n        var vouched = window.Vouched({\r\n            appId: config.vouched_PUBLIC_KEY,\r\n            crossDevice: true,\r\n            crossDeviceQRCode: true,\r\n            onSubmit: ({ stage, attempts, job }) => {\r\n                console.log('submit', { stage, attempts, job });\r\n            },\r\n            onCamera: ({ hasCamera, hasPermission }) => {\r\n                console.log('onCamera', { hasCamera, hasPermission });\r\n            },\r\n            onInit: ({ token }) => {\r\n                console.log('initialization');\r\n            },\r\n            onDone: (job) => {\r\n                console.log(job);\r\n                onVerificationCompleted(job);\r\n            },\r\n            stepTitles: {\r\n                FrontId: 'Upload ID',\r\n                Face: 'Upload Headshot',\r\n                Done: 'Finished'\r\n            },\r\n            content: {\r\n                cameraButton: 'Take a Photo',\r\n                crossDeviceTitle: 'ID Verification',\r\n                crossDeviceInstructions: 'We need to verify your identity. This requires government-issued photo ID as well as selfie. Please follow the instructions below to continue the verification process on your phone',\r\n                crossDeviceSuccess: 'Verification is complete, continue on your desktop',\r\n                review: 'Verification complete',\r\n                upperSuccess: 'Your photo uploads are complete!',\r\n                success: 'Please close this window to return your online visit.',\r\n                lowerSuccess: 'Thank you.',\r\n                upperIdInstructions:\r\n                    'Before you start please have an approved Government ID (e.g. Passport / Driving License) in your hand.',\r\n                lowerIdInstructions: 'Please take a photo of your ID now',\r\n                upperFaceInstructions: 'Time to take a photo.',\r\n                lowerFaceInstructions: 'Please take a clear picture of your face, and make sure it does not include:',\r\n                upperFailure: 'Try Again',\r\n                verifyFail: 'Sorry for the inconvenience',\r\n                lowerFailure:\r\n                    \"The photo you shared can't be used for validation. Please take another picture, making sure the image of your face or your ID is clear.\"\r\n            },\r\n            theme: {\r\n                name: 'verbose',\r\n                font: \"'Avenir', sans-serif\",\r\n                fontColor: '#646769',\r\n                iconLabelColor: '#413d3a',\r\n                bgColor: '#FFF',\r\n                baseColor: '#62ACDE',\r\n                navigationDisabledBackground: '#b3def1',\r\n                navigationDisabledText: '#a3d7ee',\r\n                navigationActiveText: '#413d3a',\r\n                iconColor: '#f6f5f3',\r\n                iconBackground: '#62ACDE'\r\n            }\r\n        });\r\n        vouched.mount(\"#vouched-element\");\r\n    }\r\n\r\n    const initVouchedBase = () => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://static.vouched.id/widget/vouched.js\";\r\n        script.async = true;\r\n        script.onload = () => vouchedBaseLoaded();\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    const onVerificationCompleted = (verificationResult) => {\r\n        if (verificationResult) {\r\n            const errors = verificationResult.errors;\r\n            if (errors && errors.length) {\r\n                showErrorMessage('error', 'verification Not completed!');\r\n                setVerificationErrors(errors);\r\n            } else {\r\n                console.log(\"verificationResult\", verificationResult);\r\n                getPhotoIDandUpdateToAWS(verificationResult['token']);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPhotoIDandUpdateToAWS = (verificationToken) => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getPhotoId, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                verificationToken\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data[\"status\"]) {\r\n                uploadPhotoID(data[\"data\"]);\r\n            } else {\r\n                showErrorMessage('error', 'Verification not compleded!');\r\n            }\r\n        })\r\n            .catch(err => {\r\n                showErrorMessage('error', 'Verification not compleded!');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const uploadPhotoID = (imageToUpload) => {\r\n        imageToUpload = dataURItoBlob(imageToUpload);\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const fileName = token + '_id.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setIsLoading(true);\r\n        bucket.putObject(params, function (err, data) {\r\n            setIsLoading(false);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_idcard: fileName,\r\n                        id_verification_result: \"verified\"\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        history.push('/userphoto?token=' + token);\r\n                    } else {\r\n                        showErrorMessage('error', 'Sorry, for the Inconvenience caused by us!. please try again in some time.');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    showErrorMessage('error', 'photo upload faild!');\r\n                });\r\n            } else {\r\n                showErrorMessage('error', (err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        initVouchedBase();\r\n        getUserWithToken();\r\n    }, []);\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        showErrorMessage('success', 'All your verification has been completed');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else {\r\n                        history.push('/userphoto?token=' + token);\r\n                    }\r\n                }\r\n            } else {\r\n                showErrorMessage('error', 'User not found!');\r\n            }\r\n        }).catch(err => {\r\n            showErrorMessage('error', 'Unable to fetch user info!');\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const showErrorMessage = (type, message) => {\r\n        setDisplayMessage({\r\n            type,\r\n            message\r\n        });\r\n        setTimeout(() => {\r\n            setDisplayMessage();\r\n        }, 3000);\r\n    }\r\n\r\n    const showMessage = () => {\r\n        if (displayMessage && displayMessage.type && displayMessage.message) {\r\n            if (displayMessage.type === 'success') {\r\n                return (\r\n                    <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />{displayMessage.message}</div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div class=\"errorMsg\"><i class=\"fas fa-times-circle errorMsgIcon\"></i>{displayMessage.message}</div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_100\">\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <section class=\"\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"/\" class=\"logoIn mb-5\">interverify</a>\r\n                                <ul class=\"processHead\">\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">1</span>\r\n                                        <span class=\"t__\">ID Verification</span>\r\n                                    </li>\r\n                                    <li >\r\n                                        <span class=\"round_no\">2</span>\r\n                                        <span class=\"t__\">Photo Verification</span>\r\n                                    </li>\r\n                                    <li >\r\n                                        <span class=\"round_no\">3</span>\r\n                                        <span class=\"t__\">Finished</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n                                {/* <h3 class=\"text-center\">ID Verification</h3>\r\n                                <div class=\"row form___Row pt-5\"> */}\r\n                                {/* <div class=\"col-md-12 col-12 qrCol__\">\r\n                                        <div class=\"wrap400 ml-auto yourIDM50\">\r\n                                            <h4>QR code from vouched</h4>\r\n                                            <div class=\"qrHolder\">\r\n                                                <img src=\"images/qrCode.png\" />\r\n                                            </div>\r\n                                            <div>\r\n                                                <p>Text from vouched</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                    <div>*/}\r\n                                <div id='vouched-element' />\r\n                            </div>\r\n                            {(verificationErrors && verificationErrors.length) ?\r\n                                <div style={{ color: 'red', marginTop: 20 }}>\r\n                                    <h4 class=\"text-center\">Verification Not completed!</h4>\r\n                                    <ul class=\"text-center\" style={{ fontSize: 25 }}>\r\n                                        {verificationErrors.map((error, index) => <li key={index}>{error.message}</li>)}\r\n                                    </ul>\r\n                                </div>\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {showMessage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerificationBase;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Divider } from \"rsuite\";\r\nimport config from \"../config/front_config\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nlet videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nconst UserPhoto = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [imageSrc, setImageSrc] = useState();\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState();\r\n    const [displayMessage, setDisplayMessage] = useState();\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const webcamRef = React.createRef();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n        var osStatus = getMobileOperatingSystem();\r\n        if (osStatus == 'Android' || osStatus == 'iOS') {\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }, []);\r\n\r\n    const getMobileOperatingSystem = () => {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        showErrorMessage('success', 'All your verification has been completed!');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            } else {\r\n                showErrorMessage('error', 'User not found!');\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            showErrorMessage('error', 'Unable to fetch user info!');\r\n        })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        if (webcamRef && webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                showErrorMessage('error', 'Camera is not connected!!');\r\n                return;\r\n            }\r\n            setImageSrc(imageSrc);\r\n            setIsPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    const uploadPhoto = () => {\r\n        if(!imageSrc) { showErrorMessage('error', 'please take photo!'); return; }\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const imageToUpload = dataURItoBlob(imageSrc);\r\n        const fileName = token + '_face.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setIsLoading(true);\r\n        bucket.putObject(params, function (err, data) {\r\n            setIsLoading(false);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_photo: fileName\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        setUser(data);\r\n                        showErrorMessage('success', 'photo uploaded successfully!');\r\n                        verificationResult(data);\r\n                    } else {\r\n                        showErrorMessage('error', 'photo upload faild!');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    showErrorMessage('error', 'photo upload faild!');\r\n                });\r\n            } else {\r\n                showErrorMessage('error', 'photo upload faild!');\r\n            }\r\n        });\r\n    }\r\n\r\n    const verificationResult = (userData) => {\r\n        console.log(\"userData\", userData);\r\n        if (!(userData && userData.verify_photo && userData.verify_idcard)) {\r\n            showErrorMessage('error', 'some of the required user information nor found!, please try again!');\r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket;\r\n        const photoSrc = userData.verify_photo;\r\n        const idSrc = userData.verify_idcard;\r\n        if (photoSrc && idSrc) {\r\n            setIsLoading(true);\r\n            AWS.config.update({\r\n                accessKeyId: config.aws.accessKey,\r\n                secretAccessKey: config.aws.secretKey,\r\n                region: config.aws.region\r\n            })\r\n            const client = new AWS.Rekognition();\r\n            const params = {\r\n                SourceImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: photoSrc,\r\n                    },\r\n                },\r\n                TargetImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: idSrc,\r\n                    },\r\n                },\r\n                SimilarityThreshold: 70,\r\n            };\r\n            client.compareFaces(params, function (err, response) {\r\n                setIsLoading(false);\r\n                if (err) {\r\n                    showErrorMessage('error', 'You didn\\'t upload exact personal photo.');\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    showErrorMessage('error', 'User and ID is not matched!');\r\n                    return;\r\n                }\r\n                response.FaceMatches.forEach((data) => {\r\n                    const similarity = data.Similarity;\r\n                    setIsLoading(true);\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        setIsLoading(false);\r\n                        if (data.status) {\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                                .then(data => {\r\n                                    if (data.status) {\r\n                                        showErrorMessage('success', 'verification success!');\r\n                                        history.push('/verifisuccess?token=' + token);\r\n                                    }\r\n                                    else {\r\n                                        showErrorMessage('error', 'Error sending mail!');\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            showErrorMessage('error', 'Error on verification!');\r\n                        }\r\n                    }).catch(err => {\r\n                        setIsLoading(false);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const showErrorMessage = (type, message) => {\r\n        setDisplayMessage({\r\n            type,\r\n            message\r\n        });\r\n        setTimeout(() => {\r\n            setDisplayMessage();\r\n        }, 3000);\r\n    }\r\n\r\n    const showMessage = () => {\r\n        if (displayMessage && displayMessage.type && displayMessage.message) {\r\n            if (displayMessage.type === 'success') {\r\n                return (\r\n                    <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />{displayMessage.message}</div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div class=\"errorMsg\"><i class=\"fas fa-times-circle errorMsgIcon\"></i>{displayMessage.message}</div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_100\">\r\n            <section>\r\n                <div class=\"container\">\r\n                    {isLoading ? <div\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            textAlign: 'center',\r\n                            backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                            zIndex: 999\r\n                        }}>\r\n                        <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                    </div> : null}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"index.html\" class=\"logoIn mb-5\">interverify</a>\r\n                                <ul class=\"processHead\">\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">1</span>\r\n                                        <span class=\"t__\">ID Verification</span>\r\n                                    </li>\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">2</span>\r\n                                        <span class=\"t__\">Photo Verification</span>\r\n                                    </li>\r\n                                    <li >\r\n                                        <span class=\"round_no\">3</span>\r\n                                        <span class=\"t__\">Finished</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n                                <h3 class=\"text-center\">Photo Verification</h3>\r\n                                <div class=\"row form___Row pt-5\">\r\n                                    <div class=\"col-md-12 col-12 \">\r\n                                        <div class=\"wrap400\">\r\n                                            <h4>Your Face Photo</h4>\r\n                                            <div class=\"photoHolder\">\r\n                                                {isPhotoTaken ? <img src={imageSrc} /> :\r\n                                                    <Webcam\r\n                                                        style={{ height: 300, width: 380 }}\r\n                                                        audio={false}\r\n                                                        videoConstraints={videoConstraints}\r\n                                                        screenshotFormat=\"image/jpeg\"\r\n                                                        ref={webcamRef}\r\n                                                    />}\r\n                                            </div>\r\n                                            <div>\r\n                                                <button onClick={() => isPhotoTaken ? setIsPhotoTaken(false) : takePhoto()} type=\"button\" class=\"cameraBtn\"><img src=\"images/camera_ic.svg\" />{isPhotoTaken ? 'Retake Photo' : 'Take Photo'}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12 col-12 btnBootomCol\">\r\n                                        <div class=\"form-group text-center pt-5\">\r\n                                            <a onClick={() => uploadPhoto()} class=\"btn_1\">Submit</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {showMessage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPhoto;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Divider } from \"rsuite\";\r\nimport config from \"../config/front_config\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nlet videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nconst UserId = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [imageSrc, setImageSrc] = useState();\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [uploadingProgress, setUploadingProgress] = useState();\r\n    const webcamRef = React.createRef();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n        var osStatus = getMobileOperatingSystem();\r\n        if (osStatus == 'Android' || osStatus == 'iOS') {\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }, []);\r\n\r\n    const getMobileOperatingSystem = () => {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else if (!(data['data']['verify_photo'])) {\r\n                        history.push('/userphoto?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        if (webcamRef && webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                alert('Camera is not connected!!');\r\n                return;\r\n            }\r\n            setImageSrc(imageSrc);\r\n            setIsPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    const uploadPhoto = () => {\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const imageToUpload = dataURItoBlob(imageSrc);\r\n        const fileName = user.id + '_id.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setUploadingProgress(.1);\r\n        bucket.putObject(params, function (err, data) {\r\n            setUploadingProgress(0);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_idcard: fileName\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        setUser(data);\r\n                        verificationResult();\r\n                    } else {\r\n                        alert('photo upload faild!');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    alert('photo upload faild!');\r\n                });\r\n            } else {\r\n                alert((err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            const percent = parseInt(progress.loaded / progress.total * 100);\r\n            setUploadingProgress(percent);\r\n        });\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const verificationResult = () => {\r\n        const bucket = config.aws.bucket;\r\n        const photoSrc = user.verify_photo;\r\n        const idSrc = user.verify_idcard;\r\n        if (photoSrc && idSrc) {\r\n            setIsLoading(true);\r\n            AWS.config.update({\r\n                accessKeyId: config.aws.accessKey,\r\n                secretAccessKey: config.aws.secretKey,\r\n                region: config.aws.region\r\n            })\r\n            const client = new AWS.Rekognition();\r\n            const params = {\r\n                SourceImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: photoSrc,\r\n                    },\r\n                },\r\n                TargetImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: idSrc,\r\n                    },\r\n                },\r\n                SimilarityThreshold: 70,\r\n            };\r\n            client.compareFaces(params, function (err, response) {\r\n                setIsLoading(false);\r\n                if (err) {\r\n                    alert('You didn\\'t upload exact personal photo.');\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    alert('User and ID is not matched!');\r\n                    return;\r\n                }\r\n                response.FaceMatches.forEach((data) => {\r\n                    const similarity = data.Similarity;\r\n                    setIsLoading(true);\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        setIsLoading(false);\r\n                        if (data.status) {\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                                .then(data => {\r\n                                    if (data.status) {\r\n                                        alert('verification success!');\r\n                                        history.push('/verifisuccess?token=' + token);\r\n                                    }\r\n                                    else {\r\n                                        alert('Error sending mail!.');\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            alert('Error on verification!');\r\n                        }\r\n                    }).catch(err => {\r\n                        setIsLoading(false);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const photoContainer = () => {\r\n        return (\r\n            <>\r\n                <Row style={{ marginTop: 50 }}>\r\n                    <Col>\r\n                        <h1>Step 2. Verify Your Information</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row style={{ marginTop: 30 }}>\r\n                    <Col>\r\n                        <h4>Upload Your ID Card</h4>\r\n                        {isPhotoTaken ?\r\n                            <div>\r\n                                <Row style={{ justifyContent: 'center' }}>\r\n                                    <img src={imageSrc} style={{ marginBottom: 6, alignSelf: 'center', display: 'inline-block' }} />\r\n                                </Row>\r\n                                <Row style={{ justifyContent: 'space-evenly' }}>\r\n                                    <Button style={{ marginLeft: 30, display: 'inline-block' }} variant=\"warning\" onClick={() => uploadPhoto()}>Upload</Button>\r\n                                    <Button variant=\"primary\" onClick={() => setIsPhotoTaken(false)}>Retake Photo</Button>\r\n                                </Row>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Webcam\r\n                                    style={{ display: 'inline-block' }}\r\n                                    audio={false}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button variant=\"primary\" onClick={() => takePhoto()}>Take A Photo</Button>\r\n                                </p>\r\n                            </div>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : null}\r\n                <Row style={{ justifyContent: 'center' }}>\r\n                    <ul class=\"progressbar\">\r\n                        <li class=\"active\">Identity Verification</li>\r\n                        <li>Photo Verification</li>\r\n                        <li>Verification finished</li>\r\n                    </ul>\r\n                </Row>\r\n                {photoContainer()}\r\n                {uploadingProgress > 0 && <ProgressBar now={uploadingProgress} label={uploadingProgress + '%'} animated />}\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default UserId;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst VerificationSuccess = () => {\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [displayMessage, setDisplayMessage] = useState();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n    }, []);\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (!(data['data']['verify_result'])) {\r\n                        history.push('/userphoto?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            } else {\r\n                showErrorMessage('error', 'User not found!');\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            showErrorMessage('error', 'Unable to fetch user info!');\r\n        })\r\n    }\r\n\r\n    const proceed = () => {\r\n        if (user) {\r\n            window.open(user['social_link'], \"_blank\");\r\n        } else {\r\n            showErrorMessage('error', 'User not found!');\r\n        }\r\n    }\r\n\r\n    const showErrorMessage = (type, message) => {\r\n        setDisplayMessage({\r\n            type,\r\n            message\r\n        });\r\n        setTimeout(() => {\r\n            setDisplayMessage();\r\n        }, 3000);\r\n    }\r\n\r\n    const showMessage = () => {\r\n        if (displayMessage && displayMessage.type && displayMessage.message) {\r\n            if (displayMessage.type === 'success') {\r\n                return (\r\n                    <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />{displayMessage.message}</div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div class=\"errorMsg\"><i class=\"fas fa-times-circle errorMsgIcon\"></i>{displayMessage.message}</div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_100\">\r\n            <section>\r\n                <div class=\"container\">\r\n                    {isLoading ? <div\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            textAlign: 'center',\r\n                            backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                            zIndex: 999\r\n                        }}>\r\n                        <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                    </div> : null}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"index.html\" class=\"logoIn mb-5\">interverify</a>\r\n                                <ul class=\"processHead\">\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">1</span>\r\n                                        <span class=\"t__\">ID Verification</span>\r\n                                    </li>\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">2</span>\r\n                                        <span class=\"t__\">Photo Verification</span>\r\n                                    </li>\r\n                                    <li class=\"active\" >\r\n                                        <span class=\"round_no\">3</span>\r\n                                        <span class=\"t__\">Finished</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n                                <h3 class=\"text-center\">Photo Verification</h3>\r\n                                <div class=\"row form___Row pt-5\">\r\n                                    <div class=\"col-md-12 col-12 \">\r\n                                        <div class=\"wrap400\">\r\n                                            <p>Verification completed Please click the link below to proceed to your Interview</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12 col-12 btnBootomCol\">\r\n                                        <div class=\"form-group text-center pt-5\">\r\n                                            <a onClick={() => proceed()} class=\"btn_1\">Proceed</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {showMessage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerificationSuccess;","import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport config from \"../config/front_config\";\r\nimport { Divider } from \"rsuite\";\r\n\r\nvar videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nvar mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\n\r\nclass IDAuth extends React.Component {\r\n    // webcamRef = React.useRef(null);\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        let query = new URLSearchParams(props.location.search);\r\n        let userToken = query.get('token');\r\n        if (!userToken) {\r\n            window.location.href = '/';\r\n            return;\r\n        }\r\n\r\n        let authStep = parseInt(userToken.substr(-1)) - 8;\r\n        userToken = userToken.substr(0, userToken.length - 1);\r\n\r\n        this.webcamRef = React.createRef();\r\n\r\n        this.state = {\r\n            userToken: userToken,\r\n            authStep: authStep,\r\n\r\n            verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\r\n\r\n            isPhotoTaken: false,\r\n            imageSrc: '',\r\n\r\n            photo_source: '',\r\n            photo_target: '',\r\n\r\n            uploadedPhoto: '',\r\n            uploadedId: '',\r\n\r\n            blob: '',\r\n\r\n            resultMsg: '',\r\n            msgColor: 'black',\r\n            resultBtnStatus: 0,\r\n\r\n            uploadingProgress: 0,\r\n            showLoadingIcon: {display: 'none'},\r\n            apiTmr: 0\r\n        };\r\n\r\n        this.photoCapture = this.photoCapture.bind(this);\r\n        this.photoTake = this.photoTake.bind(this);\r\n        this.comparePhoto = this.comparePhoto.bind(this);\r\n        this.navToVerify = this.navToVerify.bind(this);\r\n\r\n        var osStatus = this.getMobileOperatingSystem();\r\n        if(osStatus == 'Android' || osStatus == 'iOS'){\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }\r\n\r\n    getMobileOperatingSystem() {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: \"mQXA8d7YQGsj5FLgDstt\" }),\r\n        }).then(res => res.json()).then(data => {\r\n            debugger\r\n            if (data['status']) {\r\n                if (data.status) {\r\n                    that.state.photo_source = data.data.id + '_face.jpg';\r\n                    that.state.photo_target = data.data.id + '_id.jpg';\r\n                }\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            debugger\r\n            window.location.href=\"/\";\r\n        });\r\n\r\n        clearInterval(this.state.apiTmr);\r\n        if (!userToken) return;\r\n        this.state.apiTmr = setInterval(() => {\r\n            if (that.state.uploadedId) {\r\n                clearInterval(that.state.apiTmr);\r\n                return;\r\n            }\r\n            fetch(config.api.getUser, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                method: \"POST\",\r\n                body: JSON.stringify({ token: \"mQXA8d7YQGsj5FLgDstt\" }),\r\n            }).then(res => res.json()).then(data => {\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n                if (data.data.verify_idcard) clearInterval(that.state.apiTmr);\r\n            }).catch(error => {\r\n                debugger\r\n                window.location.href=\"/\";\r\n            });\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    photoTake() {\r\n        var that = this;\r\n        var { isPhotoTaken } = this.state;\r\n\r\n        var imageSrc = '';\r\n        if (!isPhotoTaken) {\r\n            imageSrc = this.webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                this.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Camera is not connected!!',\r\n                    imageSrc: ''\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isPhotoTaken: !isPhotoTaken,\r\n            imageSrc: imageSrc\r\n        });\r\n\r\n        console.log('--------- imageSrc');\r\n    }\r\n\r\n    photoCapture() {\r\n        var that = this;\r\n        var { authStep, userToken, imageSrc } = this.state;\r\n\r\n        /////////////////////////////////        \r\n        // that.setState({\r\n        //     authStep: authStep + 1,\r\n        // });\r\n        // return;\r\n        /////////////////////////////////\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        var bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } })\r\n        var fileName = photo_source;\r\n        if (authStep === 1) fileName = photo_target;\r\n\r\n        imageSrc = this.dataURItoBlob(imageSrc);\r\n        var imgFile = new File([imageSrc], fileName);\r\n        // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\r\n        var params = { Key: imgFile.name, ContentType: \"image/jpeg\", Body: imgFile };\r\n        that.setState({\r\n            msgColor: 'black',\r\n            resultMsg: '',\r\n            uploadingProgress: .1,\r\n        })\r\n        bucket.putObject(params, function (err, data) {\r\n            if (!err) {\r\n                // alert('Uploading done!!!');\r\n                var verifyType = { verify_photo: fileName };\r\n                if (authStep === 1) verifyType = { verify_idcard: fileName };\r\n                verifyType.token = userToken\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(verifyType),\r\n                }).then(res => res.json()).then(data => {\r\n                    if (data.status) {\r\n                        if (authStep === 1){\r\n                            window.location.href=\"/idsuccess\";\r\n                        }\r\n                        else{\r\n                            that.setState({\r\n                                msgColor: 'black',\r\n                                resultMsg: 'Uploading done.',\r\n                            });\r\n                            console.log('-------- uploaded: ', data);\r\n                            setTimeout(function () {\r\n                                that.setState({\r\n                                    authStep: 0,\r\n                                    resultMsg: '',\r\n                                    imageSrc: '',\r\n                                    isPhotoTaken: false,\r\n                                    resultBtnStatus: 0,\r\n                                    uploadingProgress: 0\r\n                                });\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                    console.log('data', data.data)\r\n                });\r\n            } else {\r\n                alert(err.message);\r\n                return false;\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            console.log('---- uploading progress: ', progress);\r\n            console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\r\n\r\n            var percent = parseInt(progress.loaded / progress.total * 100);\r\n            that.setState({\r\n                uploadingProgress: percent\r\n            })\r\n        });\r\n    }\r\n\r\n    navToVerify() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        this.setState({\r\n            showLoadingIcon: {display: 'inline-block'}\r\n        });\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: userToken\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                var errMsg = ''\r\n                if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\r\n                if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\r\n                if (errMsg) {\r\n                    that.setState({\r\n                        msgColor: 'red',\r\n                        resultMsg: errMsg,\r\n                        showLoadingIcon: {display: 'none'}\r\n                    });\r\n                    return;\r\n                }\r\n                that.setState({\r\n                    photo_source: data.data.verify_photo,\r\n                    photo_target: data.data.verify_idcard,\r\n                })\r\n                that.comparePhoto();\r\n\r\n            } else {\r\n                that.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Server connection failed.',\r\n                    showLoadingIcon: {display: 'none'}\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // console.log('-- mimeString: ', mimeString);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    comparePhoto() {\r\n        var that = this;\r\n        var { resultBtnStatus, userToken } = that.state;\r\n        if (resultBtnStatus) {\r\n            that.setState({\r\n                authStep: 0,\r\n                resultBtnStatus: 0,\r\n                showLoadingIcon: {display: 'none'}\r\n            })\r\n       \r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket; // the bucketname without s3://\r\n\r\n        // const awsConfig = new AWS.Config({\r\n        //     accessKeyId: config.aws.accessKey,\r\n        //     secretAccessKey: config.aws.secretKey,\r\n        //     region: config.aws.region\r\n        // })\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n\r\n        const client = new AWS.Rekognition();\r\n        const params = {\r\n            SourceImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_source,\r\n                },\r\n            },\r\n            TargetImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_target,\r\n                },\r\n            },\r\n            SimilarityThreshold: 70,\r\n        };\r\n\r\n        console.log('-- compare 0')\r\n        try {\r\n            client.compareFaces(params, function (err, response) {\r\n                if (err) {\r\n                    console.log(err, err.stack); // an error occurred                    \r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'You didn\\'t upload exact personal photo.',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                  \r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'User and ID is not matched!',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                    return;\r\n                }\r\n               \r\n                response.FaceMatches.forEach((data) => {\r\n                   \r\n                    let position = data.Face.BoundingBox;\r\n                    let similarity = data.Similarity;\r\n                   \r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: userToken,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        if (data.status) {\r\n                            console.log('-------- uploaded: ', data);\r\n\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token: data.token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                            .then(data => {\r\n                             \r\nconsole.log(data);\r\n                                if(data.status){\r\n                                    window.location.href = data.data;\r\n                                }\r\n                                else{\r\n                                    that.setState({\r\n                                        resultBtnStatus: 1,\r\n                                        msgColor: 'red',\r\n                                        resultMsg: data.data,\r\n                                        showLoadingIcon: {display: 'none'}\r\n                                    });\r\n                                }\r\n                              });\r\n\r\n                        }\r\n                        console.log('data', data.data)\r\n                    });\r\n                }); // for response.faceDetails\r\n            });\r\n        } catch (err) {\r\n            that.setState({\r\n                resultBtnStatus: 1,\r\n                msgColor: 'red',\r\n                resultMsg: 'You didn\\'t upload exact personal photo.'\r\n            })\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { authStep } = this.state;\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {true && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Step 2. Verify Your Information\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <h4>Your Face Photo</h4>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                            {authStep === 0 && (\r\n                                <Col>\r\n                                    <h4>Your ID card</h4>\r\n                                    <QRCode\r\n                                        value={this.state.verifyURL}\r\n                                        size={256}\r\n                                        level={'Q'}\r\n                                        includeMargin={true}\r\n                                    />\r\n                                    <p><a href={this.state.verifyURL}>{this.state.verifyURL}</a></p>\r\n                                    {this.state.uploadedId ? (\r\n                                        <p style={{ color: 'red' }}>ID has been submitted.</p>\r\n                                    ) : (\r\n                                            <p>Please scan this link and upload id card on your phone.</p>\r\n                                        )}\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button \r\n                                    variant=\"primary\"\r\n                                    onClick={this.navToVerify}\r\n                                >\r\n                                   <i style={this.state.showLoadingIcon} className=\"fa fa-spinner fa-spin\"></i>\r\n                                    Verify Information\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(authStep === 1) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Upload Your ID Card\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {authStep === 2 && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>Step 2. Verify Your Identity</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.comparePhoto}\r\n                                >\r\n                                    {this.state.resultBtnStatus ? 'Upload again' : 'Verify'}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )}\r\n                <Row style={{ marginTop: 30, marginBottom: 30, color: this.state.msgColor }}>\r\n                    <Col>{this.state.resultMsg}</Col>\r\n                </Row>\r\n                {this.state.blob !== '' &&\r\n                    <img src={this.state.blob} alt=\"blob\" />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IDAuth);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <nav class=\"navbar navbar-expand-lg\">\r\n                                <a class=\"navbar-brand\" href=\"/\">interverify</a>\r\n                                <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navb\">\r\n                                    <span class=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n\r\n                                <div class=\"collapse navbar-collapse\" id=\"navb\">\r\n                                    <ul class=\"navbar-nav ml-auto\">\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"/\">Home</a>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"about\">About us</a>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"/#Features_\">Features</a>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"/#Testimonials_\">Testimonials</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a class=\"nav-link btn_1\" href=\"register\">Get Started</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <section class=\"heroSection\">\r\n                <div class=\"container\">\r\n                    <div class=\"row heroRow\">\r\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-12 innderHeader\">\r\n                            <h1>About Us</h1>\r\n                            <span class=\"breadcrumbs\"><a href=\"/\">Home</a> / <a href=\"about\" class=\"currect\">About</a></span>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class=\"aboutSection\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-md-8 col-8 \">\r\n\r\n                            <p>We help you create and maintain a clean audit trail of verifications performed.\r\n                            Interverify is an identity verification solution platform that assists businesses, startups, and personal projects of various scopes to automate the identification verification process for their potential candidates during recruitment. We adhere to data privacy regulations to deliver a safe and reliable experience.\r\n\t\t\t\t\tRecruiters will appreciate the simplicity of integrating Interverify solutions with any website or application.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class=\"getStartSection\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"getStartCol\">\r\n                                <div class=\"\">\r\n                                    <h1>Get Started with us</h1>\r\n                                    <p>Still Confused Interverify is right choice for you ?  No problem.</p>\r\n                                    <a href=\"register\" class=\"btn_1\">Get Started</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-12\">\r\n                            <div class=\"f_comInfo\">\r\n                                <div class=\"f_logo\">interverify</div>\r\n                                <p>Interverify makes online customer verification efficient, cost-effective, and compliant with the online code of ethics. We offer secure and flexible solutions in the interest of preventing identity theft, security breaches,</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 col-12\">\r\n                            <h6>Quick Links</h6>\r\n                            <ul class=\"f_links\">\r\n                                <li><a href=\"/\">Home</a></li>\r\n                                <li><a href=\"/#Features_\">Features</a></li>\r\n                                <li><a href=\"/#Testimonials_\">Testimonials</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-md-3 col-12\">\r\n                            <h6>Contact</h6>\r\n                            <ul class=\"f_links\">\r\n                                <li><a href=\"mailto:test@test.com\">test@test.com</a></li>\r\n                            </ul>\r\n\r\n                            <h6 class=\"mt-4\">Phone</h6>\r\n                            <ul class=\"f_links\">\r\n                                <li><a href=\"tel:2324-2323-2323\">2324-2323-2323</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row copyRightRow__\">\r\n                        <div class=\"col-md-6 col-12\">\r\n                            <ul class=\"socialLinksList\">\r\n                                <li><a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a></li>\r\n                                <li><a href=\"#\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                                <li><a href=\"#\"><i class=\"fab fa-instagram\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-12\">\r\n                            <p class=\"copyRight__\">© 2020 All Rights Reserved</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(About);","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport SubmitSuccess from \"./components/SubmitSuccess\";\r\nimport SubmitIDSuccess from \"./components/SubmitIDSuccess\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport config from \"./config/front_config\";\r\nimport UpdateUser from \"./components/UserUpdatePage\";\r\nimport VerificationBase from \"./components/VerificationBase\";\r\nimport UserPhoto from \"./components/UserPhoto\";\r\nimport UserId from \"./components/UserId\";\r\nimport VerificationSuccess from \"./components/VerificationSuccess\";\r\nimport IDAuth from \"./components/IDAuth\";\r\nimport About from \"./components/About\";\r\n\r\nconst AuthRoute = ({ children, ...rest }) => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n            token ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/success\" children={<SubmitSuccess />} />\r\n                <Route path=\"/idsuccess\" children={<SubmitIDSuccess />} />\r\n                <Route path={config.api.verifyID} children={<VerificationBase />} />\r\n                <Route path=\"/register\" children={<RegisterForm />} />\r\n                <Route path=\"/login\" children={<LoginPage />} />\r\n                <AuthRoute path=\"/admin/update/:id\" children={<UpdateUser />} />\r\n                <AuthRoute path=\"/admin\" children={<AdminPage />} />\r\n                <Route path=\"/userphoto\" children={<UserPhoto />} />\r\n                <Route path=\"/userid\" children={<UserId />} />\r\n                <Route path=\"/verifisuccess\" children={<VerificationSuccess />} />\r\n                <Route path=\"/idauth\" children={<IDAuth />} />\r\n                <Route path=\"/about\" children={<About />} />\r\n                <Route path=\"/\" children={<LandingPage />} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}