{"version":3,"sources":["components/SubmitSuccess.js","components/SubmitIDSuccess.js","components/LandingPage.js","config/front_config.js","components/RegisterForm.js","components/AdminPage.js","components/LoginPage.js","components/UserUpdatePage.js","components/VerificationBase.js","components/UserPhoto.js","components/UserId.js","components/VerificationSuccess.js","components/IDAuth.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["SubmitSuccess","props","state","window","location","href","Container","style","textAlign","Row","marginTop","Col","Button","variant","onClick","this","goBack","React","Component","withRouter","SubmitIDSuccess","LandingPage","class","type","data-toggle","data-target","id","src","data-ride","data-slide","siteUrl","accessKey","secretKey","region","bucket","verifyID","getUser","registerUser","sendMail","sendResultMail","updateUserInfo","adminLogin","adminGetAllUsers","adminDeleteUser","adminUpdate","getPhotoId","RegisterForm","userInfo","candidate_name_first","candidate_name_last","candidate_email","date_of_interview","social_link","interviewer_name_first","interviewer_name_last","interviewer_email","isUploading","registerUserData","bind","handleChange","e","preventDefault","setState","fetch","config","headers","method","body","JSON","stringify","then","res","json","data","status","token","fname","target","name","value","onChange","placeholder","useState","users","setUsers","isLoading","setIsLoading","error","setError","showDeleteConfirmation","setShowDeleteConfirmation","itemToDeleteIndex","setItemToDelete","history","useHistory","useEffect","getUsers","a","localStorage","getItem","length","push","confirmDelete","newUserList","splice","undefined","catch","err","position","top","left","width","height","backgroundColor","zIndex","Spinner","animation","margin","removeItem","Table","tableLayout","striped","bordered","hover","map","user","index","key","lineBreak","ButtonGroup","size","className","itemIndex","Alert","Modal","Dialog","Header","Title","Body","Footer","deleteConfermation","email","setEmail","password","setPassword","errorMsg","setErrorMsg","loginUser","userName","setItem","padding","borderRadius","xs","lg","Form","onSubmit","event","test","String","toLowerCase","validateEmail","validatePassword","Group","controlId","Label","Control","Text","disabled","as","role","aria-hidden","UpdateUser","useParams","setUser","setUserWithoutEdit","currentVal","update","alert","textDecorationLine","cursor","defaultValue","VerificationBase","verificationErrors","setVerificationErrors","search","useLocation","URLSearchParams","get","initVouchedBase","script","document","createElement","async","onload","Vouched","appId","crossDevice","crossDeviceQRCode","stage","attempts","job","console","log","onCamera","hasCamera","hasPermission","onInit","onDone","onVerificationCompleted","stepTitles","FrontId","Face","Done","content","cameraButton","crossDeviceTitle","crossDeviceInstructions","crossDeviceSuccess","review","upperSuccess","success","lowerSuccess","upperIdInstructions","lowerIdInstructions","upperFaceInstructions","lowerFaceInstructions","upperFailure","verifyFail","lowerFailure","theme","font","fontColor","iconLabelColor","bgColor","baseColor","navigationDisabledBackground","navigationDisabledText","navigationActiveText","iconColor","iconBackground","mount","appendChild","verificationResult","errors","getPhotoIDandUpdateToAWS","verificationToken","uploadPhotoID","imageToUpload","dataURI","binary","atob","split","mimeString","array","i","charCodeAt","Blob","Uint8Array","dataURItoBlob","AWS","accessKeyId","secretAccessKey","S3","params","Bucket","fileName","imgFileToUpload","File","Key","ContentType","putObject","message","verify_idcard","id_verification_result","getUserWithToken","color","fontSize","videoConstraints","facingMode","mobileConstraints","exact","UserPhoto","imageSrc","setImageSrc","isPhotoTaken","setIsPhotoTaken","webcamRef","createRef","osStatus","getMobileOperatingSystem","userAgent","navigator","vendor","opera","MSStream","verify_photo","photoSrc","idSrc","SourceImage","S3Object","Name","TargetImage","SimilarityThreshold","Rekognition","compareFaces","response","FaceMatches","forEach","similarity","Similarity","verify_result","audio","screenshotFormat","ref","current","getScreenshot","takePhoto","uploadPhoto","UserId","uploadingProgress","setUploadingProgress","justifyContent","Divider","marginBottom","alignSelf","display","marginLeft","on","progress","percent","parseInt","loaded","total","ProgressBar","now","label","animated","VerificationSuccess","open","IDAuth","userToken","authStep","substr","verifyURL","photo_source","photo_target","uploadedPhoto","uploadedId","blob","resultMsg","msgColor","resultBtnStatus","showLoadingIcon","apiTmr","photoCapture","photoTake","comparePhoto","navToVerify","that","clearInterval","setInterval","imgFile","verifyType","setTimeout","errMsg","client","stack","BoundingBox","level","includeMargin","alt","AuthRoute","children","rest","render","to","pathname","from","App","path","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28b7f04f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    goBack(){\r\n        window.location.href = '/submit';\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>That info has been received and email has been sent to candidate. You can invite another candidate.</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 15 }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\"\r\n                                    onClick={this.goBack}\r\n                                >Go Back</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitSuccess);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitIDSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>You uploaded your ID photo successfully!</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitIDSuccess);","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <nav class=\"navbar navbar-expand-lg\">\r\n                                    <a class=\"navbar-brand\" href=\"/\">interverify</a>\r\n                                    <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\"\r\n                                        data-target=\"#navb\">\r\n                                        <span class=\"navbar-toggler-icon\"></span>\r\n                                    </button>\r\n\r\n                                    <div class=\"collapse navbar-collapse\" id=\"navb\">\r\n                                        <ul class=\"navbar-nav ml-auto\">\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"/\">Home</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"about\">About us</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"#Features_\">Features</a>\r\n                                            </li>\r\n                                            <li class=\"nav-item\">\r\n                                                <a class=\"nav-link\" href=\"#Testimonials_\">Testimonials</a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a class=\"nav-link btn_1\" href=\"register\">Get Started Free</a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <section class=\"heroSection\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row heroRow\">\r\n                            <div class=\"col-xl-7 col-lg-6 col-md-6 col-12 heroSliderFull\">\r\n                                <h1>Realtime identity verification for Virtual Hiring!\r\n                </h1>\r\n                                <p>The smart solution for secure, seamless identity verification for remote interviewing\r\n\r\n\r\n                </p>\r\n                                <a href=\"register\" class=\"btn_1\">Get Started Free</a>\r\n                            </div>\r\n                            <div class=\"col-xl-5 col-lg-6 col-md-6 col-12 heroSliderFull\">\r\n                                <img src=\"images/img_2.png\" class=\"heroImg\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"secondSection\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"col-lg-8 col-md-12 col-12\">\r\n                                <p>Interverify offers easy to implement and reliable identity verification services for recruitment\r\n                                process. We have designed an advance software and algorithms into a simple and straightforward\r\n                                interface that is compatible with any video conferencing application. Our flexible system lets\r\n                                you adjust the parameters to suit your needs and verify candidates through various checks.\r\n                    Interverify solutions are easy to set up and even easier to maintain!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"featuresSection\" id=\"Features_\">\r\n                    <div class=\"featurBgWrap\">\r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12 col-12 titleCol\">\r\n                                    <h1>Features</h1>\r\n                                    <p>Get ready to verify and identify candidates in seconds with the swift and reliable\r\n                        Interverify integration! <br />Take advantage of our feature-rich and efficiently automated\r\n                        solutions today.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 imgCenter\">\r\n                                    <img src=\"images/feature_1.svg\" />\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 f_textCol\">\r\n                                    <div>\r\n                                        <h2>Deep facial Analysis</h2>\r\n                                        <p>We use 2 levels of facial recognition technology to provide high level of certainty that\r\n                                        the Individual matches the provided ID.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 f_textCol leftTextCol\">\r\n                                    <div>\r\n                                        <h2>ID Authentication\r\n                        </h2>\r\n                                        <p>leverage AI and ML to identify characteristics of ID, making sure ID passes all\r\n                                        authentication checks.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 order-1 imgCenter\">\r\n                                    <img src=\"images/feature_2.svg\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 imgCenter\">\r\n                                    <img src=\"images/feature_3.svg\" />\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 f_textCol\">\r\n                                    <div>\r\n                                        <h2>IP Address verification.\r\n                        </h2>\r\n                                        <p>Verify that Candidate taking the verification is at the correct location provided, using\r\n                                        IP Address verification.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 f_textCol leftTextCol\">\r\n                                    <div>\r\n                                        <h2>Platform Agnostic\r\n\r\n                        </h2>\r\n                                        <p>This can be used with any video conferencing platform including Zoom, Skype, Google\r\n                                        Hangout, HireVue and much more.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 order-1 imgCenter\">\r\n                                    <img src=\"images/feature_2.svg\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row f_Row\">\r\n                                <div class=\"col-md-6 col-12 imgCenter\">\r\n                                    <img src=\"images/feature_3.svg\" />\r\n                                </div>\r\n                                <div class=\"col-md-6 col-12 f_textCol\">\r\n                                    <div>\r\n                                        <h2>Quick and Easy to use.\r\n\r\n                        </h2>\r\n                                        <p>Entire verification process takes less than 1 minute to deliver analysis, and provides\r\n                                        guided steps to conclude verification process.\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"testimonialsSection ptb_100\" id=\"Testimonials_\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-12 titleCol\">\r\n                                <h1>Testimonials</h1>\r\n                                <p>What People are saying about us</p>\r\n                            </div>\r\n                            <div class=\"col-12 testCol__\">\r\n                                <div class=\"t_imgRound _01\"><img src=\"images/test_round_1.png\" /></div>\r\n                                <div class=\"t_imgRound _02\"><img src=\"images/test_round_2.png\" /></div>\r\n                                <div class=\"t_imgRound _03\"><img src=\"images/test_round_3.png\" /></div>\r\n                                <div class=\"t_imgRound _04\"></div>\r\n                                <div class=\"t_imgRound _05\"></div>\r\n                                <div id=\"testoSlider\" class=\"carousel slide testoSlider_\" data-ride=\"carousel\">\r\n\r\n                                    <div class=\"carousel-inner\">\r\n                                        <div class=\"carousel-item active\">\r\n                                            <div class=\"testoRow\">\r\n                                                <div class=\"testoMaintext\">\r\n                                                    <p>“Interverify helped us in saving tons of hours of identification process into\r\n                                        seconds by providing the automate solutions.”</p>\r\n                                                </div>\r\n                                                <div class=\"clientInfo\">\r\n                                                    <div class=\"avtImg\">\r\n                                                        <img src=\"images/test_img_1.png\" />\r\n                                                    </div>\r\n                                                    <div class=\"avtText\">\r\n                                                        <div class=\"_name\">Alex Smith</div>\r\n                                                        <div class=\"_designation\">CEO of Duplee</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"carousel-item\">\r\n                                            <div class=\"testoRow\">\r\n                                                <div class=\"testoMaintext\">\r\n                                                    <p>“Interverify helped us in saving tons of hours of identification process into\r\n                                        seconds by providing the automate solutions.”</p>\r\n                                                </div>\r\n                                                <div class=\"clientInfo\">\r\n                                                    <div class=\"avtImg\">\r\n                                                        <img src=\"images/test_img_1.png\" />\r\n                                                    </div>\r\n                                                    <div class=\"avtText\">\r\n                                                        <div class=\"_name\">Alex Smith</div>\r\n                                                        <div class=\"_designation\">CEO of Duplee</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"carousel-item\">\r\n                                            <div class=\"testoRow\">\r\n                                                <div class=\"testoMaintext\">\r\n                                                    <p>“Interverify helped us in saving tons of hours of identification process into\r\n                                        seconds by providing the automate solutions.”</p>\r\n                                                </div>\r\n                                                <div class=\"clientInfo\">\r\n                                                    <div class=\"avtImg\">\r\n                                                        <img src=\"images/test_img_1.png\" />\r\n                                                    </div>\r\n                                                    <div class=\"avtText\">\r\n                                                        <div class=\"_name\">Alex Smith</div>\r\n                                                        <div class=\"_designation\">CEO of Duplee</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"arrowCol\">\r\n                                        <a class=\"carousel-control-prev\" href=\"#testoSlider\" data-slide=\"prev\">\r\n                                            <span class=\"prev-icon\"></span>\r\n                                        </a>\r\n                                        <a class=\"carousel-control-next\" href=\"#testoSlider\" data-slide=\"next\">\r\n                                            <span class=\"next-icon\"></span>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section class=\"getStartSection\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"getStartCol\">\r\n                                    <div class=\"\">\r\n                                        <h1>Get Started with us</h1>\r\n                                        <p>Still Confused Interverify is right choice for you ? No problem.</p>\r\n                                        <a href=\"register\" class=\"btn_1\">Get Started Free</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <footer>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 col-12\">\r\n                                <div class=\"f_comInfo\">\r\n                                    <div class=\"f_logo\">interverify</div>\r\n                                    <p>Interverify makes online candidate verification efficient, cost-effective, and compliant with\r\n                                    the online code of ethics. We offer secure and flexible solutions in the interest of\r\n                        preventing identity theft, security breaches,</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-12\">\r\n                                <h6>Quick Links</h6>\r\n                                <ul class=\"f_links\">\r\n                                    <li><a href=\"/\">Home</a></li>\r\n                                    <li><a href=\"/#Features_\">Features</a></li>\r\n                                    <li><a href=\"/#Testimonials_\">Testimonials</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-12\">\r\n                                <h6>Contact</h6>\r\n                                <ul class=\"f_links\">\r\n                                    <li><a href=\"mailto:contact@interverify.co\">contact@interverify.co</a></li>\r\n                                </ul>\r\n\r\n                                <h6 class=\"mt-4\">Phone</h6>\r\n                                <ul class=\"f_links\">\r\n                                    <li><a href=\"tel:2324-2323-2323\">2324-2323-2323</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row copyRightRow__\">\r\n                            <div class=\"col-md-6 col-12\">\r\n                                <ul class=\"socialLinksList\">\r\n                                    <li><a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a></li>\r\n                                    <li><a href=\"#\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                                    <li><a href=\"#\"><i class=\"fab fa-instagram\"></i></a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-12\">\r\n                                <p class=\"copyRight__\">© 2020 All Rights Reserved</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LandingPage);","const siteUrl = \"https://interverify.co\";\r\n//const siteUrl = \"http://localhost:3000/\";\r\nconst redirectUrl = siteUrl + '/idme_code'\r\nconst clientId = \"34d614b8c18543abd81f338aaeb7b0de\"\r\n\r\nexport default {\r\n    siteUrl: siteUrl,\r\n    idme: {\r\n        cliendId: clientId,\r\n        clientSecret: \"949e15f3b1dace8c2a3c685032d4e28d\",\r\n        redirectUrl: redirectUrl,\r\n        authEndPoint: \"https://api.id.me/oauth/authorize?client_id=\" + clientId + \"&redirect_uri=\" + redirectUrl + \"&response_type=token&scope=loa3\",\r\n        \r\n    },\r\n    aws: {\r\n        accessKey: \"AKIAVJKPVCLEKM2YG33J\",\r\n        secretKey: \"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\",\r\n        region: \"us-east-2\",\r\n        bucket: \"idauth\"\r\n    },\r\n    api:{\r\n        // get requests\r\n        verifyID: '/verifyID', \r\n        \r\n        // post requests\r\n        getUser: '/api/getUser',\r\n        registerUser: '/api/registerUser',\r\n        sendMail: '/api/sendMail',\r\n        sendResultMail: '/api/sendResultMail',\r\n        updateUserInfo: '/api/updateUserInfo',\r\n        adminLogin: '/api/admin/login',\r\n        adminGetAllUsers: '/api/admin/getAllUsers',\r\n        adminDeleteUser: '/api/admin/deleteUser',\r\n        adminUpdate: '/api/admin/updateUser',\r\n        getPhotoId: '/api/vouchedVerification'\r\n    },\r\n    vouched_PUBLIC_KEY: 'V~F_e~g0ySKtaos#PX.I9Vo4P*1Kxh'\r\n}","import React from \"react\";\r\nimport config from \"../config/front_config\";\r\n\r\nexport default class RegisterForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userInfo: {\r\n                candidate_name_first: '',\r\n                candidate_name_last: '',\r\n                candidate_email: '',\r\n                date_of_interview: '',\r\n                social_link: '',\r\n                interviewer_name_first: '',\r\n                interviewer_name_last: '',\r\n                interviewer_email: '',\r\n            },\r\n            isUploading: false,\r\n        };\r\n        this.registerUserData = this.registerUserData.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    registerUserData(e) {\r\n        e.preventDefault();\r\n        var { userInfo, isUploading } = this.state;\r\n        if (isUploading) return;\r\n        this.setState({ isUploading: true });\r\n        fetch(config.api.registerUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify(userInfo)\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                fetch(config.api.sendMail, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token: data.token\r\n                    }),\r\n                }).then(() => {\r\n                    this.setState({ isUploading: false });\r\n                    window.location.href = \"/success\";\r\n                });\r\n            } else {\r\n                this.setState({ isUploading: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        const fname = e.target.name;\r\n        const value = e.target.value;\r\n        const { userInfo } = this.state;\r\n        userInfo[fname] = value;\r\n        this.state.userInfo = userInfo;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div class=\"innerPage ptb_150\">\r\n                <section>\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12\">\r\n                                <div class=\"text-center\">\r\n                                    <a href=\"/\" class=\"logoIn mb-5\">interverify</a>\r\n                                </div>\r\n                                <div class=\"whiteWrap\">\r\n                                    <h3 class=\"text-center\">Interview Details</h3>\r\n                                    <div class=\"row form___Row pt-5\">\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Candidate First Name <span class=\"req__\">*</span></label>\r\n                                                <input name=\"candidate_name_first\" onChange={this.handleChange} type=\"text\" placeholder=\"Enter Candidate First Name\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Candidate Last Name <span class=\"req__\">*</span></label>\r\n                                                <input name=\"candidate_name_last\" onChange={this.handleChange} type=\"text\" placeholder=\"Enter Candidate Last Name\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Candidate Email <span class=\"req__\">*</span></label>\r\n                                                <input name=\"candidate_email\" onChange={this.handleChange} type=\"text\" placeholder=\"example@example.com\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Date <span class=\"req__\">*</span></label>\r\n                                                <input name=\"date_of_interview\" onChange={this.handleChange} type=\"date\" placeholder=\"Interview Date\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Link <span class=\"req__\">*</span></label>\r\n                                                <input name=\"social_link\" type=\"text\" onChange={this.handleChange} placeholder=\"Zoom, Skype, Bluejeans, Hirevue link\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview First Name<span class=\"req__\">*</span></label>\r\n                                                <input name=\"interviewer_name_first\" type=\"text\" onChange={this.handleChange} placeholder=\"Enter Interview First Name\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Last Name <span class=\"req__\">*</span></label>\r\n                                                <input name=\"interviewer_name_last\" type=\"text\" onChange={this.handleChange} placeholder=\"Enter Interview Last Name\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class=\"col-md-6 col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label class=\"label__\">Interview Email<span class=\"req__\">*</span></label>\r\n                                                <input name=\"interviewer_email\" type=\"text\" onChange={this.handleChange} placeholder=\"example@example.com\" class=\"input__\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12 col-12\">\r\n                                            <div onClick={this.registerUserData} class=\"form-group text-center pt-2\">\r\n                                                <a class=\"btn_1\">{this.state.isUploading ? 'Uploading...' : 'Submit'}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 text-center mt-3\">\r\n                                            <p class=\"not__\">By clicking start verification you <br />accept <a>all terms and conditions</a></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Modal, Table, Spinner, Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst AdminPage = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [error, setError] = useState();\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState();\r\n    const [itemToDeleteIndex, setItemToDelete] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const getUsers = async () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            try {\r\n                setIsLoading(true);\r\n                const users = await fetch(config.api.adminGetAllUsers, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"GET\"\r\n                }).then(res => res.json());\r\n                setIsLoading(false);\r\n                if (users && users['data'] && users['data'].length) {\r\n                    setUsers(users['data']);\r\n                } else {\r\n                    setError('Sorry!, No records found!');\r\n                }\r\n            }\r\n            catch (err) {\r\n                setError('Sorry!, Got issue on loading the records');\r\n                setIsLoading(false);\r\n            }\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const deleteConfermation = () => {\r\n        if (showDeleteConfirmation) {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Modal.Dialog>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Delete user!</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Are you sure to remove this user?</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => setShowDeleteConfirmation(false)} variant=\"secondary\">No</Button>\r\n                            <Button onClick={() => confirmDelete()} variant=\"danger\">yes, Delete</Button>\r\n                        </Modal.Footer>\r\n                    </Modal.Dialog>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const deleteItem = (itemIndex) => {\r\n        setShowDeleteConfirmation(true);\r\n        setItemToDelete(itemIndex);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        setShowDeleteConfirmation(false);\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.adminDeleteUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id: users[itemToDeleteIndex].id,\r\n                    token: users[itemToDeleteIndex].token\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data['success']) {\r\n                    const newUserList = users;\r\n                    newUserList.splice(itemToDeleteIndex, 1);\r\n                    setUsers(newUserList);\r\n                    setItemToDelete(undefined);\r\n                    if (!(users && users.length)) {\r\n                        setError('Sorry!, No records found!');\r\n                    }\r\n                } else {\r\n                    setError(data['message'] ? data['message'] : 'Issue on deleting user');\r\n                }\r\n            })\r\n                .catch(err => {\r\n                    setIsLoading(false);\r\n                    setError(\"Issue on deleting! \", err);\r\n                })\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <Button style={{margin: 10}} onClick={() => logout()}>Logout</Button>\r\n            <Table style={{ tableLayout: 'fixed' }} striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Candidate First Name</th>\r\n                        <th>Candidate Last Name</th>\r\n                        <th>Candidate Email</th>\r\n                        <th>Photo Verification</th>\r\n                        <th>ID Verification</th>\r\n                        <th>Result Verification</th>\r\n                        <th>Interview Date</th>\r\n                        <th>Social Link</th>\r\n                        <th>Interviewer First Name</th>\r\n                        <th>Interviewer Last Name</th>\r\n                        <th>Interviewer Email</th>\r\n                        <th>Similarity</th>\r\n                        <th>Vouched verification</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                {(!error) ?\r\n                    <tbody>\r\n                        {users.map((user, index) => {\r\n                            return (\r\n                                <tr key={index} style={{ lineBreak: 'anywhere' }}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{user['candidate_name_first'] ? user['candidate_name_first'] : '--'}</td>\r\n                                    <td>{user['candidate_name_last'] ? user['candidate_name_last'] : '--'}</td>\r\n                                    <td>{user['candidate_email'] ? user['candidate_email'] : '--'}</td>\r\n                                    <td>{user['verify_photo'] ? user['verify_photo'] : '--'}</td>\r\n                                    <td>{user['verify_idcard'] ? user['verify_idcard'] : '--'}</td>\r\n                                    <td>{user['verify_result'] ? user['verify_result'] : '--'}</td>\r\n                                    <td>{user['date_of_interview'] ? user['date_of_interview'] : '--'}</td>\r\n                                    <td>{user['social_link'] ? user['social_link'] : '--'}</td>\r\n                                    <td>{user['interviewer_name_first'] ? user['interviewer_name_first'] : '--'}</td>\r\n                                    <td>{user['interviewer_name_last'] ? user['interviewer_name_last'] : '--'}</td>\r\n                                    <td>{user['interviewer_email'] ? user['interviewer_email'] : '--'}</td>\r\n                                    <td>{user['similarity'] ? user['similarity'] : '--'}</td>\r\n                                    <td>{user['id_verification_result'] ? user['id_verification_result'] : '--'}</td>\r\n                                    <td>\r\n                                        <ButtonGroup size=\"sm\">\r\n                                            <Button onClick={() => history.push(`/admin/update/${user['token']}`)}><i className=\"fa fa-pencil-square-o\"></i></Button>\r\n                                            <Button onClick={() => deleteItem(index)} variant=\"danger\"><i className=\"fa fa-trash\"></i></Button>\r\n                                        </ButtonGroup>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody> : null}\r\n            </Table>\r\n            {error ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{error}!</Alert> : null}\r\n            {deleteConfermation()}\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withRouter(AdminPage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorMsg, setErrorMsg] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validatePassword = (password) => {\r\n        if (password) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validateEmail(email)) {\r\n            if (validatePassword(password)) {\r\n                setErrorMsg(null);\r\n                loginUser();\r\n            } else {\r\n                setErrorMsg(\"Issue on password\");\r\n            }\r\n        } else {\r\n            setErrorMsg(\"Invalid email\");\r\n        }\r\n    }\r\n\r\n    const loginUser = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.adminLogin, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                userName: email,\r\n                password: password\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data['success'] && data['token']) {\r\n                localStorage.setItem(\"authToken\", data['token']);\r\n                history.push('/admin');\r\n            } else {\r\n                setErrorMsg(data['message'] ? data['message'] : 'Issue on login');\r\n            }\r\n        })\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setErrorMsg(\"Issue on login! \", err);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\", backgroundColor: '#ced1c9', padding: 30, borderRadius: 10 }}>\r\n                <Row className=\"justify-content-md-center\" style={{ marginTop: 50 }}>\r\n                    <Col xs lg=\"6\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" onChange={(event) => setEmail(event.target.value)} placeholder=\"Enter email\" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your email with anyone else.</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" onChange={(event) => setPassword(event.target.value)} placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            {isLoading ? <Button variant=\"primary\" disabled>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"grow\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />Loading...</Button>\r\n                                :\r\n                                <Button type=\"submit\" variant=\"primary\">Submit</Button>}\r\n                            {errorMsg ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{errorMsg}!</Alert> : null}\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, useParams, useHistory } from \"react-router-dom\";\r\nimport { Container, Form, Button, Spinner, Alert, Row, Col } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst UpdateUser = () => {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState();\r\n    const [userWithoutEdit, setUserWithoutEdit] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, []);\r\n\r\n    const validateEmail = (email) => {\r\n        if (!email) { return false; }\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const handleChange = (value, key) => {\r\n        const currentVal = user;\r\n        currentVal[key] = value;\r\n        setUser(currentVal);\r\n    }\r\n\r\n    const getUser = () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.getUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    token: id\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data && data['data'] && data['data']['token']) {\r\n                    setUser(data['data']);\r\n                    setUserWithoutEdit(data['data']);\r\n                } else {\r\n                    setError(\"Issue on loding user or no user found!\");\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError(\"Issue on loding user! \", err);\r\n            })\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const update = () => {\r\n        if (validateEmail(user['candidate_email'])) {\r\n            const token = localStorage.getItem(\"authToken\");\r\n            if (token) {\r\n                setIsLoading(true);\r\n                fetch(config.api.adminUpdate, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        ...user\r\n                    })\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data['status']) {\r\n                        alert(\"Updated.\");\r\n                        history.push('/admin');\r\n                    } else {\r\n                        alert(data['message'] ? data['message'] : 'Issue on updating user');\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        setIsLoading(false);\r\n                        setError(\"Issue on deleting! \", err);\r\n                    })\r\n            } else {\r\n                history.push('/login');\r\n            }\r\n        } else {\r\n            alert(\"Candidate Email should be valid\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <p onClick={() => history.push('/admin')} style={{\r\n                margin: 10,\r\n                textDecorationLine: 'underline',\r\n                cursor: 'pointer'\r\n            }}>Back to users list</p>\r\n            <Container style={{ textAlign: \"center\", backgroundColor: '#ced1c9', padding: 30, borderRadius: 10 }}>\r\n                <h1>update user</h1>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : (user && user.token) ?\r\n                        <Row className=\"justify-content-md-center\" style={{ marginTop: 50 }}>\r\n                            <Col xs lg=\"6\">\r\n                                <Form>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Candidate First Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['candidate_name_first']} onChange={(event) => handleChange(event.target.value, 'candidate_name_first')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Candidate Last Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['candidate_name_last']} onChange={(event) => handleChange(event.target.value, 'candidate_name_last')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Candidate Email</Form.Label>\r\n                                        <Form.Control defaultValue={user['candidate_email']} onChange={(event) => handleChange(event.target.value, 'candidate_email')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Interviewer First Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['interviewer_name_first']} onChange={(event) => handleChange(event.target.value, 'interviewer_name_first')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Interviewer Last Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['interviewer_name_last']} onChange={(event) => handleChange(event.target.value, 'interviewer_name_last')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Interviewer Email</Form.Label>\r\n                                        <Form.Control defaultValue={user['interviewer_email']} onChange={(event) => handleChange(event.target.value, 'interviewer_email')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Social Link</Form.Label>\r\n                                        <Form.Control defaultValue={user['social_link']} onChange={(event) => handleChange(event.target.value, 'social_link')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Similarity</Form.Label>\r\n                                        <Form.Control defaultValue={user['similarity']} onChange={(event) => handleChange(event.target.value, 'similarity')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Verify Result</Form.Label>\r\n                                        <Form.Control defaultValue={user['verify_result']} onChange={(event) => handleChange(event.target.value, 'verify_result')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Date Of Interview</Form.Label>\r\n                                        <Form.Control type=\"datetime-local\" defaultValue={user['date_of_interview']} onChange={(event) => handleChange(event.target.value, 'date_of_interview')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Verify Photo</Form.Label>\r\n                                        <Form.Control defaultValue={user['verify_photo']} onChange={(event) => handleChange(event.target.value, 'verify_photo')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Verify IDcard</Form.Label>\r\n                                        <Form.Control defaultValue={user['verify_idcard']} onChange={(event) => handleChange(event.target.value, 'verify_idcard')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Vouched verification</Form.Label>\r\n                                        <Form.Control defaultValue={user['id_verification_result']} onChange={(event) => handleChange(event.target.value, 'id_verification_result')} />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                                <Button style={{ margin: 10 }} onClick={() => update()} variant=\"primary\">Update</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        : null}\r\n                {error ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{error}!</Alert> : null}\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default UpdateUser;","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport config from \"../config/front_config\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nconst VerificationBase = () => {\r\n\r\n    const [verificationErrors, setVerificationErrors] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    const vouchedBaseLoaded = () => {\r\n        var vouched = window.Vouched({\r\n            appId: config.vouched_PUBLIC_KEY,\r\n            crossDevice: true,\r\n            crossDeviceQRCode: true,\r\n            onSubmit: ({ stage, attempts, job }) => {\r\n                console.log('submit', { stage, attempts, job });\r\n            },\r\n            onCamera: ({ hasCamera, hasPermission }) => {\r\n                console.log('onCamera', { hasCamera, hasPermission });\r\n            },\r\n            onInit: ({ token }) => {\r\n                console.log('initialization');\r\n            },\r\n            onDone: (job) => {\r\n                console.log(job);\r\n                onVerificationCompleted(job);\r\n            },\r\n            stepTitles: {\r\n                FrontId: 'Upload ID',\r\n                Face: 'Upload Headshot',\r\n                Done: 'Finished'\r\n            },\r\n            content: {\r\n                cameraButton: 'Take a Photo',\r\n                crossDeviceTitle: 'ID Verification',\r\n                crossDeviceInstructions: 'We need to verify your identity. This requires government-issued photo ID as well as selfie. Please follow the instructions below to continue the verification process on your phone',\r\n                crossDeviceSuccess: 'Verification is complete, continue on your desktop',\r\n                review: 'Verification complete',\r\n                upperSuccess: 'Your photo uploads are complete!',\r\n                success: 'Please close this window to return your online visit.',\r\n                lowerSuccess: 'Thank you.',\r\n                upperIdInstructions:\r\n                    'Before you start please have an approved Government ID (e.g. Passport / Driving License) in your hand.',\r\n                lowerIdInstructions: 'Please take a photo of your ID now',\r\n                upperFaceInstructions: 'Time to take a photo.',\r\n                lowerFaceInstructions: 'Please take a clear picture of your face, and make sure it does not include:',\r\n                upperFailure: 'Try Again',\r\n                verifyFail: 'Sorry for the inconvenience',\r\n                lowerFailure:\r\n                    \"The photo you shared can't be used for validation. Please take another picture, making sure the image of your face or your ID is clear.\"\r\n            },\r\n            theme: {\r\n                name: 'verbose',\r\n                font: \"'Avenir', sans-serif\",\r\n                fontColor: '#646769',\r\n                iconLabelColor: '#413d3a',\r\n                bgColor: '#FFF',\r\n                baseColor: '#62ACDE',\r\n                navigationDisabledBackground: '#b3def1',\r\n                navigationDisabledText: '#a3d7ee',\r\n                navigationActiveText: '#413d3a',\r\n                iconColor: '#f6f5f3',\r\n                iconBackground: '#62ACDE'\r\n            }\r\n        });\r\n        vouched.mount(\"#vouched-element\");\r\n    }\r\n\r\n    const initVouchedBase = () => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://static.vouched.id/widget/vouched.js\";\r\n        script.async = true;\r\n        script.onload = () => vouchedBaseLoaded();\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    const onVerificationCompleted = (verificationResult) => {\r\n        if (verificationResult) {\r\n            const errors = verificationResult.errors;\r\n            if (errors && errors.length) {\r\n                setVerificationErrors(errors);\r\n            } else {\r\n                console.log(\"verificationResult\", verificationResult);\r\n                getPhotoIDandUpdateToAWS(verificationResult['token']);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getPhotoIDandUpdateToAWS = (verificationToken) => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getPhotoId, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                verificationToken\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data[\"status\"]) {\r\n                uploadPhotoID(data[\"data\"]);\r\n            } else {\r\n                alert('Sorry, Verification not compleded!.');\r\n            }\r\n        })\r\n            .catch(err => {\r\n                alert('Sorry, Verification not compleded!.');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const uploadPhotoID = (imageToUpload) => {\r\n        imageToUpload = dataURItoBlob(imageToUpload);\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const fileName = token + '_id.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setIsLoading(true);\r\n        bucket.putObject(params, function (err, data) {\r\n            setIsLoading(false);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_idcard: fileName,\r\n                        id_verification_result: \"verified\"\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        history.push('/userphoto?token=' + token);\r\n                    } else {\r\n                        alert('Sorry, for the Inconvenience caused by us!. please try again in some time.');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    alert('photo upload faild!');\r\n                });\r\n            } else {\r\n                alert((err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        initVouchedBase();\r\n        getUserWithToken();\r\n    }, []);\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else {\r\n                        history.push('/userphoto?token=' + token);\r\n                    }\r\n                }\r\n            } else {\r\n                alert('Sorry, User not found!.');\r\n            }\r\n        }).catch(err => {\r\n            alert('Sorry, User not found!.');\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_150\">\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <section class=\"\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"/\" class=\"logoIn mb-5\">interverify</a>\r\n                                <ul class=\"processHead\">\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">1</span>\r\n                                        <span class=\"t__\">ID Verification</span>\r\n                                    </li>\r\n                                    <li >\r\n                                        <span class=\"round_no\">2</span>\r\n                                        <span class=\"t__\">Photo Verification</span>\r\n                                    </li>\r\n                                    <li >\r\n                                        <span class=\"round_no\">3</span>\r\n                                        <span class=\"t__\">Finished</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n\r\n                                {/* <h3 class=\"text-center\">ID Verification</h3>\r\n                                <div class=\"row form___Row pt-5\"> */}\r\n                                {/* <div class=\"col-md-12 col-12 qrCol__\">\r\n                                        <div class=\"wrap400 ml-auto yourIDM50\">\r\n                                            <h4>QR code from vouched</h4>\r\n                                            <div class=\"qrHolder\">\r\n                                                <img src=\"images/qrCode.png\" />\r\n                                            </div>\r\n                                            <div>\r\n                                                <p>Text from vouched</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                    <div>*/}\r\n                                <div id='vouched-element' />\r\n                                {(verificationErrors && verificationErrors.length) ?\r\n                                    <div style={{ color: 'red', marginTop: 20 }}>\r\n                                        <h4 class=\"text-center\">Verification Not completed!</h4>\r\n                                        <ul class=\"text-center\" style={{ fontSize: 25 }}>\r\n                                            {verificationErrors.map((error, index) => <li key={index}>{error.message}</li>)}\r\n                                        </ul>\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* <div class=\"submitMsg\"><img src=\"images/checked_ic.svg\" />ID has been Submitted</div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerificationBase;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Divider } from \"rsuite\";\r\nimport config from \"../config/front_config\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nlet videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nconst UserPhoto = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [imageSrc, setImageSrc] = useState();\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const webcamRef = React.createRef();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n        var osStatus = getMobileOperatingSystem();\r\n        if (osStatus == 'Android' || osStatus == 'iOS') {\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }, []);\r\n\r\n    const getMobileOperatingSystem = () => {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            alert('Sorry, User not found!.');\r\n        })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        if (webcamRef && webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                alert('Camera is not connected!!');\r\n                return;\r\n            }\r\n            setImageSrc(imageSrc);\r\n            setIsPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    const uploadPhoto = () => {\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const imageToUpload = dataURItoBlob(imageSrc);\r\n        const fileName = token + '_face.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setIsLoading(true);\r\n        bucket.putObject(params, function (err, data) {\r\n            setIsLoading(false);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_photo: fileName\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        setUser(data);\r\n                        alert('photo uploaded successfully!');\r\n                        verificationResult();\r\n                    } else {\r\n                        alert('photo upload faild!');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    alert('photo upload faild!');\r\n                });\r\n            } else {\r\n                alert((err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        });\r\n    }\r\n\r\n    const verificationResult = () => {\r\n        if (!(user && user.verify_photo && user.verify_idcard)) { alert(\"some of the required user information nor found!, please try again.\"); return; }\r\n        const bucket = config.aws.bucket;\r\n        const photoSrc = user.verify_photo;\r\n        const idSrc = user.verify_idcard;\r\n        if (photoSrc && idSrc) {\r\n            setIsLoading(true);\r\n            AWS.config.update({\r\n                accessKeyId: config.aws.accessKey,\r\n                secretAccessKey: config.aws.secretKey,\r\n                region: config.aws.region\r\n            })\r\n            const client = new AWS.Rekognition();\r\n            const params = {\r\n                SourceImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: photoSrc,\r\n                    },\r\n                },\r\n                TargetImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: idSrc,\r\n                    },\r\n                },\r\n                SimilarityThreshold: 70,\r\n            };\r\n            client.compareFaces(params, function (err, response) {\r\n                setIsLoading(false);\r\n                if (err) {\r\n                    alert('You didn\\'t upload exact personal photo.');\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    alert('User and ID is not matched!');\r\n                    return;\r\n                }\r\n                response.FaceMatches.forEach((data) => {\r\n                    const similarity = data.Similarity;\r\n                    setIsLoading(true);\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        setIsLoading(false);\r\n                        if (data.status) {\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                                .then(data => {\r\n                                    if (data.status) {\r\n                                        alert('verification success!');\r\n                                        history.push('/verifisuccess?token=' + token);\r\n                                    }\r\n                                    else {\r\n                                        alert('Error sending mail!.');\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            alert('Error on verification!');\r\n                        }\r\n                    }).catch(err => {\r\n                        setIsLoading(false);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_150\">\r\n            <section>\r\n                <div class=\"container\">\r\n                    {isLoading ? <div\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            textAlign: 'center',\r\n                            backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                            zIndex: 999\r\n                        }}>\r\n                        <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                    </div> : null}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"index.html\" class=\"logoIn mb-5\">interverify</a>\r\n                                <ul class=\"processHead\">\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">1</span>\r\n                                        <span class=\"t__\">ID Verification</span>\r\n                                    </li>\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">2</span>\r\n                                        <span class=\"t__\">Photo Verification</span>\r\n                                    </li>\r\n                                    <li >\r\n                                        <span class=\"round_no\">3</span>\r\n                                        <span class=\"t__\">Finished</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n                                <h3 class=\"text-center\">Photo Verification</h3>\r\n                                <div class=\"row form___Row pt-5\">\r\n                                    <div class=\"col-md-12 col-12 \">\r\n                                        <div class=\"wrap400\">\r\n                                            <h4>Your Face Photo</h4>\r\n                                            <div class=\"photoHolder\">\r\n                                                {isPhotoTaken ? <img src={imageSrc} /> :\r\n                                                    <Webcam\r\n                                                        style={{ height: 300, width: 380 }}\r\n                                                        audio={false}\r\n                                                        videoConstraints={videoConstraints}\r\n                                                        screenshotFormat=\"image/jpeg\"\r\n                                                        ref={webcamRef}\r\n                                                    />}\r\n                                            </div>\r\n                                            <div>\r\n                                                <button onClick={() => isPhotoTaken ? setIsPhotoTaken(false) : takePhoto()} type=\"button\" class=\"cameraBtn\"><img src=\"images/camera_ic.svg\" />{isPhotoTaken ? 'Retake Photo' : 'Take Photo'}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12 col-12 btnBootomCol\">\r\n                                        <div class=\"form-group text-center pt-5\">\r\n                                            <a onClick={() => uploadPhoto()} class=\"btn_1\">Submit</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* <div id=\"show\" class=\"submitMsg\"><img src=\"images/checked_ic.svg\"/>ID has been Submitted</div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPhoto;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Divider } from \"rsuite\";\r\nimport config from \"../config/front_config\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nlet videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nconst UserId = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [imageSrc, setImageSrc] = useState();\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [uploadingProgress, setUploadingProgress] = useState();\r\n    const webcamRef = React.createRef();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n        var osStatus = getMobileOperatingSystem();\r\n        if (osStatus == 'Android' || osStatus == 'iOS') {\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }, []);\r\n\r\n    const getMobileOperatingSystem = () => {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else if (!(data['data']['verify_photo'])) {\r\n                        history.push('/userphoto?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        if (webcamRef && webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                alert('Camera is not connected!!');\r\n                return;\r\n            }\r\n            setImageSrc(imageSrc);\r\n            setIsPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    const uploadPhoto = () => {\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const imageToUpload = dataURItoBlob(imageSrc);\r\n        const fileName = user.id + '_id.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setUploadingProgress(.1);\r\n        bucket.putObject(params, function (err, data) {\r\n            setUploadingProgress(0);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_idcard: fileName\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        setUser(data);\r\n                        verificationResult();\r\n                    } else {\r\n                        alert('photo upload faild!');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    alert('photo upload faild!');\r\n                });\r\n            } else {\r\n                alert((err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            const percent = parseInt(progress.loaded / progress.total * 100);\r\n            setUploadingProgress(percent);\r\n        });\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const verificationResult = () => {\r\n        const bucket = config.aws.bucket;\r\n        const photoSrc = user.verify_photo;\r\n        const idSrc = user.verify_idcard;\r\n        if (photoSrc && idSrc) {\r\n            setIsLoading(true);\r\n            AWS.config.update({\r\n                accessKeyId: config.aws.accessKey,\r\n                secretAccessKey: config.aws.secretKey,\r\n                region: config.aws.region\r\n            })\r\n            const client = new AWS.Rekognition();\r\n            const params = {\r\n                SourceImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: photoSrc,\r\n                    },\r\n                },\r\n                TargetImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: idSrc,\r\n                    },\r\n                },\r\n                SimilarityThreshold: 70,\r\n            };\r\n            client.compareFaces(params, function (err, response) {\r\n                setIsLoading(false);\r\n                if (err) {\r\n                    alert('You didn\\'t upload exact personal photo.');\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    alert('User and ID is not matched!');\r\n                    return;\r\n                }\r\n                response.FaceMatches.forEach((data) => {\r\n                    const similarity = data.Similarity;\r\n                    setIsLoading(true);\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        setIsLoading(false);\r\n                        if (data.status) {\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                                .then(data => {\r\n                                    if (data.status) {\r\n                                        alert('verification success!');\r\n                                        history.push('/verifisuccess?token=' + token);\r\n                                    }\r\n                                    else {\r\n                                        alert('Error sending mail!.');\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            alert('Error on verification!');\r\n                        }\r\n                    }).catch(err => {\r\n                        setIsLoading(false);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const photoContainer = () => {\r\n        return (\r\n            <>\r\n                <Row style={{ marginTop: 50 }}>\r\n                    <Col>\r\n                        <h1>Step 2. Verify Your Information</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row style={{ marginTop: 30 }}>\r\n                    <Col>\r\n                        <h4>Upload Your ID Card</h4>\r\n                        {isPhotoTaken ?\r\n                            <div>\r\n                                <Row style={{ justifyContent: 'center' }}>\r\n                                    <img src={imageSrc} style={{ marginBottom: 6, alignSelf: 'center', display: 'inline-block' }} />\r\n                                </Row>\r\n                                <Row style={{ justifyContent: 'space-evenly' }}>\r\n                                    <Button style={{ marginLeft: 30, display: 'inline-block' }} variant=\"warning\" onClick={() => uploadPhoto()}>Upload</Button>\r\n                                    <Button variant=\"primary\" onClick={() => setIsPhotoTaken(false)}>Retake Photo</Button>\r\n                                </Row>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Webcam\r\n                                    style={{ display: 'inline-block' }}\r\n                                    audio={false}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button variant=\"primary\" onClick={() => takePhoto()}>Take A Photo</Button>\r\n                                </p>\r\n                            </div>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : null}\r\n                <Row style={{ justifyContent: 'center' }}>\r\n                    <ul class=\"progressbar\">\r\n                        <li class=\"active\">Identity Verification</li>\r\n                        <li>Photo Verification</li>\r\n                        <li>Verification finished</li>\r\n                    </ul>\r\n                </Row>\r\n                {photoContainer()}\r\n                {uploadingProgress > 0 && <ProgressBar now={uploadingProgress} label={uploadingProgress + '%'} animated />}\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default UserId;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Row, Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport config from \"../config/front_config\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst VerificationSuccess = () => {\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n    }, []);\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (!(data['data']['verify_result'])) {\r\n                        history.push('/userphoto?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            } else {\r\n                alert('User not found!.');\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const proceed = () => {\r\n        if (user) {\r\n            window.open(user['social_link'], \"_blank\");\r\n        } else {\r\n            alert('User not found!.');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"innerPage ptb_150\">\r\n            <section>\r\n                <div class=\"container\">\r\n                    {isLoading ? <div\r\n                        style={{\r\n                            position: 'fixed',\r\n                            top: 0,\r\n                            left: 0,\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            textAlign: 'center',\r\n                            backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                            zIndex: 999\r\n                        }}>\r\n                        <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                    </div> : null}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"text-center\">\r\n                                <a href=\"index.html\" class=\"logoIn mb-5\">interverify</a>\r\n                                <ul class=\"processHead\">\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">1</span>\r\n                                        <span class=\"t__\">ID Verification</span>\r\n                                    </li>\r\n                                    <li class=\"active\">\r\n                                        <span class=\"round_no\">2</span>\r\n                                        <span class=\"t__\">Photo Verification</span>\r\n                                    </li>\r\n                                    <li class=\"active\" >\r\n                                        <span class=\"round_no\">3</span>\r\n                                        <span class=\"t__\">Finished</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"whiteWrap\">\r\n                                <h3 class=\"text-center\">Photo Verification</h3>\r\n                                <div class=\"row form___Row pt-5\">\r\n                                    <div class=\"col-md-12 col-12 \">\r\n                                        <div class=\"wrap400\">\r\n                                            <p>Verification completed Please click the link below to proceed to your Interview</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12 col-12 btnBootomCol\">\r\n                                        <div class=\"form-group text-center pt-5\">\r\n                                            <a onClick={() => proceed()} class=\"btn_1\">Proceed</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VerificationSuccess;","import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport config from \"../config/front_config\";\r\nimport { Divider } from \"rsuite\";\r\n\r\nvar videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nvar mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\n\r\nclass IDAuth extends React.Component {\r\n    // webcamRef = React.useRef(null);\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        let query = new URLSearchParams(props.location.search);\r\n        let userToken = query.get('token');\r\n        if (!userToken) {\r\n            window.location.href = '/';\r\n            return;\r\n        }\r\n\r\n        let authStep = parseInt(userToken.substr(-1)) - 8;\r\n        userToken = userToken.substr(0, userToken.length - 1);\r\n\r\n        this.webcamRef = React.createRef();\r\n\r\n        this.state = {\r\n            userToken: userToken,\r\n            authStep: authStep,\r\n\r\n            verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\r\n\r\n            isPhotoTaken: false,\r\n            imageSrc: '',\r\n\r\n            photo_source: '',\r\n            photo_target: '',\r\n\r\n            uploadedPhoto: '',\r\n            uploadedId: '',\r\n\r\n            blob: '',\r\n\r\n            resultMsg: '',\r\n            msgColor: 'black',\r\n            resultBtnStatus: 0,\r\n\r\n            uploadingProgress: 0,\r\n            showLoadingIcon: {display: 'none'},\r\n            apiTmr: 0\r\n        };\r\n\r\n        this.photoCapture = this.photoCapture.bind(this);\r\n        this.photoTake = this.photoTake.bind(this);\r\n        this.comparePhoto = this.comparePhoto.bind(this);\r\n        this.navToVerify = this.navToVerify.bind(this);\r\n\r\n        var osStatus = this.getMobileOperatingSystem();\r\n        if(osStatus == 'Android' || osStatus == 'iOS'){\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }\r\n\r\n    getMobileOperatingSystem() {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: \"mQXA8d7YQGsj5FLgDstt\" }),\r\n        }).then(res => res.json()).then(data => {\r\n            debugger\r\n            if (data['status']) {\r\n                if (data.status) {\r\n                    that.state.photo_source = data.data.id + '_face.jpg';\r\n                    that.state.photo_target = data.data.id + '_id.jpg';\r\n                }\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            debugger\r\n            window.location.href=\"/\";\r\n        });\r\n\r\n        clearInterval(this.state.apiTmr);\r\n        if (!userToken) return;\r\n        this.state.apiTmr = setInterval(() => {\r\n            if (that.state.uploadedId) {\r\n                clearInterval(that.state.apiTmr);\r\n                return;\r\n            }\r\n            fetch(config.api.getUser, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                method: \"POST\",\r\n                body: JSON.stringify({ token: \"mQXA8d7YQGsj5FLgDstt\" }),\r\n            }).then(res => res.json()).then(data => {\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n                if (data.data.verify_idcard) clearInterval(that.state.apiTmr);\r\n            }).catch(error => {\r\n                debugger\r\n                window.location.href=\"/\";\r\n            });\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    photoTake() {\r\n        var that = this;\r\n        var { isPhotoTaken } = this.state;\r\n\r\n        var imageSrc = '';\r\n        if (!isPhotoTaken) {\r\n            imageSrc = this.webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                this.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Camera is not connected!!',\r\n                    imageSrc: ''\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isPhotoTaken: !isPhotoTaken,\r\n            imageSrc: imageSrc\r\n        });\r\n\r\n        console.log('--------- imageSrc');\r\n    }\r\n\r\n    photoCapture() {\r\n        var that = this;\r\n        var { authStep, userToken, imageSrc } = this.state;\r\n\r\n        /////////////////////////////////        \r\n        // that.setState({\r\n        //     authStep: authStep + 1,\r\n        // });\r\n        // return;\r\n        /////////////////////////////////\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        var bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } })\r\n        var fileName = photo_source;\r\n        if (authStep === 1) fileName = photo_target;\r\n\r\n        imageSrc = this.dataURItoBlob(imageSrc);\r\n        var imgFile = new File([imageSrc], fileName);\r\n        // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\r\n        var params = { Key: imgFile.name, ContentType: \"image/jpeg\", Body: imgFile };\r\n        that.setState({\r\n            msgColor: 'black',\r\n            resultMsg: '',\r\n            uploadingProgress: .1,\r\n        })\r\n        bucket.putObject(params, function (err, data) {\r\n            if (!err) {\r\n                // alert('Uploading done!!!');\r\n                var verifyType = { verify_photo: fileName };\r\n                if (authStep === 1) verifyType = { verify_idcard: fileName };\r\n                verifyType.token = userToken\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(verifyType),\r\n                }).then(res => res.json()).then(data => {\r\n                    if (data.status) {\r\n                        if (authStep === 1){\r\n                            window.location.href=\"/idsuccess\";\r\n                        }\r\n                        else{\r\n                            that.setState({\r\n                                msgColor: 'black',\r\n                                resultMsg: 'Uploading done.',\r\n                            });\r\n                            console.log('-------- uploaded: ', data);\r\n                            setTimeout(function () {\r\n                                that.setState({\r\n                                    authStep: 0,\r\n                                    resultMsg: '',\r\n                                    imageSrc: '',\r\n                                    isPhotoTaken: false,\r\n                                    resultBtnStatus: 0,\r\n                                    uploadingProgress: 0\r\n                                });\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                    console.log('data', data.data)\r\n                });\r\n            } else {\r\n                alert(err.message);\r\n                return false;\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            console.log('---- uploading progress: ', progress);\r\n            console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\r\n\r\n            var percent = parseInt(progress.loaded / progress.total * 100);\r\n            that.setState({\r\n                uploadingProgress: percent\r\n            })\r\n        });\r\n    }\r\n\r\n    navToVerify() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        this.setState({\r\n            showLoadingIcon: {display: 'inline-block'}\r\n        });\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: userToken\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                var errMsg = ''\r\n                if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\r\n                if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\r\n                if (errMsg) {\r\n                    that.setState({\r\n                        msgColor: 'red',\r\n                        resultMsg: errMsg,\r\n                        showLoadingIcon: {display: 'none'}\r\n                    });\r\n                    return;\r\n                }\r\n                that.setState({\r\n                    photo_source: data.data.verify_photo,\r\n                    photo_target: data.data.verify_idcard,\r\n                })\r\n                that.comparePhoto();\r\n\r\n            } else {\r\n                that.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Server connection failed.',\r\n                    showLoadingIcon: {display: 'none'}\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // console.log('-- mimeString: ', mimeString);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    comparePhoto() {\r\n        var that = this;\r\n        var { resultBtnStatus, userToken } = that.state;\r\n        if (resultBtnStatus) {\r\n            that.setState({\r\n                authStep: 0,\r\n                resultBtnStatus: 0,\r\n                showLoadingIcon: {display: 'none'}\r\n            })\r\n       \r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket; // the bucketname without s3://\r\n\r\n        // const awsConfig = new AWS.Config({\r\n        //     accessKeyId: config.aws.accessKey,\r\n        //     secretAccessKey: config.aws.secretKey,\r\n        //     region: config.aws.region\r\n        // })\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n\r\n        const client = new AWS.Rekognition();\r\n        const params = {\r\n            SourceImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_source,\r\n                },\r\n            },\r\n            TargetImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_target,\r\n                },\r\n            },\r\n            SimilarityThreshold: 70,\r\n        };\r\n\r\n        console.log('-- compare 0')\r\n        try {\r\n            client.compareFaces(params, function (err, response) {\r\n                if (err) {\r\n                    console.log(err, err.stack); // an error occurred                    \r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'You didn\\'t upload exact personal photo.',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                  \r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'User and ID is not matched!',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                    return;\r\n                }\r\n               \r\n                response.FaceMatches.forEach((data) => {\r\n                   \r\n                    let position = data.Face.BoundingBox;\r\n                    let similarity = data.Similarity;\r\n                   \r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: userToken,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        if (data.status) {\r\n                            console.log('-------- uploaded: ', data);\r\n\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token: data.token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                            .then(data => {\r\n                             \r\nconsole.log(data);\r\n                                if(data.status){\r\n                                    window.location.href = data.data;\r\n                                }\r\n                                else{\r\n                                    that.setState({\r\n                                        resultBtnStatus: 1,\r\n                                        msgColor: 'red',\r\n                                        resultMsg: data.data,\r\n                                        showLoadingIcon: {display: 'none'}\r\n                                    });\r\n                                }\r\n                              });\r\n\r\n                        }\r\n                        console.log('data', data.data)\r\n                    });\r\n                }); // for response.faceDetails\r\n            });\r\n        } catch (err) {\r\n            that.setState({\r\n                resultBtnStatus: 1,\r\n                msgColor: 'red',\r\n                resultMsg: 'You didn\\'t upload exact personal photo.'\r\n            })\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { authStep } = this.state;\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {true && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Step 2. Verify Your Information\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <h4>Your Face Photo</h4>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                            {authStep === 0 && (\r\n                                <Col>\r\n                                    <h4>Your ID card</h4>\r\n                                    <QRCode\r\n                                        value={this.state.verifyURL}\r\n                                        size={256}\r\n                                        level={'Q'}\r\n                                        includeMargin={true}\r\n                                    />\r\n                                    <p><a href={this.state.verifyURL}>{this.state.verifyURL}</a></p>\r\n                                    {this.state.uploadedId ? (\r\n                                        <p style={{ color: 'red' }}>ID has been submitted.</p>\r\n                                    ) : (\r\n                                            <p>Please scan this link and upload id card on your phone.</p>\r\n                                        )}\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button \r\n                                    variant=\"primary\"\r\n                                    onClick={this.navToVerify}\r\n                                >\r\n                                   <i style={this.state.showLoadingIcon} className=\"fa fa-spinner fa-spin\"></i>\r\n                                    Verify Information\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(authStep === 1) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Upload Your ID Card\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {authStep === 2 && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>Step 2. Verify Your Identity</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.comparePhoto}\r\n                                >\r\n                                    {this.state.resultBtnStatus ? 'Upload again' : 'Verify'}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )}\r\n                <Row style={{ marginTop: 30, marginBottom: 30, color: this.state.msgColor }}>\r\n                    <Col>{this.state.resultMsg}</Col>\r\n                </Row>\r\n                {this.state.blob !== '' &&\r\n                    <img src={this.state.blob} alt=\"blob\" />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IDAuth);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <nav class=\"navbar navbar-expand-lg\">\r\n                                <a class=\"navbar-brand\" href=\"/\">interverify</a>\r\n                                <button class=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navb\">\r\n                                    <span class=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n\r\n                                <div class=\"collapse navbar-collapse\" id=\"navb\">\r\n                                    <ul class=\"navbar-nav ml-auto\">\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"/\">Home</a>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"about\">About us</a>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"/#Features_\">Features</a>\r\n                                        </li>\r\n                                        <li class=\"nav-item\">\r\n                                            <a class=\"nav-link\" href=\"/#Testimonials_\">Testimonials</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a class=\"nav-link btn_1\" href=\"register\">Get Started</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <section class=\"heroSection\">\r\n                <div class=\"container\">\r\n                    <div class=\"row heroRow\">\r\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-12 innderHeader\">\r\n                            <h1>About Us</h1>\r\n                            <span class=\"breadcrumbs\"><a href=\"/\">Home</a> / <a href=\"about\" class=\"currect\">About</a></span>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class=\"aboutSection\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-md-8 col-8 \">\r\n\r\n                            <p>We help you create and maintain a clean audit trail of verifications performed.\r\n                            Interverify is an identity verification solution platform that assists businesses, startups, and personal projects of various scopes to automate the identification verification process for their potential candidates during recruitment. We adhere to data privacy regulations to deliver a safe and reliable experience.\r\n\t\t\t\t\tRecruiters will appreciate the simplicity of integrating Interverify solutions with any website or application.</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class=\"getStartSection\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"getStartCol\">\r\n                                <div class=\"\">\r\n                                    <h1>Get Started with us</h1>\r\n                                    <p>Still Confused Interverify is right choice for you ?  No problem.</p>\r\n                                    <a href=\"register\" class=\"btn_1\">Get Started</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 col-12\">\r\n                            <div class=\"f_comInfo\">\r\n                                <div class=\"f_logo\">interverify</div>\r\n                                <p>Interverify makes online customer verification efficient, cost-effective, and compliant with the online code of ethics. We offer secure and flexible solutions in the interest of preventing identity theft, security breaches,</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 col-12\">\r\n                            <h6>Quick Links</h6>\r\n                            <ul class=\"f_links\">\r\n                                <li><a href=\"/\">Home</a></li>\r\n                                <li><a href=\"/#Features_\">Features</a></li>\r\n                                <li><a href=\"/#Testimonials_\">Testimonials</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-md-3 col-12\">\r\n                            <h6>Contact</h6>\r\n                            <ul class=\"f_links\">\r\n                                <li><a href=\"mailto:test@test.com\">test@test.com</a></li>\r\n                            </ul>\r\n\r\n                            <h6 class=\"mt-4\">Phone</h6>\r\n                            <ul class=\"f_links\">\r\n                                <li><a href=\"tel:2324-2323-2323\">2324-2323-2323</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row copyRightRow__\">\r\n                        <div class=\"col-md-6 col-12\">\r\n                            <ul class=\"socialLinksList\">\r\n                                <li><a href=\"#\"><i class=\"fab fa-facebook-f\"></i></a></li>\r\n                                <li><a href=\"#\"><i class=\"fab fa-twitter\"></i></a></li>\r\n                                <li><a href=\"#\"><i class=\"fab fa-instagram\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-12\">\r\n                            <p class=\"copyRight__\">© 2020 All Rights Reserved</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(About);","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport SubmitSuccess from \"./components/SubmitSuccess\";\r\nimport SubmitIDSuccess from \"./components/SubmitIDSuccess\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport config from \"./config/front_config\";\r\nimport UpdateUser from \"./components/UserUpdatePage\";\r\nimport VerificationBase from \"./components/VerificationBase\";\r\nimport UserPhoto from \"./components/UserPhoto\";\r\nimport UserId from \"./components/UserId\";\r\nimport VerificationSuccess from \"./components/VerificationSuccess\";\r\nimport IDAuth from \"./components/IDAuth\";\r\nimport About from \"./components/About\";\r\n\r\nconst AuthRoute = ({ children, ...rest }) => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n            token ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/success\" children={<SubmitSuccess />} />\r\n                <Route path=\"/idsuccess\" children={<SubmitIDSuccess />} />\r\n                <Route path={config.api.verifyID} children={<VerificationBase />} />\r\n                <Route path=\"/register\" children={<RegisterForm />} />\r\n                <Route path=\"/login\" children={<LoginPage />} />\r\n                <AuthRoute path=\"/admin/update/:id\" children={<UpdateUser />} />\r\n                <AuthRoute path=\"/admin\" children={<AdminPage />} />\r\n                <Route path=\"/userphoto\" children={<UserPhoto />} />\r\n                <Route path=\"/userid\" children={<UserId />} />\r\n                <Route path=\"/verifisuccess\" children={<VerificationSuccess />} />\r\n                <Route path=\"/idauth\" children={<IDAuth />} />\r\n                <Route path=\"/about\" children={<About />} />\r\n                <Route path=\"/\" children={<LandingPage />} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}