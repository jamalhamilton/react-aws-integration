{"version":3,"sources":["config/front_config.js","components/IDAuth.js","components/SubmitSuccess.js","components/SubmitIDSuccess.js","components/LandingPage.js","components/RegisterForm.js","components/AdminPage.js","components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["siteUrl","clientId","idme","cliendId","clientSecret","redirectUrl","authEndPoint","aws","accessKey","secretKey","region","bucket","api","verifyID","getUser","registerUser","sendMail","sendResultMail","updateUserInfo","adminLogin","adminGetAllUsers","adminDeleteUser","adminUpdate","videoConstraints","width","height","facingMode","mobileConstraints","exact","IDAuth","props","userToken","URLSearchParams","location","search","get","window","href","authStep","parseInt","substr","length","webcamRef","React","createRef","state","verifyURL","config","isPhotoTaken","imageSrc","photo_source","photo_target","uploadedPhoto","uploadedId","blob","resultMsg","msgColor","resultBtnStatus","uploadingProgress","showLoadingIcon","display","apiTmr","photoCapture","bind","photoTake","comparePhoto","navToVerify","osStatus","getMobileOperatingSystem","userAgent","navigator","vendor","opera","test","MSStream","that","this","fetch","headers","method","body","JSON","stringify","token","then","res","json","data","status","id","setState","verify_photo","verify_idcard","catch","error","clearInterval","setInterval","current","getScreenshot","console","log","AWS","update","accessKeyId","secretAccessKey","S3","params","Bucket","fileName","dataURItoBlob","imgFile","File","Key","name","ContentType","Body","putObject","err","alert","message","verifyType","setTimeout","on","progress","loaded","total","percent","errMsg","dataURI","binary","atob","split","mimeString","array","i","push","charCodeAt","Blob","Uint8Array","type","client","Rekognition","SourceImage","S3Object","Name","TargetImage","SimilarityThreshold","compareFaces","response","stack","FaceMatches","forEach","Face","BoundingBox","similarity","Similarity","verify_result","Container","style","textAlign","Row","marginTop","Col","Divider","src","marginBottom","screenshotFormat","ref","Button","variant","onClick","marginLeft","value","size","level","includeMargin","color","className","ProgressBar","now","label","animated","alt","Component","withRouter","SubmitSuccess","goBack","SubmitIDSuccess","LandingPage","RegisterForm","userInfo","candidate_name_first","candidate_name_last","candidate_email","date_of_interview","social_link","interviewer_name_first","interviewer_name_last","interviewer_email","isUploading","registerUserData","handleChange","getUsers","e","preventDefault","fname","target","Form","Group","as","onChange","Label","Control","placeholder","Text","dateformat","useState","users","setUsers","isLoading","setIsLoading","setError","showDeleteConfirmation","setShowDeleteConfirmation","itemToDeleteIndex","setItemToDelete","showEditView","setShowEditView","itemToEditIndex","setItemToEdit","history","useHistory","currentEditingUser","setCurrentEditingUser","useEffect","a","localStorage","getItem","confirmDelete","newUserList","splice","undefined","key","currentVal","email","String","toLowerCase","validateEmail","position","top","left","backgroundColor","zIndex","Spinner","animation","margin","removeItem","Table","tableLayout","striped","bordered","hover","map","user","index","lineBreak","ButtonGroup","editItem","itemIndex","Alert","Modal","Dialog","Header","Title","Footer","deleteConfermation","defaultValue","event","editUserView","setEmail","password","setPassword","errorMsg","setErrorMsg","loginUser","userName","setItem","onSubmit","validatePassword","controlId","disabled","role","aria-hidden","AuthRoute","children","rest","render","to","pathname","from","App","Navbar","expand","bg","Brand","Nav","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af3097e8.chunk.js","sourcesContent":["const siteUrl = \"https://interverify.co\";\r\n//const siteUrl = \"http://localhost:3000/\";\r\nconst redirectUrl = siteUrl + '/idme_code'\r\nconst clientId = \"34d614b8c18543abd81f338aaeb7b0de\"\r\n\r\nexport default {\r\n    siteUrl: siteUrl,\r\n    idme: {\r\n        cliendId: clientId,\r\n        clientSecret: \"949e15f3b1dace8c2a3c685032d4e28d\",\r\n        redirectUrl: redirectUrl,\r\n        authEndPoint: \"https://api.id.me/oauth/authorize?client_id=\" + clientId + \"&redirect_uri=\" + redirectUrl + \"&response_type=token&scope=loa3\",\r\n        \r\n    },\r\n    aws: {\r\n        accessKey: \"AKIAVJKPVCLEKM2YG33J\",\r\n        secretKey: \"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\",\r\n        region: \"us-east-2\",\r\n        bucket: \"idauth\"\r\n    },\r\n    api:{\r\n        // get requests\r\n        verifyID: '/verifyID', \r\n        \r\n        // post requests\r\n        getUser: '/api/getUser',\r\n        registerUser: '/api/registerUser',\r\n        sendMail: '/api/sendMail',\r\n        sendResultMail: '/api/sendResultMail',\r\n        updateUserInfo: '/api/updateUserInfo',\r\n        adminLogin: '/api/admin/login',\r\n        adminGetAllUsers: '/api/admin/getAllUsers',\r\n        adminDeleteUser: '/api/admin/deleteUser',\r\n        adminUpdate: '/api/admin/updateUser',\r\n    }\r\n}","import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport config from \"../config/front_config\";\r\nimport { Divider } from \"rsuite\";\r\n\r\nvar videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nvar mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\n\r\nclass IDAuth extends React.Component {\r\n    // webcamRef = React.useRef(null);\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        let query = new URLSearchParams(props.location.search);\r\n        let userToken = query.get('token');\r\n\r\n        if (!userToken) {\r\n            window.location.href = '/';\r\n            return;\r\n        }\r\n\r\n        let authStep = parseInt(userToken.substr(-1)) - 8;\r\n        userToken = userToken.substr(0, userToken.length - 1);\r\n\r\n        this.webcamRef = React.createRef();\r\n\r\n        this.state = {\r\n            userToken: userToken,\r\n            authStep: authStep,\r\n\r\n            verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\r\n\r\n            isPhotoTaken: false,\r\n            imageSrc: '',\r\n\r\n            photo_source: '',\r\n            photo_target: '',\r\n\r\n            uploadedPhoto: '',\r\n            uploadedId: '',\r\n\r\n            blob: '',\r\n\r\n            resultMsg: '',\r\n            msgColor: 'black',\r\n            resultBtnStatus: 0,\r\n\r\n            uploadingProgress: 0,\r\n            showLoadingIcon: {display: 'none'},\r\n            apiTmr: 0\r\n        };\r\n\r\n        this.photoCapture = this.photoCapture.bind(this);\r\n        this.photoTake = this.photoTake.bind(this);\r\n        this.comparePhoto = this.comparePhoto.bind(this);\r\n        this.navToVerify = this.navToVerify.bind(this);\r\n\r\n        var osStatus = this.getMobileOperatingSystem();\r\n        if(osStatus == 'Android' || osStatus == 'iOS'){\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }\r\n\r\n    getMobileOperatingSystem() {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: userToken }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                that.state.photo_source = data.data.id + '_face.jpg';\r\n                that.state.photo_target = data.data.id + '_id.jpg';\r\n            }\r\n            that.setState({\r\n                uploadedPhoto: data.data.verify_photo,\r\n                uploadedId: data.data.verify_idcard,\r\n            });\r\n        }).catch(error => {\r\n            window.location.href=\"/\";\r\n        });\r\n\r\n        clearInterval(this.state.apiTmr);\r\n        if (!userToken) return;\r\n        this.state.apiTmr = setInterval(() => {\r\n            if (that.state.uploadedId) {\r\n                clearInterval(that.state.apiTmr);\r\n                return;\r\n            }\r\n            fetch(config.api.getUser, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                method: \"POST\",\r\n                body: JSON.stringify({ token: userToken }),\r\n            }).then(res => res.json()).then(data => {\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n                if (data.data.verify_idcard) clearInterval(that.state.apiTmr);\r\n            }).catch(error => {\r\n                window.location.href=\"/\";\r\n            });\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    photoTake() {\r\n        var that = this;\r\n        var { isPhotoTaken } = this.state;\r\n\r\n        var imageSrc = '';\r\n        if (!isPhotoTaken) {\r\n            imageSrc = this.webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                this.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Camera is not connected!!',\r\n                    imageSrc: ''\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isPhotoTaken: !isPhotoTaken,\r\n            imageSrc: imageSrc\r\n        });\r\n\r\n        console.log('--------- imageSrc');\r\n    }\r\n\r\n    photoCapture() {\r\n        var that = this;\r\n        var { authStep, userToken, imageSrc } = this.state;\r\n\r\n        /////////////////////////////////        \r\n        // that.setState({\r\n        //     authStep: authStep + 1,\r\n        // });\r\n        // return;\r\n        /////////////////////////////////\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        var bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } })\r\n        var fileName = photo_source;\r\n        if (authStep === 1) fileName = photo_target;\r\n\r\n        imageSrc = this.dataURItoBlob(imageSrc);\r\n        var imgFile = new File([imageSrc], fileName);\r\n        // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\r\n        var params = { Key: imgFile.name, ContentType: \"image/jpeg\", Body: imgFile };\r\n        that.setState({\r\n            msgColor: 'black',\r\n            resultMsg: '',\r\n            uploadingProgress: .1,\r\n        })\r\n        bucket.putObject(params, function (err, data) {\r\n            if (!err) {\r\n                // alert('Uploading done!!!');\r\n                var verifyType = { verify_photo: fileName };\r\n                if (authStep === 1) verifyType = { verify_idcard: fileName };\r\n                verifyType.token = userToken\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(verifyType),\r\n                }).then(res => res.json()).then(data => {\r\n                    if (data.status) {\r\n                        if (authStep === 1){\r\n                            window.location.href=\"/idsuccess\";\r\n                        }\r\n                        else{\r\n                            that.setState({\r\n                                msgColor: 'black',\r\n                                resultMsg: 'Uploading done.',\r\n                            });\r\n                            console.log('-------- uploaded: ', data);\r\n                            setTimeout(function () {\r\n                                that.setState({\r\n                                    authStep: 0,\r\n                                    resultMsg: '',\r\n                                    imageSrc: '',\r\n                                    isPhotoTaken: false,\r\n                                    resultBtnStatus: 0,\r\n                                    uploadingProgress: 0\r\n                                });\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                    console.log('data', data.data)\r\n                });\r\n            } else {\r\n                alert(err.message);\r\n                return false;\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            console.log('---- uploading progress: ', progress);\r\n            console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\r\n\r\n            var percent = parseInt(progress.loaded / progress.total * 100);\r\n            that.setState({\r\n                uploadingProgress: percent\r\n            })\r\n        });\r\n    }\r\n\r\n    navToVerify() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        this.setState({\r\n            showLoadingIcon: {display: 'inline-block'}\r\n        });\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: userToken\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                var errMsg = ''\r\n                if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\r\n                if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\r\n                if (errMsg) {\r\n                    that.setState({\r\n                        msgColor: 'red',\r\n                        resultMsg: errMsg,\r\n                        showLoadingIcon: {display: 'none'}\r\n                    });\r\n                    return;\r\n                }\r\n                that.setState({\r\n                    photo_source: data.data.verify_photo,\r\n                    photo_target: data.data.verify_idcard,\r\n                })\r\n                that.comparePhoto();\r\n\r\n            } else {\r\n                that.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Server connection failed.',\r\n                    showLoadingIcon: {display: 'none'}\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // console.log('-- mimeString: ', mimeString);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    comparePhoto() {\r\n        var that = this;\r\n        var { resultBtnStatus, userToken } = that.state;\r\n        if (resultBtnStatus) {\r\n            that.setState({\r\n                authStep: 0,\r\n                resultBtnStatus: 0,\r\n                showLoadingIcon: {display: 'none'}\r\n            })\r\n       \r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket; // the bucketname without s3://\r\n\r\n        // const awsConfig = new AWS.Config({\r\n        //     accessKeyId: config.aws.accessKey,\r\n        //     secretAccessKey: config.aws.secretKey,\r\n        //     region: config.aws.region\r\n        // })\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n\r\n        const client = new AWS.Rekognition();\r\n        const params = {\r\n            SourceImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_source,\r\n                },\r\n            },\r\n            TargetImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_target,\r\n                },\r\n            },\r\n            SimilarityThreshold: 70,\r\n        };\r\n\r\n        console.log('-- compare 0')\r\n        try {\r\n            client.compareFaces(params, function (err, response) {\r\n                if (err) {\r\n                    console.log(err, err.stack); // an error occurred                    \r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'You didn\\'t upload exact personal photo.',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                  \r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'User and ID is not matched!',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                    return;\r\n                }\r\n               \r\n                response.FaceMatches.forEach((data) => {\r\n                   \r\n                    let position = data.Face.BoundingBox;\r\n                    let similarity = data.Similarity;\r\n                   \r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: userToken,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        if (data.status) {\r\n                            console.log('-------- uploaded: ', data);\r\n\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token: data.token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                            .then(data => {\r\n                             \r\nconsole.log(data);\r\n                                if(data.status){\r\n                                    window.location.href = data.data;\r\n                                }\r\n                                else{\r\n                                    that.setState({\r\n                                        resultBtnStatus: 1,\r\n                                        msgColor: 'red',\r\n                                        resultMsg: data.data,\r\n                                        showLoadingIcon: {display: 'none'}\r\n                                    });\r\n                                }\r\n                              });\r\n\r\n                        }\r\n                        console.log('data', data.data)\r\n                    });\r\n                }); // for response.faceDetails\r\n            });\r\n        } catch (err) {\r\n            that.setState({\r\n                resultBtnStatus: 1,\r\n                msgColor: 'red',\r\n                resultMsg: 'You didn\\'t upload exact personal photo.'\r\n            })\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { authStep } = this.state;\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {(authStep === 0) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Step 2. Verify Your Information\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <h4>Your Face Photo</h4>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                            {authStep === 0 && (\r\n                                <Col>\r\n                                    <h4>Your ID card</h4>\r\n                                    <QRCode\r\n                                        value={this.state.verifyURL}\r\n                                        size={256}\r\n                                        level={'Q'}\r\n                                        includeMargin={true}\r\n                                    />\r\n                                    <p><a href={this.state.verifyURL}>{this.state.verifyURL}</a></p>\r\n                                    {this.state.uploadedId ? (\r\n                                        <p style={{ color: 'red' }}>ID has been submitted.</p>\r\n                                    ) : (\r\n                                            <p>Please scan this link and upload id card on your phone.</p>\r\n                                        )}\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button \r\n                                    variant=\"primary\"\r\n                                    onClick={this.navToVerify}\r\n                                >\r\n                                   <i style={this.state.showLoadingIcon} className=\"fa fa-spinner fa-spin\"></i>\r\n                                    Verify Information\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(authStep === 1) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Upload Your ID Card\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {authStep === 2 && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>Step 2. Verify Your Identity</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.comparePhoto}\r\n                                >\r\n                                    {this.state.resultBtnStatus ? 'Upload again' : 'Verify'}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )}\r\n                <Row style={{ marginTop: 30, marginBottom: 30, color: this.state.msgColor }}>\r\n                    <Col>{this.state.resultMsg}</Col>\r\n                </Row>\r\n                {this.state.blob !== '' &&\r\n                    <img src={this.state.blob} alt=\"blob\" />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IDAuth);\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    goBack(){\r\n        window.location.href = '/submit';\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>That info has been received and email has been sent to candidate. You can invite another candidate.</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 15 }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\"\r\n                                    onClick={this.goBack}\r\n                                >Go Back</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitSuccess);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitIDSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>You uploaded your ID photo successfully!</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitIDSuccess);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n               <img className=\"landing-img\" src=\"/comingsoon.png\"/>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LandingPage);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { Divider } from 'rsuite';\r\n\r\nimport config from \"../config/front_config\";\r\n\r\nexport default class RegisterForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            userInfo: {\r\n                candidate_name_first: '',\r\n                candidate_name_last: '',\r\n                candidate_email: '',\r\n\r\n                date_of_interview: '',\r\n                social_link: '',\r\n\r\n                interviewer_name_first: '',\r\n                interviewer_name_last: '',\r\n                interviewer_email: '',\r\n            },\r\n\r\n            isUploading: false,\r\n        };\r\n\r\n        this.registerUserData = this.registerUserData.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(config.api.getUsers);\r\n    }\r\n\r\n    registerUserData(e) {\r\n        e.preventDefault();\r\n        var { userInfo, isUploading } = this.state;\r\n\r\n        console.log('------ userInfo: ', userInfo);\r\n\r\n        if (isUploading) return;\r\n        this.setState({ isUploading: true });\r\n        fetch(config.api.registerUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify(userInfo)\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                fetch(config.api.sendMail, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token: data.token\r\n                    }),\r\n                }).then(() => {\r\n                    this.setState({ isUploading: false });\r\n                    window.location.href=\"/success\";\r\n\r\n                });\r\n            } else {\r\n                this.setState({ isUploading: false });\r\n            }\r\n            console.log('data', data.data)\r\n        });\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        var fname = e.target.name;\r\n        var value = e.target.value;\r\n        var { userInfo } = this.state;\r\n        userInfo[fname] = value;\r\n\r\n        this.state.userInfo = userInfo;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                <div>\r\n                    <Row style={{ marginTop: 50 }}>\r\n                        <Col>\r\n                            <h1>\r\n                                Step 1. Register New User\r\n                                </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider />\r\n                    <Form style={{ textAlign: \"left\" }}>\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <Form.Label>Candidate Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"candidate_name_first\" />\r\n                                <Form.Text className=\"text-muted\">First Name</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"candidate_name_last\" />\r\n                                <Form.Text className=\"text-muted\">Last Name</Form.Text>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Candidate Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"\"\r\n                                    name=\"candidate_email\" />\r\n                                <Form.Text className=\"text-muted\">example@example.com</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Date Of Interview</Form.Label>\r\n                                <Form.Control type=\"date\" placeholder=\"\"\r\n                                    dateformat=\"YYYY-MM-DD\"\r\n                                    name=\"date_of_interview\"\r\n                                />\r\n                                <Form.Text className=\"text-muted\">Date</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Zoom, Skype, Bluejeans, Hirevue link</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"social_link\" />\r\n                                <Form.Text className=\"text-muted\">http://www.zoom.us/1234567890</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Interviewer's Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"interviewer_name_first\" />\r\n                                <Form.Text className=\"text-muted\">First Name</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"interviewer_name_last\" />\r\n                                <Form.Text className=\"text-muted\">Last Name</Form.Text>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Interviewer's Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"\"\r\n                                    name=\"interviewer_email\" />\r\n                                <Form.Text className=\"text-muted\">example@example.com</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30, marginBottom: 30, textAlign: 'center' }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\"\r\n                                    onClick={this.registerUserData}\r\n                                >{this.state.isUploading?'Uploading...':'Submit'}</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Container, Form, Modal, Table, Spinner, Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst AdminPage = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [error, setError] = useState();\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState();\r\n    const [itemToDeleteIndex, setItemToDelete] = useState();\r\n    const [showEditView, setShowEditView] = useState();\r\n    const [itemToEditIndex, setItemToEdit] = useState();\r\n    const history = useHistory();\r\n    const [currentEditingUser, setCurrentEditingUser] = useState();\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const getUsers = async () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            try {\r\n                setIsLoading(true);\r\n                const users = await fetch(config.api.adminGetAllUsers, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"GET\"\r\n                }).then(res => res.json());\r\n                setIsLoading(false);\r\n                if (users && users['data'] && users['data'].length) {\r\n                    setUsers(users['data']);\r\n                } else {\r\n                    setError('Sorry!, No records found!');\r\n                }\r\n            }\r\n            catch (err) {\r\n                setError('Sorry!, Got issue on loading the records');\r\n                setIsLoading(false);\r\n            }\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const deleteConfermation = () => {\r\n        if (showDeleteConfirmation) {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Modal.Dialog>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Delete user!</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Are you sure to remove this user?</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => setShowDeleteConfirmation(false)} variant=\"secondary\">No</Button>\r\n                            <Button onClick={() => confirmDelete()} variant=\"danger\">yes, Delete</Button>\r\n                        </Modal.Footer>\r\n                    </Modal.Dialog>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const deleteItem = (itemIndex) => {\r\n        setShowDeleteConfirmation(true);\r\n        setItemToDelete(itemIndex);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        setShowDeleteConfirmation(false);\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.adminDeleteUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id: users[itemToDeleteIndex].id,\r\n                    token: users[itemToDeleteIndex].token\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data['success']) {\r\n                    const newUserList = users;\r\n                    newUserList.splice(itemToDeleteIndex, 1);\r\n                    setUsers(newUserList);\r\n                    setItemToDelete(undefined);\r\n                    if (!(users && users.length)) {\r\n                        setError('Sorry!, No records found!');\r\n                    }\r\n                } else {\r\n                    setError(data['message'] ? data['message'] : 'Issue on deleting user');\r\n                }\r\n            })\r\n                .catch(err => {\r\n                    setIsLoading(false);\r\n                    setError(\"Issue on deleting! \", err);\r\n                })\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const editItem = (index) => {\r\n        setCurrentEditingUser(users[index]);\r\n        setItemToEdit(index);\r\n        setShowEditView(true);\r\n    }\r\n\r\n    const handleChange = (value, key) => {\r\n        const currentVal = currentEditingUser;\r\n        currentVal[key] = value;\r\n        setCurrentEditingUser(currentVal);\r\n    }\r\n\r\n    const validateEmail = (email) => {\r\n        if (!email) { return false; }\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const update = () => {\r\n        console.log(\"currentEditingUser\", currentEditingUser);\r\n        if (validateEmail(currentEditingUser['candidate_email'])) {\r\n            const token = localStorage.getItem(\"authToken\");\r\n            if (token) {\r\n                setIsLoading(true);\r\n                fetch(config.api.adminUpdate, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        ...currentEditingUser\r\n                    })\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data['status']) {\r\n                        delete data['status'];\r\n                        delete data['data'];\r\n                        const usersList = users;\r\n                        usersList[itemToEditIndex] = data;\r\n                        setShowEditView(false);\r\n                    } else {\r\n                        alert(data['message'] ? data['message'] : 'Issue on updating user');\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        setIsLoading(false);\r\n                        setError(\"Issue on deleting! \", err);\r\n                    })\r\n            } else {\r\n                history.push('/login');\r\n            }\r\n        } else {\r\n            alert(\"Candidate Email should be valid\");\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push('/login');\r\n    }\r\n\r\n    const editUserView = () => {\r\n        if (showEditView) {\r\n            return (\r\n                <Modal.Dialog>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Update user!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>Candidate First Name</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['candidate_name_first']} onChange={(event) => handleChange(event.target.value, 'candidate_name_first')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Candidate Last Name</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['candidate_name_last']} onChange={(event) => handleChange(event.target.value, 'candidate_name_last')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Candidate Email</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['candidate_email']} onChange={(event) => handleChange(event.target.value, 'candidate_email')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Interviewer First Name</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['interviewer_name_first']} onChange={(event) => handleChange(event.target.value, 'interviewer_name_first')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Interviewer Last Name</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['interviewer_name_last']} onChange={(event) => handleChange(event.target.value, 'interviewer_name_last')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Interviewer Email</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['interviewer_email']} onChange={(event) => handleChange(event.target.value, 'interviewer_email')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Social Link</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['social_link']} onChange={(event) => handleChange(event.target.value, 'social_link')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Similarity</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['similarity']} onChange={(event) => handleChange(event.target.value, 'similarity')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Verify Result</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['verify_result']} onChange={(event) => handleChange(event.target.value, 'verify_result')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Date Of Interview</Form.Label>\r\n                                <Form.Control type=\"datetime-local\" defaultValue={currentEditingUser['date_of_interview']} onChange={(event) => handleChange(event.target.value, 'date_of_interview')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Verify Photo</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['verify_photo']} onChange={(event) => handleChange(event.target.value, 'verify_photo')} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Verify IDcard</Form.Label>\r\n                                <Form.Control defaultValue={currentEditingUser['verify_idcard']} onChange={(event) => handleChange(event.target.value, 'verify_idcard')} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={() => setShowEditView(false)} variant=\"secondary\">Cancel</Button>\r\n                        <Button onClick={() => update()} variant=\"primary\">Update</Button>\r\n                    </Modal.Footer>\r\n                </Modal.Dialog>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <Button style={{margin: 10}} onClick={() => logout()}>Logout</Button>\r\n            <Table style={{ tableLayout: 'fixed' }} striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Candidate First Name</th>\r\n                        <th>Candidate Last Name</th>\r\n                        <th>Candidate Email</th>\r\n                        <th>Photo Verification</th>\r\n                        <th>ID Verification</th>\r\n                        <th>Result Verification</th>\r\n                        <th>Interview Date</th>\r\n                        <th>Social Link</th>\r\n                        <th>Interviewer First Name</th>\r\n                        <th>Interviewer Last Name</th>\r\n                        <th>Interviewer Email</th>\r\n                        <th>Similarity</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                {(!error) ?\r\n                    <tbody>\r\n                        {users.map((user, index) => {\r\n                            return (\r\n                                <tr key={index} style={{ lineBreak: 'anywhere' }}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{user['candidate_name_first'] ? user['candidate_name_first'] : '--'}</td>\r\n                                    <td>{user['candidate_name_last'] ? user['candidate_name_last'] : '--'}</td>\r\n                                    <td>{user['candidate_email'] ? user['candidate_email'] : '--'}</td>\r\n                                    <td>{user['verify_photo'] ? user['verify_photo'] : '--'}</td>\r\n                                    <td>{user['verify_idcard'] ? user['verify_idcard'] : '--'}</td>\r\n                                    <td>{user['verify_result'] ? user['verify_result'] : '--'}</td>\r\n                                    <td>{user['date_of_interview'] ? user['date_of_interview'] : '--'}</td>\r\n                                    <td>{user['social_link'] ? user['social_link'] : '--'}</td>\r\n                                    <td>{user['interviewer_name_first'] ? user['interviewer_name_first'] : '--'}</td>\r\n                                    <td>{user['interviewer_name_last'] ? user['interviewer_name_last'] : '--'}</td>\r\n                                    <td>{user['interviewer_email'] ? user['interviewer_email'] : '--'}</td>\r\n                                    <td>{user['similarity'] ? user['similarity'] : '--'}</td>\r\n                                    <td>\r\n                                        <ButtonGroup size=\"sm\">\r\n                                            <Button onClick={() => editItem(index)}><i className=\"fa fa-pencil-square-o\"></i></Button>\r\n                                            <Button onClick={() => deleteItem(index)} variant=\"danger\"><i className=\"fa fa-trash\"></i></Button>\r\n                                        </ButtonGroup>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody> : null}\r\n            </Table>\r\n            {error ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{error}!</Alert> : null}\r\n            {deleteConfermation()}\r\n            {editUserView()}\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withRouter(AdminPage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorMsg, setErrorMsg] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validatePassword = (password) => {\r\n        if (password) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validateEmail(email)) {\r\n            if (validatePassword(password)) {\r\n                setErrorMsg(null);\r\n                loginUser();\r\n            } else {\r\n                setErrorMsg(\"Issue on password\");\r\n            }\r\n        } else {\r\n            setErrorMsg(\"Invalid email\");\r\n        }\r\n    }\r\n\r\n    const loginUser = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.adminLogin, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                userName: email,\r\n                password: password\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data['success'] && data['token']) {\r\n                localStorage.setItem(\"authToken\", data['token']);\r\n                history.push('/admin');\r\n            } else {\r\n                setErrorMsg(data['message'] ? data['message'] : 'Issue on login');\r\n            }\r\n        })\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setErrorMsg(\"Issue on login! \", err);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                <Row style={{ marginTop: 50 }}>\r\n                    <Col>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" onChange={(event) => setEmail(event.target.value)} placeholder=\"Enter email\" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your email with anyone else.</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" onChange={(event) => setPassword(event.target.value)} placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            {isLoading ? <Button variant=\"primary\" disabled>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"grow\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />Loading...</Button>\r\n                                :\r\n                                <Button type=\"submit\" variant=\"primary\">Submit</Button>}\r\n                            {errorMsg ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{errorMsg}!</Alert> : null}\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport IDAuth from \"./components/IDAuth\";\r\nimport SubmitSuccess from \"./components/SubmitSuccess\";\r\nimport SubmitIDSuccess from \"./components/SubmitIDSuccess\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport config from \"./config/front_config\";\r\n\r\nconst AuthRoute = ({ children, ...rest }) => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n            token ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                <Navbar.Brand href=\"#\">ID Authenticate</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    {/* <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href={config.api.verifyID}>\r\n                        ID Auth\r\n                    </Nav.Link> */}\r\n                </Nav>\r\n            </Navbar>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\nrenders the first one that matches the current URL. */}\r\n            <Switch>\r\n                <Route path=\"/success\" children={<SubmitSuccess />} />\r\n                <Route path=\"/idsuccess\" children={<SubmitIDSuccess />} />\r\n                <Route path={config.api.verifyID} children={<IDAuth />} />\r\n                <Route path=\"/submit\" children={<RegisterForm />} />\r\n                <Route path=\"/login\" children={<LoginPage />} />\r\n                <AuthRoute path=\"/admin\" children={<AdminPage />} />\r\n                <Route path=\"/\" children={<LandingPage />} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}