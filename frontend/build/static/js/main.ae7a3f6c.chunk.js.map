{"version":3,"sources":["components/SubmitSuccess.js","components/SubmitIDSuccess.js","components/LandingPage.js","config/front_config.js","components/RegisterForm.js","components/AdminPage.js","components/LoginPage.js","components/UserUpdatePage.js","components/VerificationBase.js","components/UserPhoto.js","components/UserId.js","components/VerificationSuccess.js","components/IDAuth.js","App.js","serviceWorker.js","index.js"],"names":["SubmitSuccess","props","state","window","location","href","Container","style","textAlign","Row","marginTop","Col","Button","variant","onClick","this","goBack","React","Component","withRouter","SubmitIDSuccess","LandingPage","className","src","siteUrl","clientId","idme","cliendId","clientSecret","redirectUrl","authEndPoint","aws","accessKey","secretKey","region","bucket","api","verifyID","getUser","registerUser","sendMail","sendResultMail","updateUserInfo","adminLogin","adminGetAllUsers","adminDeleteUser","adminUpdate","vouched_PUBLIC_KEY","RegisterForm","userInfo","candidate_name_first","candidate_name_last","candidate_email","date_of_interview","social_link","interviewer_name_first","interviewer_name_last","interviewer_email","isUploading","registerUserData","bind","handleChange","console","log","config","getUsers","e","preventDefault","setState","fetch","headers","method","body","JSON","stringify","then","res","json","data","status","token","fname","target","name","value","Divider","Form","Group","as","onChange","Label","Control","type","placeholder","Text","dateformat","marginBottom","useState","users","setUsers","isLoading","setIsLoading","error","setError","showDeleteConfirmation","setShowDeleteConfirmation","itemToDeleteIndex","setItemToDelete","history","useHistory","useEffect","a","localStorage","getItem","length","push","confirmDelete","id","newUserList","splice","undefined","catch","err","position","top","left","width","height","backgroundColor","zIndex","Spinner","animation","margin","removeItem","Table","tableLayout","striped","bordered","hover","map","user","index","key","lineBreak","ButtonGroup","size","itemIndex","Alert","Modal","Dialog","Header","Title","Body","Footer","deleteConfermation","email","setEmail","password","setPassword","errorMsg","setErrorMsg","loginUser","userName","setItem","padding","borderRadius","xs","lg","onSubmit","event","test","String","toLowerCase","validateEmail","validatePassword","controlId","disabled","role","aria-hidden","UpdateUser","useParams","setUser","setUserWithoutEdit","currentVal","update","alert","textDecorationLine","cursor","defaultValue","VerificationBase","verificationErrors","setVerificationErrors","search","useLocation","URLSearchParams","get","initVouchedBase","script","document","createElement","async","onload","Vouched","appId","crossDevice","crossDeviceQRCode","stage","attempts","job","onCamera","hasCamera","hasPermission","onInit","onDone","onVerificationCompleted","stepTitles","FrontId","Face","Done","content","cameraButton","crossDeviceTitle","crossDeviceInstructions","crossDeviceSuccess","review","upperSuccess","success","lowerSuccess","upperIdInstructions","lowerIdInstructions","upperFaceInstructions","lowerFaceInstructions","upperFailure","verifyFail","lowerFailure","theme","font","fontColor","iconLabelColor","bgColor","baseColor","navigationDisabledBackground","navigationDisabledText","navigationActiveText","iconColor","iconBackground","mount","appendChild","verificationResult","errors","updateUserAndNavToPhotoVerify","getUserWithToken","id_verification_result","class","marginLeft","color","fontSize","message","videoConstraints","facingMode","mobileConstraints","exact","UserPhoto","imageSrc","setImageSrc","isPhotoTaken","setIsPhotoTaken","uploadingProgress","setUploadingProgress","webcamRef","createRef","osStatus","getMobileOperatingSystem","userAgent","navigator","vendor","opera","MSStream","dataURItoBlob","dataURI","binary","atob","split","mimeString","array","i","charCodeAt","Blob","Uint8Array","justifyContent","alignSelf","display","AWS","accessKeyId","secretAccessKey","S3","params","Bucket","imageToUpload","fileName","imgFileToUpload","File","Key","ContentType","putObject","verify_photo","on","progress","percent","parseInt","loaded","total","uploadPhoto","audio","screenshotFormat","ref","current","getScreenshot","takePhoto","ProgressBar","now","label","animated","UserId","photoSrc","idSrc","verify_idcard","SourceImage","S3Object","Name","TargetImage","SimilarityThreshold","Rekognition","compareFaces","response","FaceMatches","forEach","similarity","Similarity","verify_result","VerificationSuccess","paddingTop","IDAuth","userToken","authStep","substr","verifyURL","photo_source","photo_target","uploadedPhoto","uploadedId","blob","resultMsg","msgColor","resultBtnStatus","showLoadingIcon","apiTmr","photoCapture","photoTake","comparePhoto","navToVerify","that","clearInterval","setInterval","imgFile","verifyType","setTimeout","errMsg","client","stack","BoundingBox","level","includeMargin","alt","AuthRoute","children","rest","render","to","pathname","from","App","Navbar","expand","bg","Brand","Nav","path","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae7a3f6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    goBack(){\r\n        window.location.href = '/submit';\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>That info has been received and email has been sent to candidate. You can invite another candidate.</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{ marginTop: 15 }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\"\r\n                                    onClick={this.goBack}\r\n                                >Go Back</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitSuccess);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass SubmitIDSuccess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n                <Container style={{ textAlign: \"center\" }}>\r\n                    <div>\r\n                        <Row style={{ marginTop: 150 }}>\r\n                            <Col>\r\n                                <h2>You uploaded your ID photo successfully!</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </div>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SubmitIDSuccess);","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\"\r\n\r\n// import config from \"../config/config\"\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Router>\r\n               <img className=\"landing-img\" src=\"/comingsoon.png\"/>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(LandingPage);","const siteUrl = \"https://interverify.co\";\r\n//const siteUrl = \"http://localhost:3000/\";\r\nconst redirectUrl = siteUrl + '/idme_code'\r\nconst clientId = \"34d614b8c18543abd81f338aaeb7b0de\"\r\n\r\nexport default {\r\n    siteUrl: siteUrl,\r\n    idme: {\r\n        cliendId: clientId,\r\n        clientSecret: \"949e15f3b1dace8c2a3c685032d4e28d\",\r\n        redirectUrl: redirectUrl,\r\n        authEndPoint: \"https://api.id.me/oauth/authorize?client_id=\" + clientId + \"&redirect_uri=\" + redirectUrl + \"&response_type=token&scope=loa3\",\r\n        \r\n    },\r\n    aws: {\r\n        accessKey: \"AKIAVJKPVCLEKM2YG33J\",\r\n        secretKey: \"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\",\r\n        region: \"us-east-2\",\r\n        bucket: \"idauth\"\r\n    },\r\n    api:{\r\n        // get requests\r\n        verifyID: '/verifyID', \r\n        \r\n        // post requests\r\n        getUser: '/api/getUser',\r\n        registerUser: '/api/registerUser',\r\n        sendMail: '/api/sendMail',\r\n        sendResultMail: '/api/sendResultMail',\r\n        updateUserInfo: '/api/updateUserInfo',\r\n        adminLogin: '/api/admin/login',\r\n        adminGetAllUsers: '/api/admin/getAllUsers',\r\n        adminDeleteUser: '/api/admin/deleteUser',\r\n        adminUpdate: '/api/admin/updateUser',\r\n    },\r\n    vouched_PUBLIC_KEY: 'V~F_e~g0ySKtaos#PX.I9Vo4P*1Kxh'\r\n}","import React from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { Divider } from 'rsuite';\r\n\r\nimport config from \"../config/front_config\";\r\n\r\nexport default class RegisterForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            userInfo: {\r\n                candidate_name_first: '',\r\n                candidate_name_last: '',\r\n                candidate_email: '',\r\n\r\n                date_of_interview: '',\r\n                social_link: '',\r\n\r\n                interviewer_name_first: '',\r\n                interviewer_name_last: '',\r\n                interviewer_email: '',\r\n            },\r\n\r\n            isUploading: false,\r\n        };\r\n\r\n        this.registerUserData = this.registerUserData.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(config.api.getUsers);\r\n    }\r\n\r\n    registerUserData(e) {\r\n        e.preventDefault();\r\n        var { userInfo, isUploading } = this.state;\r\n\r\n        console.log('------ userInfo: ', userInfo);\r\n\r\n        if (isUploading) return;\r\n        this.setState({ isUploading: true });\r\n        fetch(config.api.registerUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify(userInfo)\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                fetch(config.api.sendMail, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token: data.token\r\n                    }),\r\n                }).then(() => {\r\n                    this.setState({ isUploading: false });\r\n                    window.location.href = \"/success\";\r\n\r\n                });\r\n            } else {\r\n                this.setState({ isUploading: false });\r\n            }\r\n            console.log('data', data.data)\r\n        });\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        var fname = e.target.name;\r\n        var value = e.target.value;\r\n        var { userInfo } = this.state;\r\n        userInfo[fname] = value;\r\n\r\n        this.state.userInfo = userInfo;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                <div>\r\n                    <Row style={{ marginTop: 50 }}>\r\n                        <Col>\r\n                            <h1>\r\n                                Step 1. Register New User\r\n                                </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Divider />\r\n                    <Form style={{ textAlign: \"left\" }}>\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <Form.Label>Candidate Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"candidate_name_first\" />\r\n                                <Form.Text className=\"text-muted\">First Name</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}\r\n                            >\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"candidate_name_last\" />\r\n                                <Form.Text className=\"text-muted\">Last Name</Form.Text>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Candidate Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"\"\r\n                                    name=\"candidate_email\" />\r\n                                <Form.Text className=\"text-muted\">example@example.com</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Date Of Interview</Form.Label>\r\n                                <Form.Control type=\"date\" placeholder=\"\"\r\n                                    dateformat=\"YYYY-MM-DD\"\r\n                                    name=\"date_of_interview\"\r\n                                />\r\n                                <Form.Text className=\"text-muted\">Date</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Zoom, Skype, Bluejeans, Hirevue link</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"social_link\" />\r\n                                <Form.Text className=\"text-muted\">http://www.zoom.us/1234567890</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Interviewer's Name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"interviewer_name_first\" />\r\n                                <Form.Text className=\"text-muted\">First Name</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>&nbsp;</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"\"\r\n                                    name=\"interviewer_name_last\" />\r\n                                <Form.Text className=\"text-muted\">Last Name</Form.Text>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col}\r\n                                onChange={this.handleChange}>\r\n                                <Form.Label>Interviewer's Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"\"\r\n                                    name=\"interviewer_email\" />\r\n                                <Form.Text className=\"text-muted\">example@example.com</Form.Text>\r\n                            </Form.Group>\r\n                            <Col></Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30, marginBottom: 30, textAlign: 'center' }}>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\"\r\n                                    onClick={this.registerUserData}\r\n                                >{this.state.isUploading ? 'Uploading...' : 'Submit'}</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Modal, Table, Spinner, Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst AdminPage = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [error, setError] = useState();\r\n    const [showDeleteConfirmation, setShowDeleteConfirmation] = useState();\r\n    const [itemToDeleteIndex, setItemToDelete] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const getUsers = async () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            try {\r\n                setIsLoading(true);\r\n                const users = await fetch(config.api.adminGetAllUsers, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"GET\"\r\n                }).then(res => res.json());\r\n                setIsLoading(false);\r\n                if (users && users['data'] && users['data'].length) {\r\n                    setUsers(users['data']);\r\n                } else {\r\n                    setError('Sorry!, No records found!');\r\n                }\r\n            }\r\n            catch (err) {\r\n                setError('Sorry!, Got issue on loading the records');\r\n                setIsLoading(false);\r\n            }\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const deleteConfermation = () => {\r\n        if (showDeleteConfirmation) {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Modal.Dialog>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Delete user!</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>Are you sure to remove this user?</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => setShowDeleteConfirmation(false)} variant=\"secondary\">No</Button>\r\n                            <Button onClick={() => confirmDelete()} variant=\"danger\">yes, Delete</Button>\r\n                        </Modal.Footer>\r\n                    </Modal.Dialog>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const deleteItem = (itemIndex) => {\r\n        setShowDeleteConfirmation(true);\r\n        setItemToDelete(itemIndex);\r\n    }\r\n\r\n    const confirmDelete = () => {\r\n        setShowDeleteConfirmation(false);\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.adminDeleteUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    id: users[itemToDeleteIndex].id,\r\n                    token: users[itemToDeleteIndex].token\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data['success']) {\r\n                    const newUserList = users;\r\n                    newUserList.splice(itemToDeleteIndex, 1);\r\n                    setUsers(newUserList);\r\n                    setItemToDelete(undefined);\r\n                    if (!(users && users.length)) {\r\n                        setError('Sorry!, No records found!');\r\n                    }\r\n                } else {\r\n                    setError(data['message'] ? data['message'] : 'Issue on deleting user');\r\n                }\r\n            })\r\n                .catch(err => {\r\n                    setIsLoading(false);\r\n                    setError(\"Issue on deleting! \", err);\r\n                })\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"authToken\");\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <Button style={{margin: 10}} onClick={() => logout()}>Logout</Button>\r\n            <Table style={{ tableLayout: 'fixed' }} striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Candidate First Name</th>\r\n                        <th>Candidate Last Name</th>\r\n                        <th>Candidate Email</th>\r\n                        <th>Photo Verification</th>\r\n                        <th>ID Verification</th>\r\n                        <th>Result Verification</th>\r\n                        <th>Interview Date</th>\r\n                        <th>Social Link</th>\r\n                        <th>Interviewer First Name</th>\r\n                        <th>Interviewer Last Name</th>\r\n                        <th>Interviewer Email</th>\r\n                        <th>Similarity</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                {(!error) ?\r\n                    <tbody>\r\n                        {users.map((user, index) => {\r\n                            return (\r\n                                <tr key={index} style={{ lineBreak: 'anywhere' }}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{user['candidate_name_first'] ? user['candidate_name_first'] : '--'}</td>\r\n                                    <td>{user['candidate_name_last'] ? user['candidate_name_last'] : '--'}</td>\r\n                                    <td>{user['candidate_email'] ? user['candidate_email'] : '--'}</td>\r\n                                    <td>{user['verify_photo'] ? user['verify_photo'] : '--'}</td>\r\n                                    <td>{user['verify_idcard'] ? user['verify_idcard'] : '--'}</td>\r\n                                    <td>{user['verify_result'] ? user['verify_result'] : '--'}</td>\r\n                                    <td>{user['date_of_interview'] ? user['date_of_interview'] : '--'}</td>\r\n                                    <td>{user['social_link'] ? user['social_link'] : '--'}</td>\r\n                                    <td>{user['interviewer_name_first'] ? user['interviewer_name_first'] : '--'}</td>\r\n                                    <td>{user['interviewer_name_last'] ? user['interviewer_name_last'] : '--'}</td>\r\n                                    <td>{user['interviewer_email'] ? user['interviewer_email'] : '--'}</td>\r\n                                    <td>{user['similarity'] ? user['similarity'] : '--'}</td>\r\n                                    <td>\r\n                                        <ButtonGroup size=\"sm\">\r\n                                            <Button onClick={() => history.push(`/admin/update/${user['token']}`)}><i className=\"fa fa-pencil-square-o\"></i></Button>\r\n                                            <Button onClick={() => deleteItem(index)} variant=\"danger\"><i className=\"fa fa-trash\"></i></Button>\r\n                                        </ButtonGroup>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody> : null}\r\n            </Table>\r\n            {error ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{error}!</Alert> : null}\r\n            {deleteConfermation()}\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withRouter(AdminPage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button, Alert, Spinner } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [errorMsg, setErrorMsg] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n\r\n    const validateEmail = (email) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const validatePassword = (password) => {\r\n        if (password) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (validateEmail(email)) {\r\n            if (validatePassword(password)) {\r\n                setErrorMsg(null);\r\n                loginUser();\r\n            } else {\r\n                setErrorMsg(\"Issue on password\");\r\n            }\r\n        } else {\r\n            setErrorMsg(\"Invalid email\");\r\n        }\r\n    }\r\n\r\n    const loginUser = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.adminLogin, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                userName: email,\r\n                password: password\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data['success'] && data['token']) {\r\n                localStorage.setItem(\"authToken\", data['token']);\r\n                history.push('/admin');\r\n            } else {\r\n                setErrorMsg(data['message'] ? data['message'] : 'Issue on login');\r\n            }\r\n        })\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setErrorMsg(\"Issue on login! \", err);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\", backgroundColor: '#ced1c9', padding: 30, borderRadius: 10 }}>\r\n                <Row className=\"justify-content-md-center\" style={{ marginTop: 50 }}>\r\n                    <Col xs lg=\"6\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" onChange={(event) => setEmail(event.target.value)} placeholder=\"Enter email\" />\r\n                                <Form.Text className=\"text-muted\">\r\n                                    We'll never share your email with anyone else.</Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" onChange={(event) => setPassword(event.target.value)} placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            {isLoading ? <Button variant=\"primary\" disabled>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"grow\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />Loading...</Button>\r\n                                :\r\n                                <Button type=\"submit\" variant=\"primary\">Submit</Button>}\r\n                            {errorMsg ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{errorMsg}!</Alert> : null}\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, useParams, useHistory } from \"react-router-dom\";\r\nimport { Container, Form, Button, Spinner, Alert, Row, Col } from \"react-bootstrap\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst UpdateUser = () => {\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState();\r\n    const [userWithoutEdit, setUserWithoutEdit] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [error, setError] = useState();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, []);\r\n\r\n    const validateEmail = (email) => {\r\n        if (!email) { return false; }\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const handleChange = (value, key) => {\r\n        const currentVal = user;\r\n        currentVal[key] = value;\r\n        setUser(currentVal);\r\n    }\r\n\r\n    const getUser = () => {\r\n        const token = localStorage.getItem(\"authToken\");\r\n        if (token) {\r\n            setIsLoading(true);\r\n            fetch(config.api.getUser, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token,\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    token: id\r\n                })\r\n            }).then(res => res.json()).then(data => {\r\n                setIsLoading(false);\r\n                if (data && data['data'] && data['data']['token']) {\r\n                    setUser(data['data']);\r\n                    setUserWithoutEdit(data['data']);\r\n                } else {\r\n                    setError(\"Issue on loding user or no user found!\");\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setError(\"Issue on loding user! \", err);\r\n            })\r\n        }\r\n        else {\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const update = () => {\r\n        if (validateEmail(user['candidate_email'])) {\r\n            const token = localStorage.getItem(\"authToken\");\r\n            if (token) {\r\n                setIsLoading(true);\r\n                fetch(config.api.adminUpdate, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + token,\r\n                    },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        ...user\r\n                    })\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data['status']) {\r\n                        alert(\"Updated.\");\r\n                        history.push('/admin');\r\n                    } else {\r\n                        alert(data['message'] ? data['message'] : 'Issue on updating user');\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        setIsLoading(false);\r\n                        setError(\"Issue on deleting! \", err);\r\n                    })\r\n            } else {\r\n                history.push('/login');\r\n            }\r\n        } else {\r\n            alert(\"Candidate Email should be valid\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <p onClick={() => history.push('/admin')} style={{\r\n                margin: 10,\r\n                textDecorationLine: 'underline',\r\n                cursor: 'pointer'\r\n            }}>Back to users list</p>\r\n            <Container style={{ textAlign: \"center\", backgroundColor: '#ced1c9', padding: 30, borderRadius: 10 }}>\r\n                <h1>update user</h1>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : (user && user.token) ?\r\n                        <Row className=\"justify-content-md-center\" style={{ marginTop: 50 }}>\r\n                            <Col xs lg=\"6\">\r\n                                <Form>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Candidate First Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['candidate_name_first']} onChange={(event) => handleChange(event.target.value, 'candidate_name_first')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Candidate Last Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['candidate_name_last']} onChange={(event) => handleChange(event.target.value, 'candidate_name_last')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Candidate Email</Form.Label>\r\n                                        <Form.Control defaultValue={user['candidate_email']} onChange={(event) => handleChange(event.target.value, 'candidate_email')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Interviewer First Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['interviewer_name_first']} onChange={(event) => handleChange(event.target.value, 'interviewer_name_first')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Interviewer Last Name</Form.Label>\r\n                                        <Form.Control defaultValue={user['interviewer_name_last']} onChange={(event) => handleChange(event.target.value, 'interviewer_name_last')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Interviewer Email</Form.Label>\r\n                                        <Form.Control defaultValue={user['interviewer_email']} onChange={(event) => handleChange(event.target.value, 'interviewer_email')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Social Link</Form.Label>\r\n                                        <Form.Control defaultValue={user['social_link']} onChange={(event) => handleChange(event.target.value, 'social_link')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Similarity</Form.Label>\r\n                                        <Form.Control defaultValue={user['similarity']} onChange={(event) => handleChange(event.target.value, 'similarity')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Verify Result</Form.Label>\r\n                                        <Form.Control defaultValue={user['verify_result']} onChange={(event) => handleChange(event.target.value, 'verify_result')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Date Of Interview</Form.Label>\r\n                                        <Form.Control type=\"datetime-local\" defaultValue={user['date_of_interview']} onChange={(event) => handleChange(event.target.value, 'date_of_interview')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Verify Photo</Form.Label>\r\n                                        <Form.Control defaultValue={user['verify_photo']} onChange={(event) => handleChange(event.target.value, 'verify_photo')} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Verify IDcard</Form.Label>\r\n                                        <Form.Control defaultValue={user['verify_idcard']} onChange={(event) => handleChange(event.target.value, 'verify_idcard')} />\r\n                                    </Form.Group>\r\n                                </Form>\r\n                                <Button style={{ margin: 10 }} onClick={() => update()} variant=\"primary\">Update</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        : null}\r\n                {error ? <Alert style={{ marginTop: 20 }} variant=\"danger\">{error}!</Alert> : null}\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default UpdateUser;","import React, { useEffect, useState } from 'react';\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport config from \"../config/front_config\";\r\n\r\nconst VerificationBase = () => {\r\n\r\n    const [verificationErrors, setVerificationErrors] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n    const history = useHistory();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    const vouchedBaseLoaded = () => {\r\n        var vouched = window.Vouched({\r\n            appId: config.vouched_PUBLIC_KEY,\r\n            crossDevice: true,\r\n            crossDeviceQRCode: true,\r\n            onSubmit: ({ stage, attempts, job }) => {\r\n                console.log('submit', { stage, attempts, job });\r\n            },\r\n            onCamera: ({ hasCamera, hasPermission }) => {\r\n                console.log('onCamera', { hasCamera, hasPermission });\r\n            },\r\n            onInit: ({ token }) => {\r\n                console.log('initialization');\r\n            },\r\n            onDone: (job) => {\r\n                console.log(job);\r\n                onVerificationCompleted(job);\r\n            },\r\n            stepTitles: {\r\n                FrontId: 'Upload ID',\r\n                Face: 'Upload Headshot',\r\n                Done: 'Finished'\r\n            },\r\n            content: {\r\n                cameraButton: 'Take a Photo',\r\n                crossDeviceTitle: 'Identity Verification',\r\n                crossDeviceInstructions: 'We need to verify your identity. This requires government-issued photo ID as well as selfie. Please follow the instructions below to continue the verification process on your phone',\r\n                crossDeviceSuccess: 'Verification is complete, continue on your desktop',\r\n                review: 'Verification complete',\r\n                upperSuccess: 'Your photo uploads are complete!',\r\n                success: 'Please close this window to return your online visit.',\r\n                lowerSuccess: 'Thank you.',\r\n                upperIdInstructions:\r\n                    'Before you start please have an approved Government ID (e.g. Passport / Driving License) in your hand.',\r\n                lowerIdInstructions: 'Please take a photo of your ID now',\r\n                upperFaceInstructions: 'Time to take a photo.',\r\n                lowerFaceInstructions: 'Please take a clear picture of your face, and make sure it does not include:',\r\n                upperFailure: 'Try Again',\r\n                verifyFail: 'Sorry for the inconvenience',\r\n                lowerFailure:\r\n                    \"The photo you shared can't be used for validation. Please take another picture, making sure the image of your face or your ID is clear.\"\r\n            },\r\n            theme: {\r\n                name: 'verbose',\r\n                font: 'Open Sans',\r\n                fontColor: '#413d3a',\r\n                iconLabelColor: '#413d3a',\r\n                bgColor: '#FFF',\r\n                baseColor: '#62ACDE',\r\n                navigationDisabledBackground: '#b3def1',\r\n                navigationDisabledText: '#a3d7ee',\r\n                // logo: {\r\n                //     src: 'https://static.vouched.id/customers/blocktriangle/logo.jpg',\r\n                //     style: {\r\n                //         maxWidth: 150,\r\n                //         marginBottom: 30\r\n                //     }\r\n                // },\r\n                navigationActiveText: '#413d3a',\r\n                iconColor: '#f6f5f3',\r\n                iconBackground: '#62ACDE'\r\n            }\r\n        });\r\n        vouched.mount(\"#vouched-element\");\r\n    }\r\n\r\n    const initVouchedBase = () => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://static.vouched.id/widget/vouched.js\";\r\n        script.async = true;\r\n        script.onload = () => vouchedBaseLoaded();\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    const onVerificationCompleted = (verificationResult) => {\r\n        if (verificationResult) {\r\n            const errors = verificationResult.errors;\r\n            if (errors && errors.length) {\r\n                setVerificationErrors(errors);\r\n            } else {\r\n                alert(\"ID Verification completed successfully!\");\r\n                updateUserAndNavToPhotoVerify();\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        initVouchedBase();\r\n        getUserWithToken();\r\n    }, []);\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else if (!(data['data']['verify_photo'])) {\r\n                        history.push('/userphoto?token='+token);\r\n                    } else {\r\n                        history.push('/userid?token='+token);\r\n                    }\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const updateUserAndNavToPhotoVerify = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.updateUserInfo, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token,\r\n                id_verification_result: 'verified'\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['status']) {\r\n                history.push('/userphoto?token='+token);\r\n            } else {\r\n                alert('Sorry, for the Inconvenience caused by us!. please try again in some time.');\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            alert('Sorry, for the Inconvenience caused by us!. please try again in some time.');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{textAlign: 'center'}}>\r\n            {isLoading ? <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    textAlign: 'center',\r\n                    backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                    zIndex: 999\r\n                }}>\r\n                <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n            </div> : null}\r\n            <ul class=\"progressbar\">\r\n                <li>Identity Verification</li>\r\n                <li>Photo Verification</li>\r\n                <li>ID Verification</li>\r\n                <li>Verification completed successfully</li>\r\n            </ul>\r\n            </Container>\r\n            <div style={{ marginTop: 100 }}>\r\n                <div id='vouched-element' />\r\n                <div style={{ marginLeft: '40%' }}>\r\n                    <h4>Scan and open the link which is on QR code!.</h4>\r\n                </div>\r\n            </div>\r\n            {(verificationErrors && verificationErrors.length) ?\r\n                <div style={{ marginLeft: '40%', color: 'red' }}>\r\n                    <h2>Verification Not completed!</h2>\r\n                    <ul style={{ fontSize: 25 }}>\r\n                        {verificationErrors.map(error => <li>{error.message}</li>)}\r\n                    </ul>\r\n                </div>\r\n                : null}\r\n                {/* <p onClick={() => updateUserAndNavToPhotoVerify()}>click</p> */}\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default VerificationBase;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Divider } from \"rsuite\";\r\nimport config from \"../config/front_config\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nlet videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nconst UserPhoto = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [imageSrc, setImageSrc] = useState();\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [uploadingProgress, setUploadingProgress] = useState();\r\n    const webcamRef = React.createRef();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n        var osStatus = getMobileOperatingSystem();\r\n        if (osStatus == 'Android' || osStatus == 'iOS') {\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }, []);\r\n\r\n    const getMobileOperatingSystem = () => {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else if (data['data']['verify_photo']) {\r\n                        history.push('/userid?token=' + token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        if (webcamRef && webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                alert('Camera is not connected!!');\r\n                return;\r\n            }\r\n            setImageSrc(imageSrc);\r\n            setIsPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    const uploadPhoto = () => {\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const imageToUpload = dataURItoBlob(imageSrc);\r\n        const fileName = user.id + '_face.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setUploadingProgress(.1);\r\n        bucket.putObject(params, function (err, data) {\r\n            setUploadingProgress(0);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_photo: fileName\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        alert('photo uploaded successfully!');\r\n                        history.push('/userid?token=' + token);\r\n                    } else {\r\n                        alert('photo upload faild!');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    alert('photo upload faild!');\r\n                });\r\n            } else {\r\n                alert((err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            const percent = parseInt(progress.loaded / progress.total * 100);\r\n            setUploadingProgress(percent);\r\n        });\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const photoContainer = () => {\r\n        return (\r\n            <div>\r\n                <Row style={{ marginTop: 50 }}>\r\n                    <Col>\r\n                        <h1>Step 2. Verify Your Information</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row style={{ marginTop: 30 }}>\r\n                    <Col>\r\n                        <h4>Your Face Photo</h4>\r\n                        {isPhotoTaken ?\r\n                            <div>\r\n                                <Row style={{ justifyContent: 'center' }}>\r\n                                    <img src={imageSrc} style={{ marginBottom: 6, alignSelf: 'center', display: 'inline-block' }} />\r\n                                </Row>\r\n                                <Row style={{ justifyContent: 'space-evenly' }}>\r\n                                    <Button style={{ marginLeft: 30, display: 'inline-block' }} variant=\"warning\" onClick={() => uploadPhoto()}>Upload</Button>\r\n                                    <Button variant=\"primary\" onClick={() => setIsPhotoTaken(false)}>Retake Photo</Button>\r\n                                </Row>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Webcam\r\n                                    style={{ display: 'inline-block' }}\r\n                                    audio={false}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button variant=\"primary\" onClick={() => takePhoto()}>Take A Photo</Button>\r\n                                </p>\r\n                            </div>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : null}\r\n                <ul class=\"progressbar\">\r\n                    <li class=\"active\">Identity Verification</li>\r\n                    <li>Photo Verification</li>\r\n                    <li>ID Verification</li>\r\n                    <li>Verification completed successfully</li>\r\n                </ul>\r\n                {photoContainer()}\r\n                {uploadingProgress > 0 && <ProgressBar now={uploadingProgress} label={uploadingProgress + '%'} animated/>}\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default UserPhoto;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Divider } from \"rsuite\";\r\nimport config from \"../config/front_config\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nlet videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nconst mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\nconst UserId = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState();\r\n    const [imageSrc, setImageSrc] = useState();\r\n    const [isPhotoTaken, setIsPhotoTaken] = useState();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [uploadingProgress, setUploadingProgress] = useState();\r\n    const webcamRef = React.createRef();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n        var osStatus = getMobileOperatingSystem();\r\n        if (osStatus == 'Android' || osStatus == 'iOS') {\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }, []);\r\n\r\n    const getMobileOperatingSystem = () => {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (data['data']['verify_result']) {\r\n                        alert('All your verification has been completed!.');\r\n                        history.push('/verifisuccess?token=' + token);\r\n                    } else if (!(data['data']['verify_photo'])) {\r\n                        history.push('/userphoto?token='+token);\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    const takePhoto = () => {\r\n        if (webcamRef && webcamRef.current) {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                alert('Camera is not connected!!');\r\n                return;\r\n            }\r\n            setImageSrc(imageSrc);\r\n            setIsPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    const uploadPhoto = () => {\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        const bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } });\r\n        const imageToUpload = dataURItoBlob(imageSrc);\r\n        const fileName = user.id + '_id.jpg';\r\n        const imgFileToUpload = new File([imageToUpload], fileName);\r\n        const params = { Key: imgFileToUpload.name, ContentType: \"image/jpeg\", Body: imgFileToUpload };\r\n        setUploadingProgress(.1);\r\n        bucket.putObject(params, function (err, data) {\r\n            setUploadingProgress(0);\r\n            if (!err) {\r\n                setIsLoading(true);\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        token,\r\n                        verify_idcard: fileName\r\n                    }),\r\n                }).then(res => res.json()).then(data => {\r\n                    setIsLoading(false);\r\n                    if (data.status) {\r\n                        setUser(data);\r\n                        verificationResult();\r\n                    } else {\r\n                        alert('photo upload faild!');\r\n                    }\r\n                }).catch(err => {\r\n                    setIsLoading(false);\r\n                    alert('photo upload faild!');\r\n                });\r\n            } else {\r\n                alert((err && err.message) ? err.message : 'photo upload faild!');\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            const percent = parseInt(progress.loaded / progress.total * 100);\r\n            setUploadingProgress(percent);\r\n        });\r\n    }\r\n\r\n    const dataURItoBlob = (dataURI) => {\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    const verificationResult = () => {\r\n        const bucket = config.aws.bucket;\r\n        const photoSrc = user.verify_photo;\r\n        const idSrc = user.verify_idcard;\r\n        if (photoSrc && idSrc) {\r\n            setIsLoading(true);\r\n            AWS.config.update({\r\n                accessKeyId: config.aws.accessKey,\r\n                secretAccessKey: config.aws.secretKey,\r\n                region: config.aws.region\r\n            })\r\n            const client = new AWS.Rekognition();\r\n            const params = {\r\n                SourceImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: photoSrc,\r\n                    },\r\n                },\r\n                TargetImage: {\r\n                    S3Object: {\r\n                        Bucket: bucket,\r\n                        Name: idSrc,\r\n                    },\r\n                },\r\n                SimilarityThreshold: 70,\r\n            };\r\n            client.compareFaces(params, function (err, response) {\r\n                setIsLoading(false);\r\n                if (err) {\r\n                    alert('You didn\\'t upload exact personal photo.');\r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    alert('User and ID is not matched!');\r\n                    return;\r\n                }\r\n                response.FaceMatches.forEach((data) => {\r\n                    const similarity = data.Similarity;\r\n                    setIsLoading(true);\r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        setIsLoading(false);\r\n                        if (data.status) {\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                                .then(data => {\r\n                                    if (data.status) {\r\n                                        alert('verification success!');\r\n                                        history.push('/verifisuccess?token=' + token);\r\n                                    }\r\n                                    else {\r\n                                        alert('Error sending mail!.');\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            alert('Error on verification!');\r\n                        }\r\n                    }).catch(err => {\r\n                        setIsLoading(false);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const photoContainer = () => {\r\n        return (\r\n            <div>\r\n                <Row style={{ marginTop: 50 }}>\r\n                    <Col>\r\n                        <h1>Step 3. Verify Your Information</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row style={{ marginTop: 30 }}>\r\n                    <Col>\r\n                        <h4>Upload Your ID Card</h4>\r\n                        {isPhotoTaken ?\r\n                            <div>\r\n                                <Row style={{ justifyContent: 'center' }}>\r\n                                    <img src={imageSrc} style={{ marginBottom: 6, alignSelf: 'center', display: 'inline-block' }} />\r\n                                </Row>\r\n                                <Row style={{ justifyContent: 'space-evenly' }}>\r\n                                    <Button style={{ marginLeft: 30, display: 'inline-block' }} variant=\"warning\" onClick={() => uploadPhoto()}>Upload</Button>\r\n                                <Button variant=\"primary\" onClick={() => setIsPhotoTaken(false)}>Retake Photo</Button>\r\n                                </Row>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                <Webcam\r\n                                    style={{ display: 'inline-block' }}\r\n                                    audio={false}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button variant=\"primary\" onClick={() => takePhoto()}>Take A Photo</Button>\r\n                                </p>\r\n                            </div>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : null}\r\n                <ul class=\"progressbar\">\r\n                    <li class=\"active\">Identity Verification</li>\r\n                    <li class=\"active\">Photo Verification</li>\r\n                    <li>ID Verification</li>\r\n                    <li>Verification completed successfully</li>\r\n                </ul>\r\n                {photoContainer()}\r\n                {uploadingProgress > 0 && <ProgressBar now={uploadingProgress} label={uploadingProgress + '%'} animated />}\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default UserId;","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, useLocation, useHistory } from \"react-router-dom\";\r\nimport config from \"../config/front_config\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst VerificationSuccess = () => {\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    const { search } = useLocation();\r\n    const query = new URLSearchParams(search);\r\n    const token = query.get('token');\r\n\r\n    useEffect(() => {\r\n        getUserWithToken();\r\n    }, []);\r\n\r\n    const getUserWithToken = () => {\r\n        setIsLoading(true);\r\n        fetch(config.api.getUser, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            setIsLoading(false);\r\n            if (data && data['data'] && data['data']['token']) {\r\n                setUser(data['data']);\r\n                if (data['data']['id_verification_result'] == \"verified\") {\r\n                    if (!(data['data']['verify_result'])) {\r\n                        if (data['data']['verify_photo']) {\r\n                            history.push('/userid?token=' + token);\r\n                        } else {\r\n                            history.push('/userphoto?token=' + token);\r\n                        }\r\n                    }\r\n                } else {\r\n                    history.push('/verifyID?token=' + token);\r\n                }\r\n            } else {\r\n                alert('User not found!.');\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {isLoading ? <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        textAlign: 'center',\r\n                        backgroundColor: 'rgba(16, 16, 16, 0.5)',\r\n                        zIndex: 999\r\n                    }}>\r\n                    <Spinner style={{ textAlign: 'center', marginTop: '30%' }} animation=\"border\" />\r\n                </div> : null}\r\n                <div>\r\n                    <ul class=\"progressbar\">\r\n                        <li class=\"active\">Identity Verification</li>\r\n                        <li class=\"active\">Photo Verification</li>\r\n                        <li class=\"active\">ID Verification</li>\r\n                        <li class=\"active\">Verification completed successfully</li>\r\n                    </ul>\r\n                </div>\r\n                <div style={{ paddingTop: 200 }}>\r\n                    <h1>Congratulation!, you have completed verification process</h1>\r\n                </div>\r\n            </Container>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default VerificationSuccess;","import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport Webcam from \"react-webcam\";\r\nimport AWS from \"aws-sdk\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\n\r\nimport config from \"../config/front_config\";\r\nimport { Divider } from \"rsuite\";\r\n\r\nvar videoConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: 'user',\r\n};\r\n\r\nvar mobileConstraints = {\r\n    width: 1280,\r\n    height: 720,\r\n    facingMode: { exact: \"environment\" },\r\n};\r\n\r\n\r\nclass IDAuth extends React.Component {\r\n    // webcamRef = React.useRef(null);\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        let query = new URLSearchParams(props.location.search);\r\n        let userToken = query.get('token');\r\n        if (!userToken) {\r\n            window.location.href = '/';\r\n            return;\r\n        }\r\n\r\n        let authStep = parseInt(userToken.substr(-1)) - 8;\r\n        userToken = userToken.substr(0, userToken.length - 1);\r\n\r\n        this.webcamRef = React.createRef();\r\n\r\n        this.state = {\r\n            userToken: userToken,\r\n            authStep: authStep,\r\n\r\n            verifyURL: config.siteUrl + config.api.verifyID + '?token=' + userToken + '9',\r\n\r\n            isPhotoTaken: false,\r\n            imageSrc: '',\r\n\r\n            photo_source: '',\r\n            photo_target: '',\r\n\r\n            uploadedPhoto: '',\r\n            uploadedId: '',\r\n\r\n            blob: '',\r\n\r\n            resultMsg: '',\r\n            msgColor: 'black',\r\n            resultBtnStatus: 0,\r\n\r\n            uploadingProgress: 0,\r\n            showLoadingIcon: {display: 'none'},\r\n            apiTmr: 0\r\n        };\r\n\r\n        this.photoCapture = this.photoCapture.bind(this);\r\n        this.photoTake = this.photoTake.bind(this);\r\n        this.comparePhoto = this.comparePhoto.bind(this);\r\n        this.navToVerify = this.navToVerify.bind(this);\r\n\r\n        var osStatus = this.getMobileOperatingSystem();\r\n        if(osStatus == 'Android' || osStatus == 'iOS'){\r\n            videoConstraints = mobileConstraints;\r\n        }\r\n    }\r\n\r\n    getMobileOperatingSystem() {\r\n        var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n        // Windows Phone must come first because its UA also contains \"Android\"\r\n        if (/windows phone/i.test(userAgent)) {\r\n            return \"Windows Phone\";\r\n        }\r\n        if (/android/i.test(userAgent)) {\r\n            return \"Android\";\r\n        }\r\n        // iOS detection from: http://stackoverflow.com/a/9039885/177710\r\n        if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {\r\n            return \"iOS\";\r\n        }\r\n        if (/JavaFX/.test(userAgent)) {\r\n            return 'JavaFx';\r\n        };\r\n        return \"unknown\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({ token: \"mQXA8d7YQGsj5FLgDstt\" }),\r\n        }).then(res => res.json()).then(data => {\r\n            debugger\r\n            if (data['status']) {\r\n                if (data.status) {\r\n                    that.state.photo_source = data.data.id + '_face.jpg';\r\n                    that.state.photo_target = data.data.id + '_id.jpg';\r\n                }\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            debugger\r\n            window.location.href=\"/\";\r\n        });\r\n\r\n        clearInterval(this.state.apiTmr);\r\n        if (!userToken) return;\r\n        this.state.apiTmr = setInterval(() => {\r\n            if (that.state.uploadedId) {\r\n                clearInterval(that.state.apiTmr);\r\n                return;\r\n            }\r\n            fetch(config.api.getUser, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                method: \"POST\",\r\n                body: JSON.stringify({ token: \"mQXA8d7YQGsj5FLgDstt\" }),\r\n            }).then(res => res.json()).then(data => {\r\n                that.setState({\r\n                    uploadedPhoto: data.data.verify_photo,\r\n                    uploadedId: data.data.verify_idcard,\r\n                });\r\n                if (data.data.verify_idcard) clearInterval(that.state.apiTmr);\r\n            }).catch(error => {\r\n                debugger\r\n                window.location.href=\"/\";\r\n            });\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    photoTake() {\r\n        var that = this;\r\n        var { isPhotoTaken } = this.state;\r\n\r\n        var imageSrc = '';\r\n        if (!isPhotoTaken) {\r\n            imageSrc = this.webcamRef.current.getScreenshot();\r\n            if (!imageSrc) {\r\n                this.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Camera is not connected!!',\r\n                    imageSrc: ''\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isPhotoTaken: !isPhotoTaken,\r\n            imageSrc: imageSrc\r\n        });\r\n\r\n        console.log('--------- imageSrc');\r\n    }\r\n\r\n    photoCapture() {\r\n        var that = this;\r\n        var { authStep, userToken, imageSrc } = this.state;\r\n\r\n        /////////////////////////////////        \r\n        // that.setState({\r\n        //     authStep: authStep + 1,\r\n        // });\r\n        // return;\r\n        /////////////////////////////////\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n        var bucket = new AWS.S3({ params: { Bucket: config.aws.bucket } })\r\n        var fileName = photo_source;\r\n        if (authStep === 1) fileName = photo_target;\r\n\r\n        imageSrc = this.dataURItoBlob(imageSrc);\r\n        var imgFile = new File([imageSrc], fileName);\r\n        // var params = { Key: imgFile.name, ContentType: imgFile.type, Body: imgFile, ServerSideEncryption: 'None' };\r\n        var params = { Key: imgFile.name, ContentType: \"image/jpeg\", Body: imgFile };\r\n        that.setState({\r\n            msgColor: 'black',\r\n            resultMsg: '',\r\n            uploadingProgress: .1,\r\n        })\r\n        bucket.putObject(params, function (err, data) {\r\n            if (!err) {\r\n                // alert('Uploading done!!!');\r\n                var verifyType = { verify_photo: fileName };\r\n                if (authStep === 1) verifyType = { verify_idcard: fileName };\r\n                verifyType.token = userToken\r\n                fetch(config.api.updateUserInfo, {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(verifyType),\r\n                }).then(res => res.json()).then(data => {\r\n                    if (data.status) {\r\n                        if (authStep === 1){\r\n                            window.location.href=\"/idsuccess\";\r\n                        }\r\n                        else{\r\n                            that.setState({\r\n                                msgColor: 'black',\r\n                                resultMsg: 'Uploading done.',\r\n                            });\r\n                            console.log('-------- uploaded: ', data);\r\n                            setTimeout(function () {\r\n                                that.setState({\r\n                                    authStep: 0,\r\n                                    resultMsg: '',\r\n                                    imageSrc: '',\r\n                                    isPhotoTaken: false,\r\n                                    resultBtnStatus: 0,\r\n                                    uploadingProgress: 0\r\n                                });\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                    console.log('data', data.data)\r\n                });\r\n            } else {\r\n                alert(err.message);\r\n                return false;\r\n            }\r\n        }).on('httpUploadProgress', function (progress) {\r\n            console.log('---- uploading progress: ', progress);\r\n            console.log('---- uploading progress: ', progress.loaded / progress.total * 100);\r\n\r\n            var percent = parseInt(progress.loaded / progress.total * 100);\r\n            that.setState({\r\n                uploadingProgress: percent\r\n            })\r\n        });\r\n    }\r\n\r\n    navToVerify() {\r\n        var that = this;\r\n        var { userToken } = this.state;\r\n        this.setState({\r\n            showLoadingIcon: {display: 'inline-block'}\r\n        });\r\n        fetch(config.api.getUser, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                token: userToken\r\n            }),\r\n        }).then(res => res.json()).then(data => {\r\n            if (data.status) {\r\n                var errMsg = ''\r\n                if (!data.data.verify_idcard) errMsg = \"You didn't upload id card photo.\";\r\n                if (!data.data.verify_photo) errMsg = \"You didn't upload face photo.\";\r\n                if (errMsg) {\r\n                    that.setState({\r\n                        msgColor: 'red',\r\n                        resultMsg: errMsg,\r\n                        showLoadingIcon: {display: 'none'}\r\n                    });\r\n                    return;\r\n                }\r\n                that.setState({\r\n                    photo_source: data.data.verify_photo,\r\n                    photo_target: data.data.verify_idcard,\r\n                })\r\n                that.comparePhoto();\r\n\r\n            } else {\r\n                that.setState({\r\n                    msgColor: 'red',\r\n                    resultMsg: 'Server connection failed.',\r\n                    showLoadingIcon: {display: 'none'}\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    dataURItoBlob(dataURI) {\r\n        // convert base64/URLEncoded data component to raw binary data held in a string\r\n        var binary = atob(dataURI.split(',')[1]);\r\n        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n        // console.log('-- mimeString: ', mimeString);\r\n        var array = [];\r\n        for (var i = 0; i < binary.length; i++) {\r\n            array.push(binary.charCodeAt(i));\r\n        }\r\n        return new Blob([new Uint8Array(array)], { type: mimeString });\r\n    }\r\n\r\n    comparePhoto() {\r\n        var that = this;\r\n        var { resultBtnStatus, userToken } = that.state;\r\n        if (resultBtnStatus) {\r\n            that.setState({\r\n                authStep: 0,\r\n                resultBtnStatus: 0,\r\n                showLoadingIcon: {display: 'none'}\r\n            })\r\n       \r\n            return;\r\n        }\r\n        const bucket = config.aws.bucket; // the bucketname without s3://\r\n\r\n        // const awsConfig = new AWS.Config({\r\n        //     accessKeyId: config.aws.accessKey,\r\n        //     secretAccessKey: config.aws.secretKey,\r\n        //     region: config.aws.region\r\n        // })\r\n\r\n        var { photo_source, photo_target } = this.state;\r\n\r\n        AWS.config.update({\r\n            accessKeyId: config.aws.accessKey,\r\n            secretAccessKey: config.aws.secretKey,\r\n            region: config.aws.region\r\n        })\r\n\r\n        const client = new AWS.Rekognition();\r\n        const params = {\r\n            SourceImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_source,\r\n                },\r\n            },\r\n            TargetImage: {\r\n                S3Object: {\r\n                    Bucket: bucket,\r\n                    Name: photo_target,\r\n                },\r\n            },\r\n            SimilarityThreshold: 70,\r\n        };\r\n\r\n        console.log('-- compare 0')\r\n        try {\r\n            client.compareFaces(params, function (err, response) {\r\n                if (err) {\r\n                    console.log(err, err.stack); // an error occurred                    \r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'You didn\\'t upload exact personal photo.',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                  \r\n                    return;\r\n                }\r\n                if (!response.FaceMatches.length) {\r\n                    that.setState({\r\n                        resultBtnStatus: 1,\r\n                        msgColor: 'red',\r\n                        resultMsg: 'User and ID is not matched!',\r\n                        showLoadingIcon: {display: 'none'}\r\n                    })\r\n                    return;\r\n                }\r\n               \r\n                response.FaceMatches.forEach((data) => {\r\n                   \r\n                    let position = data.Face.BoundingBox;\r\n                    let similarity = data.Similarity;\r\n                   \r\n                    fetch(config.api.updateUserInfo, {\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        method: \"POST\",\r\n                        body: JSON.stringify({\r\n                            token: userToken,\r\n                            verify_result: similarity\r\n                        }),\r\n                    }).then(res => res.json()).then(data => {\r\n                        if (data.status) {\r\n                            console.log('-------- uploaded: ', data);\r\n\r\n                            fetch(config.api.sendResultMail, {\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                method: \"POST\",\r\n                                body: JSON.stringify({\r\n                                    token: data.token,\r\n                                    similarity: similarity\r\n                                }),\r\n                            }).then(response => response.json())\r\n                            .then(data => {\r\n                             \r\nconsole.log(data);\r\n                                if(data.status){\r\n                                    window.location.href = data.data;\r\n                                }\r\n                                else{\r\n                                    that.setState({\r\n                                        resultBtnStatus: 1,\r\n                                        msgColor: 'red',\r\n                                        resultMsg: data.data,\r\n                                        showLoadingIcon: {display: 'none'}\r\n                                    });\r\n                                }\r\n                              });\r\n\r\n                        }\r\n                        console.log('data', data.data)\r\n                    });\r\n                }); // for response.faceDetails\r\n            });\r\n        } catch (err) {\r\n            that.setState({\r\n                resultBtnStatus: 1,\r\n                msgColor: 'red',\r\n                resultMsg: 'You didn\\'t upload exact personal photo.'\r\n            })\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { authStep } = this.state;\r\n\r\n        return (\r\n            <Container style={{ textAlign: \"center\" }}>\r\n                {true && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Step 2. Verify Your Information\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <h4>Your Face Photo</h4>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                            {authStep === 0 && (\r\n                                <Col>\r\n                                    <h4>Your ID card</h4>\r\n                                    <QRCode\r\n                                        value={this.state.verifyURL}\r\n                                        size={256}\r\n                                        level={'Q'}\r\n                                        includeMargin={true}\r\n                                    />\r\n                                    <p><a href={this.state.verifyURL}>{this.state.verifyURL}</a></p>\r\n                                    {this.state.uploadedId ? (\r\n                                        <p style={{ color: 'red' }}>ID has been submitted.</p>\r\n                                    ) : (\r\n                                            <p>Please scan this link and upload id card on your phone.</p>\r\n                                        )}\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button \r\n                                    variant=\"primary\"\r\n                                    onClick={this.navToVerify}\r\n                                >\r\n                                   <i style={this.state.showLoadingIcon} className=\"fa fa-spinner fa-spin\"></i>\r\n                                    Verify Information\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {(authStep === 1) && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>\r\n                                    Upload Your ID Card\r\n                                </h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <img src={this.state.imageSrc}\r\n                                    style={{\r\n                                        marginBottom: 6,\r\n                                        display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                    }}\r\n                                />\r\n                                <Webcam\r\n                                    style={{ display: (!this.state.isPhotoTaken ? 'inline-block' : 'none') }}\r\n                                    videoConstraints={videoConstraints}\r\n                                    screenshotFormat=\"image/jpeg\"\r\n                                    ref={this.webcamRef}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <p>\r\n                                    <Button\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoTake}\r\n                                    >\r\n                                        {(this.state.isPhotoTaken) ? 'Retake Photo' : 'Take A Photo'}\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{\r\n                                            marginLeft: 30,\r\n                                            display: (this.state.isPhotoTaken ? 'inline-block' : 'none')\r\n                                        }}\r\n                                        variant=\"primary\"\r\n                                        onClick={this.photoCapture}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.state.uploadingProgress > 0 && (\r\n                            <div>\r\n                                <Row style={{ marginTop: 30 }}>\r\n                                    <Col></Col>\r\n                                    <Col>\r\n                                        <ProgressBar\r\n                                            now={this.state.uploadingProgress}\r\n                                            label={this.state.uploadingProgress + '%'}\r\n                                            animated\r\n                                        />\r\n                                    </Col>\r\n                                    <Col></Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n                {authStep === 2 && (\r\n                    <div>\r\n                        <Row style={{ marginTop: 50 }}>\r\n                            <Col>\r\n                                <h1>Step 2. Verify Your Identity</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row style={{ marginTop: 30 }}>\r\n                            <Col>\r\n                                <Button\r\n                                    variant=\"primary\"\r\n                                    onClick={this.comparePhoto}\r\n                                >\r\n                                    {this.state.resultBtnStatus ? 'Upload again' : 'Verify'}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )}\r\n                <Row style={{ marginTop: 30, marginBottom: 30, color: this.state.msgColor }}>\r\n                    <Col>{this.state.resultMsg}</Col>\r\n                </Row>\r\n                {this.state.blob !== '' &&\r\n                    <img src={this.state.blob} alt=\"blob\" />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(IDAuth);\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport SubmitSuccess from \"./components/SubmitSuccess\";\r\nimport SubmitIDSuccess from \"./components/SubmitIDSuccess\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport config from \"./config/front_config\";\r\nimport UpdateUser from \"./components/UserUpdatePage\";\r\nimport VerificationBase from \"./components/VerificationBase\";\r\nimport UserPhoto from \"./components/UserPhoto\";\r\nimport UserId from \"./components/UserId\";\r\nimport VerificationSuccess from \"./components/VerificationSuccess\";\r\nimport IDAuth from \"./components/IDAuth\";\r\n\r\nconst AuthRoute = ({ children, ...rest }) => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n            token ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                <Navbar.Brand href=\"#\">ID Authenticate</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    {/* <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href={config.api.verifyID}>\r\n                        ID Auth\r\n                    </Nav.Link> */}\r\n                </Nav>\r\n            </Navbar>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\nrenders the first one that matches the current URL. */}\r\n            <Switch>\r\n                <Route path=\"/success\" children={<SubmitSuccess />} />\r\n                <Route path=\"/idsuccess\" children={<SubmitIDSuccess />} />\r\n                <Route path={config.api.verifyID} children={<VerificationBase />} />\r\n                <Route path=\"/submit\" children={<RegisterForm />} />\r\n                <Route path=\"/login\" children={<LoginPage />} />\r\n                <AuthRoute path=\"/admin/update/:id\" children={<UpdateUser />} />\r\n                <AuthRoute path=\"/admin\" children={<AdminPage />} />\r\n                <Route path=\"/userphoto\" children={<UserPhoto />} />\r\n                <Route path=\"/userid\" children={<UserId />} />\r\n                <Route path=\"/verifisuccess\" children={<VerificationSuccess />} />\r\n                <Route path=\"/idauth\" children={<IDAuth />} />\r\n                <Route path=\"/\" children={<LandingPage />} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}